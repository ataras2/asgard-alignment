 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 274, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 274, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 19, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 20, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 276, in <module>
    from pyBaldr import utilities as util
  File "/home/heimdallr/Documents/asgard-alignment/pyBaldr/utilities.py", line 20, in <module>
    import FliSdk_V2 
    ^^^^^^^^^^^^^^^^
  File "/opt/FirstLightImaging/FliSdk/Python/demo/FliSdk_V2.py", line 1, in <module>
    import LibLoader
  File "/opt/FirstLightImaging/FliSdk/Python/demo/LibLoader.py", line 12, in <module>
    lib = ctypes.cdll.LoadLibrary(_DIRNAME + "/lib/release/libFliSdk.so")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 454, in LoadLibrary
    return self._dlltype(name)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/ctypes/__init__.py", line 376, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: /lib/x86_64-linux-gnu/libgobject-2.0.so.0: undefined symbol: ffi_type_uint32, version LIBFFI_BASE_7.0
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 369, in <module>
    device_list = connection.detect_devices()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 782, in detect_devices
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.no_device_found_exception.NoDeviceFoundException: NoDeviceFoundException: Cannot find any device on the port. Make sure that you have opened correct port and devices are powered on.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 369, in <module>
    device_list = connection.detect_devices()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 782, in detect_devices
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.no_device_found_exception.NoDeviceFoundException: NoDeviceFoundException: Cannot find any device on the port. Make sure that you have opened correct port and devices are powered on.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 3 devices
Found 2 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e77d0f90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e74f8a90>}
    -available positions:
   ('J1', [2985.5636249999984, 3161.4665624999984])
   ('J2', [3165.2289374999987, 2143.982249999999])
   ('J3', [3710.0, 580.0])
   ('J4', [3509.9386874999987, 197.2389374999999])
   ('J5', [2794.9445624999985, 4106.036999999998])
   ('H1', [8034.099374999996, 4840.128749999998])
   ('H2', [8225.670937499997, 3825.716249999998])
   ('H3', [8400.716624999995, 2866.501124999999])
   ('H4', [8578.595999999996, 1878.329999999999])
   ('H5', [8758.046999999997, 890.2779374999996])
    -current position: [3665.005687499998, 558.9984374999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e74f9950>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e77d0f90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e74f8a90>}
    -available positions:
   ('J1', [2985.5636249999984, 3161.4665624999984])
   ('J2', [3165.2289374999987, 2143.982249999999])
   ('J3', [3710.0, 580.0])
   ('J4', [3509.9386874999987, 197.2389374999999])
   ('J5', [2794.9445624999985, 4106.036999999998])
   ('H1', [8034.099374999996, 4840.128749999998])
   ('H2', [8225.670937499997, 3825.716249999998])
   ('H3', [8400.716624999995, 2866.501124999999])
   ('H4', [8578.595999999996, 1878.329999999999])
   ('H5', [8758.046999999997, 890.2779374999996])
    -current position: [3710.011312499998, 580.0010624999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f83e74f9950>
    -current position: 3999.9999374999984um
img diff = 47.849421182546045, fine_tune_threshold=3
img diff = 8.221226106900588, fine_tune_threshold=3
img diff = 5.936186606835739, fine_tune_threshold=3
img diff = 6.753731318542945, fine_tune_threshold=3
img diff = 19.04948712973888, fine_tune_threshold=3
img diff = 9.36586797992718, fine_tune_threshold=3
img diff = 83.55914898186879, fine_tune_threshold=3
img diff = 7.658744307140173, fine_tune_threshold=3
img diff = 12.91778267680294, fine_tune_threshold=3
img diff = 13.765147662942422, fine_tune_threshold=3
img diff = 10.952336922024788, fine_tune_threshold=3
img diff = 6.310661822308413, fine_tune_threshold=3
img diff = 5.646157373189069, fine_tune_threshold=3
img diff = 6.714852250687482, fine_tune_threshold=3
img diff = 5.3891930374618155, fine_tune_threshold=3
img diff = 7.047421371453715, fine_tune_threshold=3
img diff = 6.277326590260175, fine_tune_threshold=3
img diff = 5.8338491918636795, fine_tune_threshold=3
img diff = 11.690010491710838, fine_tune_threshold=3
img diff = 6.220334546333056, fine_tune_threshold=3
img diff = 6.790218202331575, fine_tune_threshold=3
img diff = 6.792607797101088, fine_tune_threshold=3
img diff = 19.409079436784967, fine_tune_threshold=3
img diff = 7.226724037268527, fine_tune_threshold=3
img diff = 15.664384480408096, fine_tune_threshold=3
img diff = 6.760381038408366, fine_tune_threshold=3
img diff = 5.935939419494453, fine_tune_threshold=3
img diff = 5.259700035782696, fine_tune_threshold=3
img diff = 5.338321866788925, fine_tune_threshold=3
img diff = 5.5775947915898705, fine_tune_threshold=3
img diff = 5.265082052928075, fine_tune_threshold=3
img diff = 7.10724867616088, fine_tune_threshold=3
img diff = 6.806308129372132, fine_tune_threshold=3
img diff = 9.302350287965506, fine_tune_threshold=3
img diff = 18.306483539916893, fine_tune_threshold=3
img diff = 21.744319401771858, fine_tune_threshold=3
img diff = 11.01083195254182, fine_tune_threshold=3
img diff = 23.147950693753806, fine_tune_threshold=3
img diff = 5.477881052588659, fine_tune_threshold=3
img diff = 5.311724103652278, fine_tune_threshold=3
img diff = 5.691025264524612, fine_tune_threshold=3
img diff = 6.714532142609881, fine_tune_threshold=3
img diff = 5.73439637853508, fine_tune_threshold=3
img diff = 5.594710430447649, fine_tune_threshold=3
img diff = 6.203428460658213, fine_tune_threshold=3
img diff = 6.922655042671339, fine_tune_threshold=3
img diff = 8.086374659570335, fine_tune_threshold=3
img diff = 9.392474369239041, fine_tune_threshold=3
img diff = 5.974950037165354, fine_tune_threshold=3
img diff = 70.04912330723101, fine_tune_threshold=3
img diff = 5.186815838884929, fine_tune_threshold=3
img diff = 59.06150027522972, fine_tune_threshold=3
img diff = 5.855049282053875, fine_tune_threshold=3
img diff = 26.712503791042174, fine_tune_threshold=3
img diff = 7.31590592594797, fine_tune_threshold=3
img diff = 21.419937402567065, fine_tune_threshold=3
img diff = 5.6523442015552785, fine_tune_threshold=3
img diff = 5.676202366580162, fine_tune_threshold=3
img diff = 5.542333375683251, fine_tune_threshold=3
img diff = 5.3673961587255175, fine_tune_threshold=3
img diff = 12.272013764276018, fine_tune_threshold=3
img diff = 12.200538020326455, fine_tune_threshold=3
img diff = 6.470755915181584, fine_tune_threshold=3
img diff = 6.600391396952865, fine_tune_threshold=3
img diff = 7.0431168901972345, fine_tune_threshold=3
img diff = 7.700249063264103, fine_tune_threshold=3
img diff = 7.381776111871423, fine_tune_threshold=3
img diff = 8.566414614031135, fine_tune_threshold=3
img diff = 6.81041834981596, fine_tune_threshold=3
img diff = 6.176826031996581, fine_tune_threshold=3
img diff = 6.045598656111009, fine_tune_threshold=3
img diff = 5.17424917632675, fine_tune_threshold=3
img diff = 6.834404263852431, fine_tune_threshold=3
img diff = 6.193399815026023, fine_tune_threshold=3
img diff = 6.492497335833306, fine_tune_threshold=3
img diff = 5.972498203841946, fine_tune_threshold=3
img diff = 7.2176740034364135, fine_tune_threshold=3
img diff = 10.63416707485089, fine_tune_threshold=3
img diff = 8.172976869709448, fine_tune_threshold=3
img diff = 5.7075354026177045, fine_tune_threshold=3
img diff = 5.151604316734612, fine_tune_threshold=3
img diff = 5.959995966779662, fine_tune_threshold=3
img diff = 5.459322570487576, fine_tune_threshold=3
img diff = 5.292869863448816, fine_tune_threshold=3
img diff = 5.40120956152829, fine_tune_threshold=3
img diff = 6.567411780059791, fine_tune_threshold=3
img diff = 7.912030120181081, fine_tune_threshold=3
img diff = 5.231782644007781, fine_tune_threshold=3
img diff = 7.123391477175122, fine_tune_threshold=3
img diff = 7.355837165607648, fine_tune_threshold=3
img diff = 9.674819277764822, fine_tune_threshold=3
img diff = 39.37341371540918, fine_tune_threshold=3
img diff = 5.850769796359355, fine_tune_threshold=3
img diff = 7.457086517836081, fine_tune_threshold=3
img diff = 25.237960141238318, fine_tune_threshold=3
img diff = 9.715244069965948, fine_tune_threshold=3
img diff = 6.110796289758649, fine_tune_threshold=3
img diff = 5.360994592597549, fine_tune_threshold=3
img diff = 9.053285630930665, fine_tune_threshold=3
img diff = 7.850378427468238, fine_tune_threshold=3
img diff = 5.745264681796849, fine_tune_threshold=3
img diff = 8.462271170097935, fine_tune_threshold=3
img diff = 6.184803971261763, fine_tune_threshold=3
img diff = 6.448222235930574, fine_tune_threshold=3
img diff = 8.24589940377041, fine_tune_threshold=3
img diff = 5.443738954200221, fine_tune_threshold=3
img diff = 5.953105767479762, fine_tune_threshold=3
img diff = 5.858348623710572, fine_tune_threshold=3
img diff = 6.155790081452351, fine_tune_threshold=3
img diff = 5.312796695944112, fine_tune_threshold=3
img diff = 12.891176010086845, fine_tune_threshold=3
img diff = 5.545747433935042, fine_tune_threshold=3
img diff = 5.390725025168114, fine_tune_threshold=3
img diff = 5.97374301884055, fine_tune_threshold=3
img diff = 5.628415118422811, fine_tune_threshold=3
img diff = 17.78656317815569, fine_tune_threshold=3
img diff = 6.240230301379439, fine_tune_threshold=3
img diff = 5.635581363243357, fine_tune_threshold=3
img diff = 9.602271255835625, fine_tune_threshold=3
img diff = 5.475524594548844, fine_tune_threshold=3
img diff = 5.313342250566903, fine_tune_threshold=3
img diff = 5.309920993961175, fine_tune_threshold=3
img diff = 14.318561278410716, fine_tune_threshold=3
img diff = 16.638500683845756, fine_tune_threshold=3
img diff = 5.849025951715118, fine_tune_threshold=3
img diff = 7.800747881413147, fine_tune_threshold=3
img diff = 5.759078942569539, fine_tune_threshold=3
img diff = 19.574923991259745, fine_tune_threshold=3
img diff = 6.571085761400803, fine_tune_threshold=3
img diff = 10.08663369822105, fine_tune_threshold=3
img diff = 8.900166089844692, fine_tune_threshold=3
img diff = 12.84063169689678, fine_tune_threshold=3
img diff = 6.789549560449465, fine_tune_threshold=3
img diff = 5.547806122422914, fine_tune_threshold=3
img diff = 5.811224729921692, fine_tune_threshold=3
img diff = 5.477018272820047, fine_tune_threshold=3
img diff = 6.17832020007007, fine_tune_threshold=3
img diff = 12.154505630126527, fine_tune_threshold=3
img diff = 5.36823838945739, fine_tune_threshold=3
img diff = 5.26045641472175, fine_tune_threshold=3
img diff = 16.23332305079542, fine_tune_threshold=3
img diff = 5.727142072173537, fine_tune_threshold=3
img diff = 6.687924815610702, fine_tune_threshold=3
img diff = 15.892203057636422, fine_tune_threshold=3
img diff = 19.753386179157026, fine_tune_threshold=3
img diff = 6.972618200087352, fine_tune_threshold=3
img diff = 11.992641734216647, fine_tune_threshold=3
img diff = 14.654883400308023, fine_tune_threshold=3
img diff = 16.11595919931304, fine_tune_threshold=3
img diff = 10.704955115980379, fine_tune_threshold=3
img diff = 16.628781328878375, fine_tune_threshold=3
img diff = 6.252931275084491, fine_tune_threshold=3
img diff = 267.20780703336635, fine_tune_threshold=3
img diff = 289.5404633278527, fine_tune_threshold=3
img diff = 8.265808629030943, fine_tune_threshold=3
img diff = 6.680403028008297, fine_tune_threshold=3
img diff = 19.390259530487985, fine_tune_threshold=3
img diff = 11.896493616896553, fine_tune_threshold=3
img diff = 19.030932222915254, fine_tune_threshold=3
img diff = 7.027883460813072, fine_tune_threshold=3
img diff = 4.1566910864099516, fine_tune_threshold=3
img diff = 7.524403651940349, fine_tune_threshold=3
img diff = 8.015816532707749, fine_tune_threshold=3
img diff = 7.5989572341818095, fine_tune_threshold=3
img diff = 9.202143529532743, fine_tune_threshold=3
img diff = 7.6182459201827, fine_tune_threshold=3
img diff = 4.938939268933129, fine_tune_threshold=3
img diff = 4.543279387262512, fine_tune_threshold=3
img diff = 16.431845238269354, fine_tune_threshold=3
img diff = 5.462459312689946, fine_tune_threshold=3
img diff = 9.65882794616211, fine_tune_threshold=3
img diff = 4.125288346027609, fine_tune_threshold=3
img diff = 7.822341558000572, fine_tune_threshold=3
img diff = 4.412138614694521, fine_tune_threshold=3
img diff = 5.866596943727256, fine_tune_threshold=3
img diff = 9.574425616514015, fine_tune_threshold=3
img diff = 5.241636380362703, fine_tune_threshold=3
img diff = 5.725434797134997, fine_tune_threshold=3
img diff = 4.64937303829111, fine_tune_threshold=3
img diff = 4.851472098450513, fine_tune_threshold=3
img diff = 4.929214502020661, fine_tune_threshold=3
img diff = 5.066717464058774, fine_tune_threshold=3
img diff = 4.925951636670934, fine_tune_threshold=3
img diff = 4.035651168240668, fine_tune_threshold=3
img diff = 4.117887415338354, fine_tune_threshold=3
img diff = 3.8854241052429423, fine_tune_threshold=3
img diff = 4.190096834392273, fine_tune_threshold=3
img diff = 5.572362291056089, fine_tune_threshold=3
img diff = 4.800230949080692, fine_tune_threshold=3
img diff = 6.582464294373482, fine_tune_threshold=3
img diff = 4.454907930404026, fine_tune_threshold=3
img diff = 4.520572056114688, fine_tune_threshold=3
img diff = 6.2215086496630505, fine_tune_threshold=3
img diff = 4.805964290227569, fine_tune_threshold=3
img diff = 4.0960504812861345, fine_tune_threshold=3
img diff = 4.782864708956678, fine_tune_threshold=3
img diff = 10.094218775782839, fine_tune_threshold=3
img diff = 4.695501425339144, fine_tune_threshold=3
img diff = 9.415168423981441, fine_tune_threshold=3
img diff = 5.995797076181951, fine_tune_threshold=3
img diff = 5.850645982627758, fine_tune_threshold=3
img diff = 5.473559437692938, fine_tune_threshold=3
img diff = 5.332912976190542, fine_tune_threshold=3
img diff = 12.904994376941499, fine_tune_threshold=3
img diff = 4.991181492044614, fine_tune_threshold=3
img diff = 5.878750541183766, fine_tune_threshold=3
img diff = 7.477473598888006, fine_tune_threshold=3
img diff = 4.413494336763963, fine_tune_threshold=3
img diff = 10.42101605247413, fine_tune_threshold=3
img diff = 21.757369687666188, fine_tune_threshold=3
img diff = 4.294199337683306, fine_tune_threshold=3
img diff = 5.906853320914057, fine_tune_threshold=3
img diff = 7.385761306878635, fine_tune_threshold=3
img diff = 6.855583524098529, fine_tune_threshold=3
img diff = 6.262295355567096, fine_tune_threshold=3
img diff = 11.604395498738514, fine_tune_threshold=3
img diff = 24.813738002671702, fine_tune_threshold=3
img diff = 4.991792451115346, fine_tune_threshold=3
img diff = 7.355305395462514, fine_tune_threshold=3
img diff = 4.865324272785546, fine_tune_threshold=3
img diff = 5.015396731289289, fine_tune_threshold=3
img diff = 114.34555483994109, fine_tune_threshold=3
img diff = 4.441603547185243, fine_tune_threshold=3
img diff = 4.439413356679174, fine_tune_threshold=3
img diff = 4.257523052751321, fine_tune_threshold=3
img diff = 7.895288928263618, fine_tune_threshold=3
img diff = 4.048102289637863, fine_tune_threshold=3
img diff = 6.022360707260737, fine_tune_threshold=3
img diff = 11.645524074184827, fine_tune_threshold=3
img diff = 6.205959308038152, fine_tune_threshold=3
img diff = 11.717813278481525, fine_tune_threshold=3
img diff = 30.723267575986036, fine_tune_threshold=3
img diff = 10.630759694821784, fine_tune_threshold=3
img diff = 4.656021601752192, fine_tune_threshold=3
img diff = 6.873669318428004, fine_tune_threshold=3
img diff = 10.591468571659107, fine_tune_threshold=3
img diff = 15.114265235586371, fine_tune_threshold=3
img diff = 6.5419653856611255, fine_tune_threshold=3
img diff = 4.535436182709457, fine_tune_threshold=3
img diff = 5.04986212176951, fine_tune_threshold=3
img diff = 3.7806685134667664, fine_tune_threshold=3
img diff = 7.214753716349497, fine_tune_threshold=3
img diff = 6.142311651554518, fine_tune_threshold=3
img diff = 5.179491295553221, fine_tune_threshold=3
img diff = 4.056759984079175, fine_tune_threshold=3
img diff = 3.7332388172524356, fine_tune_threshold=3
img diff = 4.951070103432439, fine_tune_threshold=3
img diff = 24.219485174179045, fine_tune_threshold=3
img diff = 3.7499044671021906, fine_tune_threshold=3
img diff = 10.193037408380633, fine_tune_threshold=3
img diff = 96.9248473615545, fine_tune_threshold=3
img diff = 4.40833158102612, fine_tune_threshold=3
img diff = 3.7877167138639614, fine_tune_threshold=3
img diff = 6.954924273420143, fine_tune_threshold=3
img diff = 5.155510598966424, fine_tune_threshold=3
img diff = 9.701135850949896, fine_tune_threshold=3
img diff = 3.803019705588988, fine_tune_threshold=3
img diff = 5.844608962782416, fine_tune_threshold=3
img diff = 7.03151520510183, fine_tune_threshold=3
img diff = 4.454496707059152, fine_tune_threshold=3
img diff = 6.166864169629774, fine_tune_threshold=3
img diff = 37.50619977965809, fine_tune_threshold=3
img diff = 4.827736732320482, fine_tune_threshold=3
img diff = 5.1938064902117596, fine_tune_threshold=3
img diff = 15.845293820371497, fine_tune_threshold=3
img diff = 4.516050323672686, fine_tune_threshold=3
img diff = 11.877435631886822, fine_tune_threshold=3
img diff = 3.6687154680812455, fine_tune_threshold=3
img diff = 5.639082745609906, fine_tune_threshold=3
img diff = 7.327579560956678, fine_tune_threshold=3
img diff = 2.9775296927956996, fine_tune_threshold=3
img diff = 3.6843044189144747, fine_tune_threshold=3
img diff = 5.00463138445471, fine_tune_threshold=3
img diff = 5.155080320875346, fine_tune_threshold=3
img diff = 3.323197727100977, fine_tune_threshold=3
img diff = 3.4064944762423943, fine_tune_threshold=3
img diff = 7.715184189025943, fine_tune_threshold=3
img diff = 2.7817543096988473, fine_tune_threshold=3
img diff = 3.6748500475750525, fine_tune_threshold=3
img diff = 136.5607633478744, fine_tune_threshold=3
img diff = 2.6948117843365598, fine_tune_threshold=3
img diff = 9.217800475350606, fine_tune_threshold=3
img diff = 8.123148296354083, fine_tune_threshold=3
img diff = 6.217071185368095, fine_tune_threshold=3
img diff = 25.242933262244648, fine_tune_threshold=3
img diff = 6.989491301054606, fine_tune_threshold=3
img diff = 7.579232446429611, fine_tune_threshold=3
img diff = 5.515637827892978, fine_tune_threshold=3
img diff = 6.286755112058831, fine_tune_threshold=3
img diff = 11.66504971954462, fine_tune_threshold=3
img diff = 6.57655496624184, fine_tune_threshold=3
img diff = 4.795349646185851, fine_tune_threshold=3
img diff = 3.985036112473355, fine_tune_threshold=3
img diff = 3.3736989169082108, fine_tune_threshold=3
img diff = 4.678471236509916, fine_tune_threshold=3
img diff = 3.7820014630817944, fine_tune_threshold=3
img diff = 3.8497576741752884, fine_tune_threshold=3
img diff = 3.5961036978294, fine_tune_threshold=3
img diff = 3.4310194831222534, fine_tune_threshold=3
img diff = 4.432965124368212, fine_tune_threshold=3
img diff = 4.390675522677551, fine_tune_threshold=3
img diff = 5.424213897887419, fine_tune_threshold=3
img diff = 4.4246637111534275, fine_tune_threshold=3
img diff = 4.462672427279758, fine_tune_threshold=3
img diff = 7.029757185601791, fine_tune_threshold=3
img diff = 11.816232896660663, fine_tune_threshold=3
img diff = 7.947064637683575, fine_tune_threshold=3
img diff = 4.639958243829981, fine_tune_threshold=3
img diff = 3.8050371974342174, fine_tune_threshold=3
img diff = 4.555859313705009, fine_tune_threshold=3
img diff = 5.324497314244454, fine_tune_threshold=3
img diff = 4.768589287093208, fine_tune_threshold=3
img diff = 4.371613631149033, fine_tune_threshold=3
img diff = 4.687608720670165, fine_tune_threshold=3
img diff = 8.506202419734773, fine_tune_threshold=3
img diff = 3.1804785120279506, fine_tune_threshold=3
img diff = 8.130045708089845, fine_tune_threshold=3
img diff = 3.1586679551801526, fine_tune_threshold=3
img diff = 4.649512293251416, fine_tune_threshold=3
img diff = 7.913233780069867, fine_tune_threshold=3
img diff = 26.445666376158385, fine_tune_threshold=3
img diff = 11.094794883483276, fine_tune_threshold=3
img diff = 10.282960705190973, fine_tune_threshold=3
img diff = 13.449600971496997, fine_tune_threshold=3
img diff = 21.626462441171686, fine_tune_threshold=3
img diff = 171.92435816413342, fine_tune_threshold=3
img diff = 23.02513771262346, fine_tune_threshold=3
img diff = 10.464594725807121, fine_tune_threshold=3
img diff = 13.398348304883545, fine_tune_threshold=3
img diff = 10.666467423448761, fine_tune_threshold=3
img diff = 10.437310785369844, fine_tune_threshold=3
img diff = 10.334021027643072, fine_tune_threshold=3
img diff = 10.155522761966509, fine_tune_threshold=3
img diff = 10.700349959752334, fine_tune_threshold=3
img diff = 10.307485030386397, fine_tune_threshold=3
img diff = 19.11973692523263, fine_tune_threshold=3
img diff = 10.916646737499192, fine_tune_threshold=3
img diff = 10.112264230427016, fine_tune_threshold=3
img diff = 10.559295535845985, fine_tune_threshold=3
img diff = 10.25426321248369, fine_tune_threshold=3
img diff = 12.251034868868562, fine_tune_threshold=3
img diff = 10.41190578189142, fine_tune_threshold=3
img diff = 40.037359844864625, fine_tune_threshold=3
img diff = 13.033520142531085, fine_tune_threshold=3
img diff = 11.352514709838587, fine_tune_threshold=3
img diff = 10.206524018135227, fine_tune_threshold=3
img diff = 11.391308793043308, fine_tune_threshold=3
img diff = 8073.320751215822, fine_tune_threshold=3
img diff = 68.57693756046967, fine_tune_threshold=3
img diff = 10.807213793265863, fine_tune_threshold=3
img diff = 10.542787965984683, fine_tune_threshold=3
img diff = 14.783540050706417, fine_tune_threshold=3
img diff = 15.656918584519005, fine_tune_threshold=3
img diff = 10.246534092358708, fine_tune_threshold=3
img diff = 10.322623395534942, fine_tune_threshold=3
img diff = 10.771367387540973, fine_tune_threshold=3
img diff = 11.882113170568893, fine_tune_threshold=3
img diff = 24.660820244614015, fine_tune_threshold=3
img diff = 10.109980811705242, fine_tune_threshold=3
img diff = 10.390018314882544, fine_tune_threshold=3
img diff = 10.760054458940091, fine_tune_threshold=3
img diff = 17.53708348633635, fine_tune_threshold=3
img diff = 10.833045872842307, fine_tune_threshold=3
img diff = 10.809165466988919, fine_tune_threshold=3
img diff = 16.903033273260455, fine_tune_threshold=3
img diff = 10.205731833750393, fine_tune_threshold=3
img diff = 10.224645462371356, fine_tune_threshold=3
img diff = 10.332165865100995, fine_tune_threshold=3
img diff = 12.45371725136517, fine_tune_threshold=3
img diff = 10.788497879735068, fine_tune_threshold=3
img diff = 14.096517055907379, fine_tune_threshold=3
img diff = 10.222994320947967, fine_tune_threshold=3
img diff = 13.553414482461486, fine_tune_threshold=3
img diff = 10.544566927259174, fine_tune_threshold=3
img diff = 10.257109831274661, fine_tune_threshold=3
img diff = 10.154208666189565, fine_tune_threshold=3
img diff = 10.743483535079653, fine_tune_threshold=3
img diff = 11.129928830346284, fine_tune_threshold=3
img diff = 10.147714479978728, fine_tune_threshold=3
img diff = 10.249914164380101, fine_tune_threshold=3
img diff = 11.077272515512417, fine_tune_threshold=3
img diff = 42.364453097299034, fine_tune_threshold=3
img diff = 10.634325120318943, fine_tune_threshold=3
img diff = 10.74276197990859, fine_tune_threshold=3
img diff = 15.77458600983261, fine_tune_threshold=3
img diff = 10.96687223593581, fine_tune_threshold=3
img diff = 10.606292024897927, fine_tune_threshold=3
img diff = 26.714376170454322, fine_tune_threshold=3
img diff = 16.217055175487396, fine_tune_threshold=3
img diff = 10.622345395315655, fine_tune_threshold=3
img diff = 11.0068487183209, fine_tune_threshold=3
img diff = 11.320447045473301, fine_tune_threshold=3
img diff = 10.265467478892262, fine_tune_threshold=3
img diff = 10.47416931397716, fine_tune_threshold=3
img diff = 10.805710991794822, fine_tune_threshold=3
img diff = 11.231784555926936, fine_tune_threshold=3
img diff = 10.354967491623718, fine_tune_threshold=3
img diff = 10.367210565547117, fine_tune_threshold=3
img diff = 10.259516327467553, fine_tune_threshold=3
img diff = 10.138828814071612, fine_tune_threshold=3
img diff = 5.47289541834919, fine_tune_threshold=3
img diff = 3.630099662035576, fine_tune_threshold=3
img diff = 11.170040924110946, fine_tune_threshold=3
img diff = 6.860830680983465, fine_tune_threshold=3
img diff = 21.76568605797192, fine_tune_threshold=3
img diff = 15.65438809881774, fine_tune_threshold=3
img diff = 15.740116688108147, fine_tune_threshold=3
img diff = 10.809332451615012, fine_tune_threshold=3
img diff = 51.20213494819046, fine_tune_threshold=3
img diff = 21.778951483684327, fine_tune_threshold=3
img diff = 3.276552130294208, fine_tune_threshold=3
img diff = 7.563287189221073, fine_tune_threshold=3
img diff = 12.742655141885304, fine_tune_threshold=3
img diff = 3.841935865543989, fine_tune_threshold=3
img diff = 6.094583921489981, fine_tune_threshold=3
img diff = 5.669709616655281, fine_tune_threshold=3
img diff = 4.032285281829994, fine_tune_threshold=3
img diff = 14.460529344912153, fine_tune_threshold=3
img diff = 10.725708329365617, fine_tune_threshold=3
img diff = 4.927261558453147, fine_tune_threshold=3
img diff = 4.045951754013183, fine_tune_threshold=3
img diff = 4.8967456595100165, fine_tune_threshold=3
img diff = 6.502080210822314, fine_tune_threshold=3
img diff = 20.079077049262466, fine_tune_threshold=3
img diff = 21.67529419363139, fine_tune_threshold=3
img diff = 23.15437820660654, fine_tune_threshold=3
img diff = 9.342966988753847, fine_tune_threshold=3
img diff = 4.777873779113676, fine_tune_threshold=3
img diff = 4.110972548182327, fine_tune_threshold=3
img diff = 16.97611414264977, fine_tune_threshold=3
img diff = 4.295142796308941, fine_tune_threshold=3
img diff = 4.465567148391738, fine_tune_threshold=3
img diff = 5.508511518440642, fine_tune_threshold=3
img diff = 5.179457322389224, fine_tune_threshold=3
img diff = 6.107356142282169, fine_tune_threshold=3
img diff = 5.118780826320275, fine_tune_threshold=3
img diff = 4.466262052597735, fine_tune_threshold=3
img diff = 7.795960554263114, fine_tune_threshold=3
img diff = 15.327138190339308, fine_tune_threshold=3
img diff = 12.947616241131495, fine_tune_threshold=3
img diff = 4.469996333129237, fine_tune_threshold=3
img diff = 11.909217699705847, fine_tune_threshold=3
img diff = 5.514993068976802, fine_tune_threshold=3
img diff = 4.042946317074471, fine_tune_threshold=3
img diff = 6.473979396365927, fine_tune_threshold=3
img diff = 3.5200221708611483, fine_tune_threshold=3
img diff = 3.9214093091136504, fine_tune_threshold=3
img diff = 4.82820702380697, fine_tune_threshold=3
img diff = 4.501592544794837, fine_tune_threshold=3
img diff = 5.075380934447114, fine_tune_threshold=3
img diff = 4.130301553171765, fine_tune_threshold=3
img diff = 7.9914886838488295, fine_tune_threshold=3
img diff = 4.865371229138116, fine_tune_threshold=3
img diff = 4.944351552982878, fine_tune_threshold=3
img diff = 3.959231028279546, fine_tune_threshold=3
img diff = 3.714456552835321, fine_tune_threshold=3
img diff = 8.188464744834342, fine_tune_threshold=3
img diff = 3.3573008120781713, fine_tune_threshold=3
img diff = 5.034576178003617, fine_tune_threshold=3
img diff = 4.8555445700372335, fine_tune_threshold=3
img diff = 16.628411004798608, fine_tune_threshold=3
img diff = 6.774969269745143, fine_tune_threshold=3
img diff = 10.829371413020382, fine_tune_threshold=3
img diff = 80.91229916732556, fine_tune_threshold=3
img diff = 314.7576069408543, fine_tune_threshold=3
img diff = 33.45929956410019, fine_tune_threshold=3
img diff = 3.8354163216062473, fine_tune_threshold=3
img diff = 5.581682452359104, fine_tune_threshold=3
img diff = 4.90589380866063, fine_tune_threshold=3
img diff = 26.171300440187157, fine_tune_threshold=3
img diff = 3.5559383037344414, fine_tune_threshold=3
img diff = 4.017970899257015, fine_tune_threshold=3
img diff = 4.7314693523997855, fine_tune_threshold=3
img diff = 5.152946059959233, fine_tune_threshold=3
img diff = 4.099617905694608, fine_tune_threshold=3
img diff = 8.833907330162837, fine_tune_threshold=3
img diff = 5.224403481893484, fine_tune_threshold=3
img diff = 9.448512971616314, fine_tune_threshold=3
img diff = 9.148110550824956, fine_tune_threshold=3
img diff = 4.427811300838451, fine_tune_threshold=3
img diff = 6.211823907792674, fine_tune_threshold=3
img diff = 5.182838463800695, fine_tune_threshold=3
img diff = 5.112161158536761, fine_tune_threshold=3
img diff = 5.3969554432789675, fine_tune_threshold=3
img diff = 4.889508628314392, fine_tune_threshold=3
img diff = 5.463750111989617, fine_tune_threshold=3
img diff = 6.489093639901944, fine_tune_threshold=3
img diff = 10.820167400189629, fine_tune_threshold=3
img diff = 5.92722576115514, fine_tune_threshold=3
img diff = 6.459321350990811, fine_tune_threshold=3
img diff = 5.195912276517266, fine_tune_threshold=3
img diff = 9.458063021840458, fine_tune_threshold=3
img diff = 9.875054072172675, fine_tune_threshold=3
img diff = 6.370705970576692, fine_tune_threshold=3
img diff = 5.29506954564231, fine_tune_threshold=3
img diff = 4.968340595843184, fine_tune_threshold=3
img diff = 6.288800302896261, fine_tune_threshold=3
img diff = 10.376708495434452, fine_tune_threshold=3
img diff = 5.565373074366372, fine_tune_threshold=3
img diff = 5.892299327374014, fine_tune_threshold=3
img diff = 14.868504188585149, fine_tune_threshold=3
img diff = 5.626826358267449, fine_tune_threshold=3
img diff = 6.652601476486387, fine_tune_threshold=3
img diff = 50.82070466611599, fine_tune_threshold=3
img diff = 45.2314485165275, fine_tune_threshold=3
img diff = 6.9696430878611935, fine_tune_threshold=3
img diff = 5.073575545372471, fine_tune_threshold=3
img diff = 6.344450719909104, fine_tune_threshold=3
img diff = 5.533329596909263, fine_tune_threshold=3
img diff = 5.883277206148871, fine_tune_threshold=3
img diff = 5.015377044684231, fine_tune_threshold=3
img diff = 6.552961310988826, fine_tune_threshold=3
img diff = 5.97941625347686, fine_tune_threshold=3
img diff = 6.294425311233217, fine_tune_threshold=3
img diff = 5.905292219951907, fine_tune_threshold=3
img diff = 5.188898245561219, fine_tune_threshold=3
img diff = 5.534968339399466, fine_tune_threshold=3
img diff = 4.958124590613936, fine_tune_threshold=3
img diff = 5.68487888129703, fine_tune_threshold=3
img diff = 6.067333086511169, fine_tune_threshold=3
img diff = 4.985095966321245, fine_tune_threshold=3
img diff = 6.9578552731454995, fine_tune_threshold=3
img diff = 8.610009089435732, fine_tune_threshold=3
img diff = 6.043972469277755, fine_tune_threshold=3
img diff = 5.187099422349429, fine_tune_threshold=3
img diff = 10.839210916542644, fine_tune_threshold=3
img diff = 7.9361914550529535, fine_tune_threshold=3
img diff = 37.53736075585446, fine_tune_threshold=3
img diff = 35.338246108961144, fine_tune_threshold=3
img diff = 17.848611497590415, fine_tune_threshold=3
img diff = 15.47119349963501, fine_tune_threshold=3
img diff = 5.307218640461089, fine_tune_threshold=3
img diff = 10.84387885993733, fine_tune_threshold=3
img diff = 11.303276358799877, fine_tune_threshold=3
img diff = 5.195898803602745, fine_tune_threshold=3
img diff = 7.674400925898272, fine_tune_threshold=3
img diff = 5.5088437282591105, fine_tune_threshold=3
img diff = 7.654027541693276, fine_tune_threshold=3
img diff = 6.234320688592499, fine_tune_threshold=3
img diff = 5.29324951104814, fine_tune_threshold=3
img diff = 6.249388330249799, fine_tune_threshold=3
img diff = 5.399541349650949, fine_tune_threshold=3
img diff = 5.319945486780753, fine_tune_threshold=3
img diff = 5.50596323921293, fine_tune_threshold=3
img diff = 5.595912705077538, fine_tune_threshold=3
img diff = 13.80448373696515, fine_tune_threshold=3
img diff = 5.693168626691039, fine_tune_threshold=3
img diff = 10.491111266026845, fine_tune_threshold=3
img diff = 6.283580079208615, fine_tune_threshold=3
img diff = 9.508026899685852, fine_tune_threshold=3
img diff = 7.961169702579214, fine_tune_threshold=3
img diff = 6.490758258829247, fine_tune_threshold=3
img diff = 130.02095951336844, fine_tune_threshold=3
img diff = 15.073084242681302, fine_tune_threshold=3
img diff = 5.433921473570308, fine_tune_threshold=3
img diff = 8.841711062452454, fine_tune_threshold=3
img diff = 6.70259332498019, fine_tune_threshold=3
img diff = 10.489282333319144, fine_tune_threshold=3
img diff = 9.045585739074465, fine_tune_threshold=3
img diff = 5.3636875413185585, fine_tune_threshold=3
img diff = 16.171279122075553, fine_tune_threshold=3
img diff = 17.603099710705244, fine_tune_threshold=3
img diff = 16.231774238573045, fine_tune_threshold=3
img diff = 16.118423627697585, fine_tune_threshold=3
img diff = 16.124867888541772, fine_tune_threshold=3
img diff = 16.507163758751023, fine_tune_threshold=3
img diff = 16.146621050278604, fine_tune_threshold=3
img diff = 16.103241736743158, fine_tune_threshold=3
img diff = 18.274238510799112, fine_tune_threshold=3
img diff = 16.88921040688018, fine_tune_threshold=3
img diff = 16.540995883651416, fine_tune_threshold=3
img diff = 16.16235884693301, fine_tune_threshold=3
img diff = 27.550920311530874, fine_tune_threshold=3
img diff = 16.615996274352675, fine_tune_threshold=3
img diff = 80.11567382352852, fine_tune_threshold=3
img diff = 19.382399691043048, fine_tune_threshold=3
img diff = 16.099061677023546, fine_tune_threshold=3
img diff = 16.11059830732537, fine_tune_threshold=3
img diff = 53.38233864056802, fine_tune_threshold=3
img diff = 16.434846562337906, fine_tune_threshold=3
img diff = 16.733499001550896, fine_tune_threshold=3
img diff = 16.363036748417255, fine_tune_threshold=3
img diff = 19.372307039830346, fine_tune_threshold=3
img diff = 16.562012656208488, fine_tune_threshold=3
img diff = 16.367068607709648, fine_tune_threshold=3
img diff = 26.46169600701104, fine_tune_threshold=3
img diff = 16.237712622588628, fine_tune_threshold=3
img diff = 16.443732848546325, fine_tune_threshold=3
img diff = 16.072420613131982, fine_tune_threshold=3
img diff = 16.135477684076264, fine_tune_threshold=3
img diff = 20.168431780575524, fine_tune_threshold=3
img diff = 16.23794400149824, fine_tune_threshold=3
img diff = 31.20345910422624, fine_tune_threshold=3
img diff = 17.341325868244816, fine_tune_threshold=3
img diff = 28.55366006189015, fine_tune_threshold=3
img diff = 16.711658741761248, fine_tune_threshold=3
img diff = 16.390483052184255, fine_tune_threshold=3
img diff = 21.169461357859294, fine_tune_threshold=3
img diff = 16.124367215119996, fine_tune_threshold=3
img diff = 16.12265542259291, fine_tune_threshold=3
img diff = 16.15317794348961, fine_tune_threshold=3
img diff = 16.15515478716466, fine_tune_threshold=3
img diff = 16.175522663834126, fine_tune_threshold=3
img diff = 16.18711368821959, fine_tune_threshold=3
img diff = 16.20914897751783, fine_tune_threshold=3
img diff = 16.218843765889503, fine_tune_threshold=3
img diff = 16.183427122796505, fine_tune_threshold=3
img diff = 16.121119841873764, fine_tune_threshold=3
img diff = 16.365081593333596, fine_tune_threshold=3
img diff = 16.8795401366354, fine_tune_threshold=3
img diff = 16.131448214182566, fine_tune_threshold=3
img diff = 17.30472894756531, fine_tune_threshold=3
img diff = 18.04567303324706, fine_tune_threshold=3
img diff = 16.309361042332664, fine_tune_threshold=3
img diff = 30.253248244415612, fine_tune_threshold=3
img diff = 16.412967541657544, fine_tune_threshold=3
img diff = 16.22208737113042, fine_tune_threshold=3
img diff = 17.228572361162698, fine_tune_threshold=3
img diff = 16.340285579402074, fine_tune_threshold=3
img diff = 27.744713963299706, fine_tune_threshold=3
img diff = 16.134554921266634, fine_tune_threshold=3
img diff = 16.132455518327795, fine_tune_threshold=3
img diff = 16.20952619870927, fine_tune_threshold=3
img diff = 16.05897078243678, fine_tune_threshold=3
img diff = 16.066103790111857, fine_tune_threshold=3
img diff = 16.123818951162495, fine_tune_threshold=3
img diff = 16.462812765540896, fine_tune_threshold=3
img diff = 16.200575467718984, fine_tune_threshold=3
img diff = 16.16271220423851, fine_tune_threshold=3
img diff = 16.322665592534683, fine_tune_threshold=3
img diff = 16.33783374674477, fine_tune_threshold=3
img diff = 16.312575345158294, fine_tune_threshold=3
img diff = 17.196572421991455, fine_tune_threshold=3
img diff = 17.142167119370356, fine_tune_threshold=3
img diff = 18.25567883259615, fine_tune_threshold=3
img diff = 16.188335654121843, fine_tune_threshold=3
img diff = 16.177336631545288, fine_tune_threshold=3
img diff = 16.23145340501586, fine_tune_threshold=3
img diff = 16.272057021983613, fine_tune_threshold=3
img diff = 16.076816441872236, fine_tune_threshold=3
img diff = 59.048283049921395, fine_tune_threshold=3
img diff = 5.586248044987141, fine_tune_threshold=3
img diff = 5.057782450572672, fine_tune_threshold=3
img diff = 5.295676604444775, fine_tune_threshold=3
img diff = 44.661418462158714, fine_tune_threshold=3
img diff = 12.207925870345976, fine_tune_threshold=3
img diff = 12.295051698370472, fine_tune_threshold=3
img diff = 40.81580676159969, fine_tune_threshold=3
img diff = 4.312119898518404, fine_tune_threshold=3
img diff = 7.246220795910953, fine_tune_threshold=3
img diff = 4.051562696495264, fine_tune_threshold=3
img diff = 3.9278842226811572, fine_tune_threshold=3
img diff = 6.200473181404309, fine_tune_threshold=3
img diff = 9.401410856290445, fine_tune_threshold=3
img diff = 4.562061071245928, fine_tune_threshold=3
img diff = 5.078833772309386, fine_tune_threshold=3
img diff = 4.400919077706769, fine_tune_threshold=3
img diff = 6.643543701804921, fine_tune_threshold=3
img diff = 3.9579282849511532, fine_tune_threshold=3
img diff = 5.24170308044085, fine_tune_threshold=3
img diff = 35.887604786716665, fine_tune_threshold=3
img diff = 4.273735067386917, fine_tune_threshold=3
img diff = 7.272979513048851, fine_tune_threshold=3
img diff = 5.7756790548744785, fine_tune_threshold=3
img diff = 5.314667654624729, fine_tune_threshold=3
img diff = 5.899089672478716, fine_tune_threshold=3
img diff = 5.438478464388597, fine_tune_threshold=3
img diff = 6.5079112850931615, fine_tune_threshold=3
img diff = 9.242905466701764, fine_tune_threshold=3
img diff = 4.261418401945185, fine_tune_threshold=3
img diff = 20.510325635586092, fine_tune_threshold=3
img diff = 71.6054276970395, fine_tune_threshold=3
img diff = 13.997630625188764, fine_tune_threshold=3
img diff = 10.11392761484932, fine_tune_threshold=3
img diff = 15.296827075269611, fine_tune_threshold=3
img diff = 9.373970150909297, fine_tune_threshold=3
img diff = 54.74938041569625, fine_tune_threshold=3
img diff = 59.40116777787662, fine_tune_threshold=3
img diff = 5.358314080232921, fine_tune_threshold=3
img diff = 8.88885978101057, fine_tune_threshold=3
img diff = 21.287201009991122, fine_tune_threshold=3
img diff = 5.654994390660842, fine_tune_threshold=3
img diff = 4.449891764875517, fine_tune_threshold=3
img diff = 5.083407316359299, fine_tune_threshold=3
img diff = 5.979133075342059, fine_tune_threshold=3
img diff = 4.92486029928169, fine_tune_threshold=3
img diff = 4.508541309349052, fine_tune_threshold=3
img diff = 4.227127115831957, fine_tune_threshold=3
img diff = 5.7841369731796775, fine_tune_threshold=3
img diff = 9.91258805412792, fine_tune_threshold=3
img diff = 7.786908066091474, fine_tune_threshold=3
img diff = 8.707737666172658, fine_tune_threshold=3
img diff = 5.053549402449305, fine_tune_threshold=3
img diff = 4.057031220939619, fine_tune_threshold=3
img diff = 8.093418666847986, fine_tune_threshold=3
img diff = 4.187016541275861, fine_tune_threshold=3
img diff = 12.632499572730003, fine_tune_threshold=3
img diff = 6.444362358306362, fine_tune_threshold=3
img diff = 13.222105229350177, fine_tune_threshold=3
img diff = 15.32174999487718, fine_tune_threshold=3
img diff = 16.485897700560386, fine_tune_threshold=3
img diff = 5.175346305210062, fine_tune_threshold=3
img diff = 4.902574258376127, fine_tune_threshold=3
img diff = 3.9769375832430836, fine_tune_threshold=3
img diff = 4.631782423065208, fine_tune_threshold=3
img diff = 7.397681108122724, fine_tune_threshold=3
img diff = 3.8650610578166624, fine_tune_threshold=3
img diff = 4.523526620763304, fine_tune_threshold=3
img diff = 6.133538404612761, fine_tune_threshold=3
img diff = 4.223610734631347, fine_tune_threshold=3
img diff = 17.91640953904125, fine_tune_threshold=3
img diff = 4.36019643784167, fine_tune_threshold=3
img diff = 4.48988868594294, fine_tune_threshold=3
img diff = 19.725090555790004, fine_tune_threshold=3
img diff = 4.100426325173441, fine_tune_threshold=3
img diff = 7.275601693039615, fine_tune_threshold=3
img diff = 7.817666203686647, fine_tune_threshold=3
img diff = 6.478657781979739, fine_tune_threshold=3
img diff = 11.87018629801879, fine_tune_threshold=3
img diff = 4.052134250378057, fine_tune_threshold=3
img diff = 3.7954836175669193, fine_tune_threshold=3
img diff = 58.28609725751009, fine_tune_threshold=3
img diff = 5.004230280258225, fine_tune_threshold=3
img diff = 3.63137660601671, fine_tune_threshold=3
img diff = 5.000755171827818, fine_tune_threshold=3
img diff = 7.3047561417649565, fine_tune_threshold=3
img diff = 5.701667173756534, fine_tune_threshold=3
img diff = 3.8709445504546904, fine_tune_threshold=3
img diff = 4.050542104305781, fine_tune_threshold=3
img diff = 4.1271696276676595, fine_tune_threshold=3
img diff = 3.932172954142292, fine_tune_threshold=3
img diff = 4.101233126358826, fine_tune_threshold=3
img diff = 6.006742514906777, fine_tune_threshold=3
img diff = 4.599901121317467, fine_tune_threshold=3
img diff = 4.960850811138835, fine_tune_threshold=3
img diff = 4.433657481163767, fine_tune_threshold=3
img diff = 9.185089440900647, fine_tune_threshold=3
img diff = 9.231874392478183, fine_tune_threshold=3
img diff = 65.22711152332604, fine_tune_threshold=3
img diff = 5.246012715530776, fine_tune_threshold=3
img diff = 4607.225191337162, fine_tune_threshold=3
img diff = 6.861639424309441, fine_tune_threshold=3
img diff = 14.523161559145354, fine_tune_threshold=3
img diff = 35.8057497836516, fine_tune_threshold=3
img diff = 23.747280905324338, fine_tune_threshold=3
img diff = 4.951601902479668, fine_tune_threshold=3
img diff = 4.217860602315614, fine_tune_threshold=3
img diff = 9.879467270908446, fine_tune_threshold=3
img diff = 5.257656618750831, fine_tune_threshold=3
img diff = 6.728785636896521, fine_tune_threshold=3
img diff = 5.964264979139015, fine_tune_threshold=3
img diff = 4.015687495727057, fine_tune_threshold=3
img diff = 4.8728566627232865, fine_tune_threshold=3
img diff = 4.134089086153224, fine_tune_threshold=3
img diff = 3.631282905338879, fine_tune_threshold=3
img diff = 5.081625271739294, fine_tune_threshold=3
img diff = 4.4993120471469465, fine_tune_threshold=3
img diff = 4.700604297424115, fine_tune_threshold=3
img diff = 5.9505496284865345, fine_tune_threshold=3
img diff = 3.909964984157556, fine_tune_threshold=3
img diff = 12.817495039672304, fine_tune_threshold=3
img diff = 12.41392489435592, fine_tune_threshold=3
img diff = 5.487987957201294, fine_tune_threshold=3
img diff = 9.806959763844285, fine_tune_threshold=3
img diff = 6.3535403368446275, fine_tune_threshold=3
img diff = 27.06657897206871, fine_tune_threshold=3
img diff = 4.35038629719199, fine_tune_threshold=3
img diff = 37.59676012892447, fine_tune_threshold=3
img diff = 5.355901069375265, fine_tune_threshold=3
img diff = 14.054884131506265, fine_tune_threshold=3
img diff = 8.537863022493074, fine_tune_threshold=3
img diff = 6.972087302514273, fine_tune_threshold=3
img diff = 5.17415229499788, fine_tune_threshold=3
img diff = 8.956436811876621, fine_tune_threshold=3
img diff = 5.356256018462526, fine_tune_threshold=3
img diff = 4.0671872631555654, fine_tune_threshold=3
img diff = 3.7013975787882742, fine_tune_threshold=3
img diff = 3.984141286953286, fine_tune_threshold=3
img diff = 3.654310670319951, fine_tune_threshold=3
img diff = 3.778825539508042, fine_tune_threshold=3
img diff = 8.301344740751343, fine_tune_threshold=3
img diff = 4.194538326062766, fine_tune_threshold=3
img diff = 3.4901685494649906, fine_tune_threshold=3
img diff = 13.57667992115179, fine_tune_threshold=3
img diff = 4.995604698660611, fine_tune_threshold=3
img diff = 5.5243251530017785, fine_tune_threshold=3
img diff = 6.371499473275918, fine_tune_threshold=3
img diff = 7.469268301071267, fine_tune_threshold=3
img diff = 8.826543499889443, fine_tune_threshold=3
img diff = 8.2067466059741, fine_tune_threshold=3
img diff = 10.356732603559086, fine_tune_threshold=3
img diff = 8.227034149408459, fine_tune_threshold=3
img diff = 10.607704840518755, fine_tune_threshold=3
img diff = 18.147282707014988, fine_tune_threshold=3
img diff = 5.082974714826463, fine_tune_threshold=3
img diff = 6.0785103008486345, fine_tune_threshold=3
img diff = 7.322174331313763, fine_tune_threshold=3
img diff = 6.300680746270826, fine_tune_threshold=3
img diff = 5.788221386071023, fine_tune_threshold=3
img diff = 7.343496112219608, fine_tune_threshold=3
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 3 devices
Found 2 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a32fa950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a2fe39d0>}
    -available positions:
   ('J1', [2989.9689374999984, 3167.5387499999983])
   ('J2', [3206.662687499999, 2062.6863749999993])
   ('J3', [3634.6923749999983, 568.0709999999998])
   ('J4', [3558.087562499998, 189.6189374999999])
   ('J5', [2779.633124999999, 4075.9618124999984])
   ('H1', [7969.376999999996, 4793.099062499998])
   ('H2', [8253.483937499997, 3740.110312499998])
   ('H3', [8390.429624999995, 2880.6695624999984])
   ('H4', [8584.668187499996, 1840.063312499999])
   ('H5', [8733.043874999996, 890.2779374999996])
    -current position: [8733.043874999996, 890.2779374999996]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a2ff0950>
    -current position: 3999.9999374999984um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a32fa950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a2fe39d0>}
    -available positions:
   ('J1', [2989.9689374999984, 3167.5387499999983])
   ('J2', [3206.662687499999, 2062.6863749999993])
   ('J3', [3634.6923749999983, 568.0709999999998])
   ('J4', [3558.087562499998, 189.6189374999999])
   ('J5', [2779.633124999999, 4075.9618124999984])
   ('H1', [7969.376999999996, 4793.099062499998])
   ('H2', [8253.483937499997, 3740.110312499998])
   ('H3', [8390.429624999995, 2880.6695624999984])
   ('H4', [8584.668187499996, 1840.063312499999])
   ('H5', [8733.043874999996, 890.2779374999996])
    -current position: [3634.6923749999983, 568.0709999999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc6a2ff0950>
    -current position: 3999.9999374999984um
img diff = 46.452961824792524, fine_tune_threshold=3
img diff = 41.794074562998155, fine_tune_threshold=3
img diff = 38.80654777106828, fine_tune_threshold=3
img diff = 62.06592584243784, fine_tune_threshold=3
img diff = 44.0204630972766, fine_tune_threshold=3
img diff = 57.09744903715456, fine_tune_threshold=3
img diff = 38.751807310304464, fine_tune_threshold=3
img diff = 43.41314955753728, fine_tune_threshold=3
img diff = 43.627739980333914, fine_tune_threshold=3
img diff = 48.23519058744821, fine_tune_threshold=3
img diff = 70.24235096963864, fine_tune_threshold=3
img diff = 39.606129027173125, fine_tune_threshold=3
img diff = 56.34152596257138, fine_tune_threshold=3
img diff = 46.649153962368395, fine_tune_threshold=3
img diff = 40.26015131200721, fine_tune_threshold=3
img diff = 41.200226575103926, fine_tune_threshold=3
img diff = 44.71901696058296, fine_tune_threshold=3
img diff = 38.88395234128805, fine_tune_threshold=3
img diff = 76.60184665594544, fine_tune_threshold=3
img diff = 41.63705905169823, fine_tune_threshold=3
img diff = 40.006911866006384, fine_tune_threshold=3
img diff = 54.33787389498906, fine_tune_threshold=3
img diff = 39.14379160810811, fine_tune_threshold=3
img diff = 38.64085193432664, fine_tune_threshold=3
img diff = 40.54790507481079, fine_tune_threshold=3
img diff = 39.346598090763166, fine_tune_threshold=3
img diff = 38.90727105439416, fine_tune_threshold=3
img diff = 40.83776378303482, fine_tune_threshold=3
img diff = 44.00361296791803, fine_tune_threshold=3
img diff = 97.0386969026252, fine_tune_threshold=3
img diff = 38.92796650068561, fine_tune_threshold=3
img diff = 41.644722764939566, fine_tune_threshold=3
img diff = 42.340044587274456, fine_tune_threshold=3
img diff = 43.14339925088155, fine_tune_threshold=3
img diff = 75.63036877372906, fine_tune_threshold=3
img diff = 40.663683515702346, fine_tune_threshold=3
img diff = 61.89751496881872, fine_tune_threshold=3
img diff = 42.72085067732896, fine_tune_threshold=3
img diff = 54.056795815784376, fine_tune_threshold=3
img diff = 40.33663927078814, fine_tune_threshold=3
img diff = 67.37625356123654, fine_tune_threshold=3
img diff = 62.715138367704135, fine_tune_threshold=3
img diff = 92579.02632712614, fine_tune_threshold=3
img diff = 39.98626430114572, fine_tune_threshold=3
img diff = 41.639858670049804, fine_tune_threshold=3
img diff = 51.45190611189797, fine_tune_threshold=3
img diff = 42.94126186530054, fine_tune_threshold=3
img diff = 38.797285146490054, fine_tune_threshold=3
img diff = 44.27400954452866, fine_tune_threshold=3
img diff = 40.54422201169757, fine_tune_threshold=3
img diff = 43.34657629454992, fine_tune_threshold=3
img diff = 50.434558364137025, fine_tune_threshold=3
img diff = 55.70933004461179, fine_tune_threshold=3
img diff = 40.81717959178716, fine_tune_threshold=3
img diff = 44.62313798609097, fine_tune_threshold=3
img diff = 43.22054348226277, fine_tune_threshold=3
img diff = 47.78672100491422, fine_tune_threshold=3
img diff = 38.71586687190005, fine_tune_threshold=3
img diff = 53.54609913177026, fine_tune_threshold=3
img diff = 38.54220403576755, fine_tune_threshold=3
img diff = 53.698716474640065, fine_tune_threshold=3
img diff = 42.77816560982945, fine_tune_threshold=3
img diff = 46.91482166321067, fine_tune_threshold=3
img diff = 58.82634470537678, fine_tune_threshold=3
img diff = 406.8447966651216, fine_tune_threshold=3
img diff = 40.62378796030896, fine_tune_threshold=3
img diff = 42.603514041520675, fine_tune_threshold=3
img diff = 38.76336140673493, fine_tune_threshold=3
img diff = 39.24973422264248, fine_tune_threshold=3
img diff = 39.920012831376695, fine_tune_threshold=3
img diff = 38.88700194110355, fine_tune_threshold=3
img diff = 48.18508536542138, fine_tune_threshold=3
img diff = 40.0793396846185, fine_tune_threshold=3
img diff = 41.2141048704397, fine_tune_threshold=3
img diff = 38.806130249408184, fine_tune_threshold=3
img diff = 39.735326587305295, fine_tune_threshold=3
img diff = 38.47975910719361, fine_tune_threshold=3
img diff = 43.50252835233474, fine_tune_threshold=3
img diff = 44.63010618648942, fine_tune_threshold=3
img diff = 45.45553175260685, fine_tune_threshold=3
img diff = 55.60485831325653, fine_tune_threshold=3
img diff = 63.78019089765753, fine_tune_threshold=3
img diff = 58.68307467554183, fine_tune_threshold=3
img diff = 58.44089613081019, fine_tune_threshold=3
img diff = 55.579190979519794, fine_tune_threshold=3
img diff = 69.65513619600121, fine_tune_threshold=3
img diff = 104.5572341358016, fine_tune_threshold=3
img diff = 55.402436484083225, fine_tune_threshold=3
img diff = 55.95337372291011, fine_tune_threshold=3
img diff = 55.461529548283615, fine_tune_threshold=3
img diff = 55.53457148154182, fine_tune_threshold=3
img diff = 63.775581016141864, fine_tune_threshold=3
img diff = 55.385017571555366, fine_tune_threshold=3
img diff = 64.01125506155059, fine_tune_threshold=3
img diff = 55.65743154518862, fine_tune_threshold=3
img diff = 55.50624930697413, fine_tune_threshold=3
img diff = 61.34398092978438, fine_tune_threshold=3
img diff = 57.57516614333295, fine_tune_threshold=3
img diff = 62.12275078537681, fine_tune_threshold=3
img diff = 161.97717226662377, fine_tune_threshold=3
img diff = 60.428828620356434, fine_tune_threshold=3
img diff = 56.5670506121825, fine_tune_threshold=3
img diff = 55.51386051032582, fine_tune_threshold=3
img diff = 57.47447908767569, fine_tune_threshold=3
img diff = 81.67387552124134, fine_tune_threshold=3
img diff = 96.3509535473712, fine_tune_threshold=3
img diff = 55.15713337202225, fine_tune_threshold=3
img diff = 58.67844566616638, fine_tune_threshold=3
img diff = 60.776271292143086, fine_tune_threshold=3
img diff = 58.24070661827618, fine_tune_threshold=3
img diff = 70.59077822865152, fine_tune_threshold=3
img diff = 176.4296385940591, fine_tune_threshold=3
img diff = 105.46813613949139, fine_tune_threshold=3
img diff = 61.54992731973748, fine_tune_threshold=3
img diff = 102.55812687607505, fine_tune_threshold=3
img diff = 55.699934651199996, fine_tune_threshold=3
img diff = 55.65266891319787, fine_tune_threshold=3
img diff = 56.159841442366826, fine_tune_threshold=3
img diff = 85.03661130406735, fine_tune_threshold=3
img diff = 55.45356092347812, fine_tune_threshold=3
img diff = 55.37042456516664, fine_tune_threshold=3
img diff = 56.208310037080366, fine_tune_threshold=3
img diff = 55.4006660001024, fine_tune_threshold=3
img diff = 55.671019007965526, fine_tune_threshold=3
img diff = 55.86765060365429, fine_tune_threshold=3
img diff = 113.86997849908052, fine_tune_threshold=3
img diff = 76.78345167023032, fine_tune_threshold=3
img diff = 56.40123593615615, fine_tune_threshold=3
img diff = 55.53186606406227, fine_tune_threshold=3
img diff = 55.85617406138913, fine_tune_threshold=3
img diff = 59.91550742317651, fine_tune_threshold=3
img diff = 91.06219207388392, fine_tune_threshold=3
img diff = 55.344333684431795, fine_tune_threshold=3
img diff = 57.93095641480027, fine_tune_threshold=3
img diff = 55.03793817766152, fine_tune_threshold=3
img diff = 55.5499396979871, fine_tune_threshold=3
img diff = 55.479043493296494, fine_tune_threshold=3
img diff = 58.12857980942408, fine_tune_threshold=3
img diff = 278.05697460592603, fine_tune_threshold=3
img diff = 55.60530951049906, fine_tune_threshold=3
img diff = 57.844814545891545, fine_tune_threshold=3
img diff = 80.07623660387075, fine_tune_threshold=3
img diff = 67.98425532255726, fine_tune_threshold=3
img diff = 60.39300457407904, fine_tune_threshold=3
img diff = 55.681558556342225, fine_tune_threshold=3
img diff = 57.74546253921919, fine_tune_threshold=3
img diff = 55.668963791347615, fine_tune_threshold=3
img diff = 61.11868700451829, fine_tune_threshold=3
img diff = 117.06880211595205, fine_tune_threshold=3
img diff = 60.56383164002486, fine_tune_threshold=3
img diff = 55.469791339389936, fine_tune_threshold=3
img diff = 55.54347768197057, fine_tune_threshold=3
img diff = 58.614143830373536, fine_tune_threshold=3
img diff = 55.898562932289266, fine_tune_threshold=3
img diff = 55.47151021283075, fine_tune_threshold=3
img diff = 55.56134561751564, fine_tune_threshold=3
img diff = 57.1410358106865, fine_tune_threshold=3
img diff = 56.21528576116684, fine_tune_threshold=3
img diff = 59.656347058789954, fine_tune_threshold=3
img diff = 62.109592896977844, fine_tune_threshold=3
img diff = 14.016637532373664, fine_tune_threshold=3
img diff = 38.28624998068743, fine_tune_threshold=3
img diff = 21.751980492162414, fine_tune_threshold=3
img diff = 17.230739003049234, fine_tune_threshold=3
img diff = 33.99984298671424, fine_tune_threshold=3
img diff = 23.96937025870019, fine_tune_threshold=3
img diff = 61.40041522841114, fine_tune_threshold=3
img diff = 39.07423186746055, fine_tune_threshold=3
img diff = 13.076970513626847, fine_tune_threshold=3
img diff = 12.582680327218563, fine_tune_threshold=3
img diff = 11.406309922231616, fine_tune_threshold=3
img diff = 180.07807960571444, fine_tune_threshold=3
img diff = 15.3726745012871, fine_tune_threshold=3
img diff = 34.409129295818914, fine_tune_threshold=3
img diff = 14.807526995354461, fine_tune_threshold=3
img diff = 13.534456637810894, fine_tune_threshold=3
img diff = 38.57988054545873, fine_tune_threshold=3
img diff = 13.440235001618547, fine_tune_threshold=3
img diff = 11.65381589527091, fine_tune_threshold=3
img diff = 13.186046212721763, fine_tune_threshold=3
img diff = 13.992336323177078, fine_tune_threshold=3
img diff = 17.852602032782695, fine_tune_threshold=3
img diff = 13.164751787622112, fine_tune_threshold=3
img diff = 130.6609247154626, fine_tune_threshold=3
img diff = 17.401038612883628, fine_tune_threshold=3
img diff = 27.99581579848381, fine_tune_threshold=3
img diff = 17.554459748116486, fine_tune_threshold=3
img diff = 16.362326167697933, fine_tune_threshold=3
img diff = 16.889796977125897, fine_tune_threshold=3
img diff = 21.21717392869826, fine_tune_threshold=3
img diff = 17.917153408526048, fine_tune_threshold=3
img diff = 13.344729181711, fine_tune_threshold=3
img diff = 79.41075118231868, fine_tune_threshold=3
img diff = 15.577224864270859, fine_tune_threshold=3
img diff = 16.308406226620434, fine_tune_threshold=3
img diff = 11.93094499945758, fine_tune_threshold=3
img diff = 20.489080330406306, fine_tune_threshold=3
img diff = 12.150582358730997, fine_tune_threshold=3
img diff = 12.732203731460748, fine_tune_threshold=3
img diff = 11.609512585079603, fine_tune_threshold=3
img diff = 11.655232248420738, fine_tune_threshold=3
img diff = 11.837228732151118, fine_tune_threshold=3
img diff = 11.777294501916755, fine_tune_threshold=3
img diff = 11.219824998307226, fine_tune_threshold=3
img diff = 11.975209287759068, fine_tune_threshold=3
img diff = 29.467838009864785, fine_tune_threshold=3
img diff = 16.41440825626202, fine_tune_threshold=3
img diff = 12.964151578009403, fine_tune_threshold=3
img diff = 15.975393560964772, fine_tune_threshold=3
img diff = 21.497447588977195, fine_tune_threshold=3
img diff = 14.636394573011302, fine_tune_threshold=3
img diff = 22.609303716009347, fine_tune_threshold=3
img diff = 13.075836093950576, fine_tune_threshold=3
img diff = 11.623628195268438, fine_tune_threshold=3
img diff = 14.137773789238064, fine_tune_threshold=3
img diff = 13.384350738236527, fine_tune_threshold=3
img diff = 58.93093628177458, fine_tune_threshold=3
img diff = 11.949692287911088, fine_tune_threshold=3
img diff = 19.533498120447895, fine_tune_threshold=3
img diff = 11.288246031919662, fine_tune_threshold=3
img diff = 11.564022161052605, fine_tune_threshold=3
img diff = 14.530636065189729, fine_tune_threshold=3
img diff = 18.42252316027386, fine_tune_threshold=3
img diff = 25.91907489149076, fine_tune_threshold=3
img diff = 11.846778048438301, fine_tune_threshold=3
img diff = 16.905303521195798, fine_tune_threshold=3
img diff = 13.345234061050483, fine_tune_threshold=3
img diff = 19.50949855303936, fine_tune_threshold=3
img diff = 12.888904990913474, fine_tune_threshold=3
img diff = 12.960781388295782, fine_tune_threshold=3
img diff = 11.198154457393839, fine_tune_threshold=3
img diff = 11.55245844149701, fine_tune_threshold=3
img diff = 12.276115421770736, fine_tune_threshold=3
img diff = 13.810660132547405, fine_tune_threshold=3
img diff = 16.611822384284586, fine_tune_threshold=3
img diff = 15.469358063409057, fine_tune_threshold=3
img diff = 11.790837773477989, fine_tune_threshold=3
img diff = 11.98368643481353, fine_tune_threshold=3
img diff = 11.657933751890083, fine_tune_threshold=3
img diff = 17.88141772959291, fine_tune_threshold=3
img diff = 112.51716121575177, fine_tune_threshold=3
img diff = 113.82316698956838, fine_tune_threshold=3
img diff = 115.02791158093797, fine_tune_threshold=3
img diff = 120.16090790270933, fine_tune_threshold=3
img diff = 112.07721372713067, fine_tune_threshold=3
img diff = 111.840885783008, fine_tune_threshold=3
img diff = 114.05901658611228, fine_tune_threshold=3
img diff = 121.98170730421364, fine_tune_threshold=3
img diff = 120.82311624074329, fine_tune_threshold=3
img diff = 114.00149471448046, fine_tune_threshold=3
img diff = 113.61870309164104, fine_tune_threshold=3
img diff = 114.18229994690714, fine_tune_threshold=3
img diff = 112.9182459493107, fine_tune_threshold=3
img diff = 277.960625298154, fine_tune_threshold=3
img diff = 114.44177648950568, fine_tune_threshold=3
img diff = 114.11414997760254, fine_tune_threshold=3
img diff = 112.29620574101341, fine_tune_threshold=3
img diff = 130.0980624659221, fine_tune_threshold=3
img diff = 111.20545137099299, fine_tune_threshold=3
img diff = 112.60443916216546, fine_tune_threshold=3
img diff = 126.57107854194828, fine_tune_threshold=3
img diff = 114.57195941310303, fine_tune_threshold=3
img diff = 116.95225146572432, fine_tune_threshold=3
img diff = 114.88576087893594, fine_tune_threshold=3
img diff = 115.53903913741082, fine_tune_threshold=3
img diff = 112.42528482662112, fine_tune_threshold=3
img diff = 113.83178931712459, fine_tune_threshold=3
img diff = 492.17796177621574, fine_tune_threshold=3
img diff = 115.49810298705704, fine_tune_threshold=3
img diff = 112.2249958658411, fine_tune_threshold=3
img diff = 112.16713491275961, fine_tune_threshold=3
img diff = 114.28976555354944, fine_tune_threshold=3
img diff = 115.85473136959541, fine_tune_threshold=3
img diff = 112.34297428012793, fine_tune_threshold=3
img diff = 122.08210550443317, fine_tune_threshold=3
img diff = 186.52059898497234, fine_tune_threshold=3
img diff = 112.3063579709872, fine_tune_threshold=3
img diff = 114.62526762524772, fine_tune_threshold=3
img diff = 113.99126637554582, fine_tune_threshold=3
img diff = 118.94179557004193, fine_tune_threshold=3
img diff = 114.8447121536683, fine_tune_threshold=3
img diff = 118.98547169027219, fine_tune_threshold=3
img diff = 113.93029756709564, fine_tune_threshold=3
img diff = 111.63777855703279, fine_tune_threshold=3
img diff = 114.85228505700965, fine_tune_threshold=3
img diff = 113.75654575976043, fine_tune_threshold=3
img diff = 111.99892439348238, fine_tune_threshold=3
img diff = 114.20121607932197, fine_tune_threshold=3
img diff = 112.32641861026701, fine_tune_threshold=3
img diff = 140.7188468574019, fine_tune_threshold=3
img diff = 113.28012518708798, fine_tune_threshold=3
img diff = 114.58818356273099, fine_tune_threshold=3
img diff = 111.99415792218488, fine_tune_threshold=3
img diff = 114.7527485098497, fine_tune_threshold=3
img diff = 117.0114600123773, fine_tune_threshold=3
img diff = 127.77861643930473, fine_tune_threshold=3
img diff = 112.24688269146445, fine_tune_threshold=3
img diff = 120.26690436889703, fine_tune_threshold=3
img diff = 121.24926733597523, fine_tune_threshold=3
img diff = 112.323402627596, fine_tune_threshold=3
img diff = 112.38363273801352, fine_tune_threshold=3
img diff = 112.05574335975021, fine_tune_threshold=3
img diff = 114.46943344864738, fine_tune_threshold=3
img diff = 114.83967127760873, fine_tune_threshold=3
img diff = 112.40595907302838, fine_tune_threshold=3
img diff = 113.92061912324667, fine_tune_threshold=3
img diff = 116.29183382402528, fine_tune_threshold=3
img diff = 114.78454871277182, fine_tune_threshold=3
img diff = 443.3055261790473, fine_tune_threshold=3
img diff = 115.50055802964602, fine_tune_threshold=3
img diff = 139.69912346553602, fine_tune_threshold=3
img diff = 120.76241816133825, fine_tune_threshold=3
img diff = 117.6392059881762, fine_tune_threshold=3
img diff = 116.10664669067016, fine_tune_threshold=3
img diff = 111.97743790296116, fine_tune_threshold=3
img diff = 112.28895848201984, fine_tune_threshold=3
img diff = 112.35040509699101, fine_tune_threshold=3
img diff = 112.5293026800009, fine_tune_threshold=3
img diff = 112.6593973447836, fine_tune_threshold=3
img diff = 112.20197351891974, fine_tune_threshold=3
img diff = 8.288767487244018, fine_tune_threshold=3
img diff = 28.44207008644574, fine_tune_threshold=3
img diff = 8.793916888183503, fine_tune_threshold=3
img diff = 10.725040934979713, fine_tune_threshold=3
img diff = 9.145061764805652, fine_tune_threshold=3
img diff = 22.543429321888002, fine_tune_threshold=3
img diff = 8.430498738320786, fine_tune_threshold=3
img diff = 21.301924381471864, fine_tune_threshold=3
img diff = 13.250346931716473, fine_tune_threshold=3
img diff = 24.183530865084414, fine_tune_threshold=3
img diff = 30.36136274863275, fine_tune_threshold=3
img diff = 177.30210473825986, fine_tune_threshold=3
img diff = 21.68305239396282, fine_tune_threshold=3
img diff = 41.700661599719865, fine_tune_threshold=3
img diff = 9.247374517497576, fine_tune_threshold=3
img diff = 12.638819204523873, fine_tune_threshold=3
img diff = 21.05328822342647, fine_tune_threshold=3
img diff = 22.844545809405265, fine_tune_threshold=3
img diff = 31.69674189092896, fine_tune_threshold=3
img diff = 8.86281447350408, fine_tune_threshold=3
img diff = 81.92589064266954, fine_tune_threshold=3
img diff = 20.538031675007225, fine_tune_threshold=3
img diff = 18.37003009323943, fine_tune_threshold=3
img diff = 12.073226270872597, fine_tune_threshold=3
img diff = 10.585003841283642, fine_tune_threshold=3
img diff = 88.59327287847177, fine_tune_threshold=3
img diff = 26.788340711605308, fine_tune_threshold=3
img diff = 206.2125708566983, fine_tune_threshold=3
img diff = 12.512983719903218, fine_tune_threshold=3
img diff = 10.523578026369524, fine_tune_threshold=3
img diff = 8.679250658477107, fine_tune_threshold=3
img diff = 14.21088691702479, fine_tune_threshold=3
img diff = 14.259441634978458, fine_tune_threshold=3
img diff = 45.35927235913891, fine_tune_threshold=3
img diff = 74.9862537855948, fine_tune_threshold=3
img diff = 21.251066660546815, fine_tune_threshold=3
img diff = 70.90460057660124, fine_tune_threshold=3
img diff = 36.28352380121056, fine_tune_threshold=3
img diff = 11.35970846728235, fine_tune_threshold=3
img diff = 7.920855019375907, fine_tune_threshold=3
img diff = 13.902202075563498, fine_tune_threshold=3
img diff = 59.02472289795251, fine_tune_threshold=3
img diff = 65.86020302671486, fine_tune_threshold=3
img diff = 18.39974592680275, fine_tune_threshold=3
img diff = 34.4474761147062, fine_tune_threshold=3
img diff = 129.3874616106697, fine_tune_threshold=3
img diff = 20.33669651801337, fine_tune_threshold=3
img diff = 15.437469472918204, fine_tune_threshold=3
img diff = 11.33287218550807, fine_tune_threshold=3
img diff = 199.72963915134142, fine_tune_threshold=3
img diff = 12.025575313439731, fine_tune_threshold=3
img diff = 12.835523531836586, fine_tune_threshold=3
img diff = 23.35414139810336, fine_tune_threshold=3
img diff = 11.634408579950414, fine_tune_threshold=3
img diff = 11.419711738333161, fine_tune_threshold=3
img diff = 8.311751729223579, fine_tune_threshold=3
img diff = 13.637847628634475, fine_tune_threshold=3
img diff = 69.40934058684412, fine_tune_threshold=3
img diff = 12.253311596712718, fine_tune_threshold=3
img diff = 27.74661170417373, fine_tune_threshold=3
img diff = 21.701615772166818, fine_tune_threshold=3
img diff = 100.94045217457816, fine_tune_threshold=3
img diff = 11.09488044306557, fine_tune_threshold=3
img diff = 56.376213931228634, fine_tune_threshold=3
img diff = 39.53779542387448, fine_tune_threshold=3
img diff = 73.82979098547031, fine_tune_threshold=3
img diff = 20.383300264927076, fine_tune_threshold=3
img diff = 9.994864796174761, fine_tune_threshold=3
img diff = 36.30205609497719, fine_tune_threshold=3
img diff = 17.314117297623795, fine_tune_threshold=3
img diff = 14.344700568157121, fine_tune_threshold=3
img diff = 12.107584905217017, fine_tune_threshold=3
img diff = 11.209842288944444, fine_tune_threshold=3
img diff = 12.624923586637092, fine_tune_threshold=3
img diff = 9.93067593800142, fine_tune_threshold=3
img diff = 31.96589999757923, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 495, in <module>
    centered_position = spiral_search_and_center(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 100, in spiral_search_and_center
    phasemask.move_absolute([x_pos, y_pos])
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 177, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 140, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.request_timeout_exception.RequestTimeoutException: RequestTimeoutException: Device has not responded in given timeout
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 3 devices
Found 2 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb594ed0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb09c590>}
    -available positions:
   ('J1', [2989.9689374999984, 3167.5387499999983])
   ('J2', [3206.662687499999, 2062.6863749999993])
   ('J3', [3634.6923749999983, 568.0709999999998])
   ('J4', [3558.087562499998, 189.6189374999999])
   ('J5', [2779.633124999999, 4075.9618124999984])
   ('H1', [7969.376999999996, 4793.099062499998])
   ('H2', [8253.483937499997, 3740.110312499998])
   ('H3', [8390.429624999995, 2880.6695624999984])
   ('H4', [8584.668187499996, 1840.063312499999])
   ('H5', [8733.043874999996, 890.2779374999996])
    -current position: [2999.9939999999983, 2999.9939999999983]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb0a8cd0>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb594ed0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb09c590>}
    -available positions:
   ('J1', [2989.9689374999984, 3167.5387499999983])
   ('J2', [3206.662687499999, 2062.6863749999993])
   ('J3', [3634.6923749999983, 568.0709999999998])
   ('J4', [3558.087562499998, 189.6189374999999])
   ('J5', [2779.633124999999, 4075.9618124999984])
   ('H1', [7969.376999999996, 4793.099062499998])
   ('H2', [8253.483937499997, 3740.110312499998])
   ('H3', [8390.429624999995, 2880.6695624999984])
   ('H4', [8584.668187499996, 1840.063312499999])
   ('H5', [8733.043874999996, 890.2779374999996])
    -current position: [3634.6923749999983, 568.0709999999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f68fb0a8cd0>
    -current position: 3999.9999374999984um
img diff = 1.7983313275062884, fine_tune_threshold=3
img diff = 1.7805098039001892, fine_tune_threshold=3
img diff = 1.3827110590206975, fine_tune_threshold=3
img diff = 1.3350482697187718, fine_tune_threshold=3
img diff = 1.3533133268611308, fine_tune_threshold=3
img diff = 1.308702138960076, fine_tune_threshold=3
img diff = 1.0107588282925297, fine_tune_threshold=3
img diff = 0.9946376004319264, fine_tune_threshold=3
img diff = 1.0237852458456633, fine_tune_threshold=3
img diff = 1.1368230209062082, fine_tune_threshold=3
img diff = 1.2109574408888348, fine_tune_threshold=3
img diff = 2.321695129868954, fine_tune_threshold=3
img diff = 11.626932567172263, fine_tune_threshold=3
img diff = 4.430973981968155, fine_tune_threshold=3
img diff = 2.1174845832416174, fine_tune_threshold=3
img diff = 1.5659420094357848, fine_tune_threshold=3
img diff = 1.4426470068610135, fine_tune_threshold=3
img diff = 1.3052390589248786, fine_tune_threshold=3
img diff = 1.1858931208279113, fine_tune_threshold=3
img diff = 12.414646231908097, fine_tune_threshold=3
img diff = 1.0299432462764933, fine_tune_threshold=3
img diff = 0.9915591989260572, fine_tune_threshold=3
img diff = 1.0315310337714183, fine_tune_threshold=3
img diff = 1.0977214173896535, fine_tune_threshold=3
img diff = 1.27366800629898, fine_tune_threshold=3
img diff = 1.6952161142615758, fine_tune_threshold=3
img diff = 9.664384923164826, fine_tune_threshold=3
img diff = 4.685777297774468, fine_tune_threshold=3
img diff = 2.3662794019539657, fine_tune_threshold=3
img diff = 1.6800311505782402, fine_tune_threshold=3
img diff = 1.38424029808266, fine_tune_threshold=3
img diff = 1.307600186101354, fine_tune_threshold=3
img diff = 1.3022506364466349, fine_tune_threshold=3
img diff = 2.7574432577015164, fine_tune_threshold=3
img diff = 1.038685018925805, fine_tune_threshold=3
img diff = 0.9927006211491849, fine_tune_threshold=3
img diff = 1.0245679851321121, fine_tune_threshold=3
img diff = 1.0740420761024323, fine_tune_threshold=3
img diff = 1.2065349005242387, fine_tune_threshold=3
img diff = 1.7236907160405925, fine_tune_threshold=3
img diff = 3.44139079482664, fine_tune_threshold=3
img diff = 26.78613521741343, fine_tune_threshold=3
img diff = 2.999301647890524, fine_tune_threshold=3
img diff = 1.5551476209344437, fine_tune_threshold=3
img diff = 1.3562372904913929, fine_tune_threshold=3
img diff = 1.4179767482841328, fine_tune_threshold=3
img diff = 1.2375059398982577, fine_tune_threshold=3
img diff = 3.0853069937766824, fine_tune_threshold=3
img diff = 1.0471950646968702, fine_tune_threshold=3
img diff = 0.9938845159713042, fine_tune_threshold=3
img diff = 1.0073157378731854, fine_tune_threshold=3
img diff = 1.0502488833184311, fine_tune_threshold=3
img diff = 1.228703272377974, fine_tune_threshold=3
img diff = 1.8386313226762176, fine_tune_threshold=3
img diff = 3.0986988569824687, fine_tune_threshold=3
img diff = 4.773425116137739, fine_tune_threshold=3
img diff = 2.56086096428331, fine_tune_threshold=3
img diff = 1.5601203483329826, fine_tune_threshold=3
img diff = 1.4223524634215137, fine_tune_threshold=3
img diff = 1.2954078692456996, fine_tune_threshold=3
img diff = 1.2007692159066976, fine_tune_threshold=3
img diff = 3.0734185880123275, fine_tune_threshold=3
img diff = 1.096335577801563, fine_tune_threshold=3
img diff = 0.9990230317167339, fine_tune_threshold=3
img diff = 0.9950901799920234, fine_tune_threshold=3
img diff = 1.0633390691122506, fine_tune_threshold=3
img diff = 1.1899045528046401, fine_tune_threshold=3
img diff = 1.5109845282805419, fine_tune_threshold=3
img diff = 3.058274825677459, fine_tune_threshold=3
img diff = 7.194872783699955, fine_tune_threshold=3
img diff = 2.529215870765511, fine_tune_threshold=3
img diff = 1.8452769399938624, fine_tune_threshold=3
img diff = 1.3842087633363662, fine_tune_threshold=3
img diff = 1.2999182337506896, fine_tune_threshold=3
img diff = 1.2976241889234337, fine_tune_threshold=3
img diff = 4.013045711984525, fine_tune_threshold=3
img diff = 1.1187715198296424, fine_tune_threshold=3
img diff = 0.9870016489025459, fine_tune_threshold=3
img diff = 0.9857993407419137, fine_tune_threshold=3
img diff = 1.0564461280457866, fine_tune_threshold=3
img diff = 5.184450800348522, fine_tune_threshold=3
img diff = 5.10866059790257, fine_tune_threshold=3
img diff = 5.198467435369999, fine_tune_threshold=3
img diff = 4.930230039068432, fine_tune_threshold=3
img diff = 4.9573152288772695, fine_tune_threshold=3
img diff = 4.951155131922663, fine_tune_threshold=3
img diff = 4.945759445028591, fine_tune_threshold=3
img diff = 4.928435059184497, fine_tune_threshold=3
img diff = 4.982289989754335, fine_tune_threshold=3
img diff = 5.879268980728472, fine_tune_threshold=3
img diff = 34.02927141750671, fine_tune_threshold=3
img diff = 5.783738521368905, fine_tune_threshold=3
img diff = 5.297737015808469, fine_tune_threshold=3
img diff = 5.24349492592084, fine_tune_threshold=3
img diff = 5.137639027036775, fine_tune_threshold=3
img diff = 5.108664607943593, fine_tune_threshold=3
img diff = 5.357958689380708, fine_tune_threshold=3
img diff = 4.954205471876601, fine_tune_threshold=3
img diff = 4.9662873213840095, fine_tune_threshold=3
img diff = 4.966971647887027, fine_tune_threshold=3
img diff = 4.940250279610734, fine_tune_threshold=3
img diff = 4.9504534587165825, fine_tune_threshold=3
img diff = 4.974057456869322, fine_tune_threshold=3
img diff = 5.477456992015303, fine_tune_threshold=3
img diff = 93.97691241057574, fine_tune_threshold=3
img diff = 5.849774079482823, fine_tune_threshold=3
img diff = 5.335295137374546, fine_tune_threshold=3
img diff = 5.183671664819714, fine_tune_threshold=3
img diff = 5.128864575292523, fine_tune_threshold=3
img diff = 5.1103102811307295, fine_tune_threshold=3
img diff = 5.15213896711694, fine_tune_threshold=3
img diff = 4.953199091574234, fine_tune_threshold=3
img diff = 4.949201888412368, fine_tune_threshold=3
img diff = 4.954826660461133, fine_tune_threshold=3
img diff = 4.943588118380754, fine_tune_threshold=3
img diff = 4.933922723117453, fine_tune_threshold=3
img diff = 4.944789196953531, fine_tune_threshold=3
img diff = 5.242564503304269, fine_tune_threshold=3
img diff = 19.082309473060917, fine_tune_threshold=3
img diff = 5.663069655327179, fine_tune_threshold=3
img diff = 5.291467314213595, fine_tune_threshold=3
img diff = 5.217355991982285, fine_tune_threshold=3
img diff = 5.1348294386798745, fine_tune_threshold=3
img diff = 5.1219055507892195, fine_tune_threshold=3
img diff = 5.086319906971317, fine_tune_threshold=3
img diff = 5.006508910761177, fine_tune_threshold=3
img diff = 4.954554104954451, fine_tune_threshold=3
img diff = 4.9568645426237055, fine_tune_threshold=3
img diff = 4.9379878666860115, fine_tune_threshold=3
img diff = 4.937627294096857, fine_tune_threshold=3
img diff = 4.949073133918506, fine_tune_threshold=3
img diff = 5.0675035030846765, fine_tune_threshold=3
img diff = 19.998992420538087, fine_tune_threshold=3
img diff = 6.462202278705153, fine_tune_threshold=3
img diff = 5.538585208520324, fine_tune_threshold=3
img diff = 5.1708756039800114, fine_tune_threshold=3
img diff = 5.180673025907234, fine_tune_threshold=3
img diff = 5.156760065228601, fine_tune_threshold=3
img diff = 5.118076246804069, fine_tune_threshold=3
img diff = 5.604342661105348, fine_tune_threshold=3
img diff = 4.933502748364283, fine_tune_threshold=3
img diff = 4.9621490783912625, fine_tune_threshold=3
img diff = 4.945435253419026, fine_tune_threshold=3
img diff = 4.930397663127493, fine_tune_threshold=3
img diff = 4.9494514672330805, fine_tune_threshold=3
img diff = 5.118171615146014, fine_tune_threshold=3
img diff = 9.45800161308636, fine_tune_threshold=3
img diff = 7.287614097836458, fine_tune_threshold=3
img diff = 5.709621466495194, fine_tune_threshold=3
img diff = 5.394161469753872, fine_tune_threshold=3
img diff = 5.165751767899003, fine_tune_threshold=3
img diff = 5.118802359656404, fine_tune_threshold=3
img diff = 5.12576482801202, fine_tune_threshold=3
img diff = 10.383801683193461, fine_tune_threshold=3
img diff = 4.956387468936807, fine_tune_threshold=3
img diff = 4.969391132106191, fine_tune_threshold=3
img diff = 4.945390264519979, fine_tune_threshold=3
img diff = 4.967050436780217, fine_tune_threshold=3
img diff = 4.952403804494766, fine_tune_threshold=3
img diff = 4.952470940372177, fine_tune_threshold=3
img diff = 63.78377044500815, fine_tune_threshold=3
img diff = 1.5693806860237713, fine_tune_threshold=3
img diff = 1.4610252052916075, fine_tune_threshold=3
img diff = 1.4865737579888143, fine_tune_threshold=3
img diff = 1.6527958796331133, fine_tune_threshold=3
img diff = 1.8441859286948434, fine_tune_threshold=3
img diff = 2.679994935959364, fine_tune_threshold=3
img diff = 110.91831564234326, fine_tune_threshold=3
img diff = 3.697215359578617, fine_tune_threshold=3
img diff = 1.882563551400195, fine_tune_threshold=3
img diff = 1.6573883347043445, fine_tune_threshold=3
img diff = 1.517569650570048, fine_tune_threshold=3
img diff = 1.4446689625012463, fine_tune_threshold=3
img diff = 1.4020058203123793, fine_tune_threshold=3
img diff = 166.53049720063837, fine_tune_threshold=3
img diff = 1.526894664520892, fine_tune_threshold=3
img diff = 1.4490149482789523, fine_tune_threshold=3
img diff = 1.4818043205680511, fine_tune_threshold=3
img diff = 1.5469705811215604, fine_tune_threshold=3
img diff = 1.6940931169950937, fine_tune_threshold=3
img diff = 2.0583998438309554, fine_tune_threshold=3
img diff = 5.867828543385553, fine_tune_threshold=3
img diff = 45.98575232671978, fine_tune_threshold=3
img diff = 1.843274554768862, fine_tune_threshold=3
img diff = 1.7075753949387886, fine_tune_threshold=3
img diff = 1.488994459810222, fine_tune_threshold=3
img diff = 1.4220378966326959, fine_tune_threshold=3
img diff = 1.4146873416058763, fine_tune_threshold=3
img diff = 45.790384476602945, fine_tune_threshold=3
img diff = 1.5185738602731327, fine_tune_threshold=3
img diff = 1.4381246791254312, fine_tune_threshold=3
img diff = 1.4675810591477036, fine_tune_threshold=3
img diff = 1.5689671324230745, fine_tune_threshold=3
img diff = 1.6424856166153858, fine_tune_threshold=3
img diff = 2.212258479627184, fine_tune_threshold=3
img diff = 3.6802302472454516, fine_tune_threshold=3
img diff = 3.7731718527090177, fine_tune_threshold=3
img diff = 2.308704865333281, fine_tune_threshold=3
img diff = 1.5740332104202244, fine_tune_threshold=3
img diff = 1.5148377252205103, fine_tune_threshold=3
img diff = 1.4738656783776252, fine_tune_threshold=3
img diff = 1.4189603341007544, fine_tune_threshold=3
img diff = 1.5505083124912986, fine_tune_threshold=3
img diff = 1.7006806845628186, fine_tune_threshold=3
img diff = 1.451657589593344, fine_tune_threshold=3
img diff = 1.4627613275337004, fine_tune_threshold=3
img diff = 1.4973119684142535, fine_tune_threshold=3
img diff = 1.6790343896225333, fine_tune_threshold=3
img diff = 1.8077950837101262, fine_tune_threshold=3
img diff = 3.534227753170804, fine_tune_threshold=3
img diff = 6.1665953104556515, fine_tune_threshold=3
img diff = 2.280801191823116, fine_tune_threshold=3
img diff = 1.7746867251433622, fine_tune_threshold=3
img diff = 1.5239401260689944, fine_tune_threshold=3
img diff = 1.4804222792187762, fine_tune_threshold=3
img diff = 1.4519963936729954, fine_tune_threshold=3
img diff = 1.506749710561595, fine_tune_threshold=3
img diff = 1.793830002942105, fine_tune_threshold=3
img diff = 1.461202166489651, fine_tune_threshold=3
img diff = 1.4421310012275241, fine_tune_threshold=3
img diff = 1.5110168343927117, fine_tune_threshold=3
img diff = 1.6048585789447478, fine_tune_threshold=3
img diff = 1.7047485502925428, fine_tune_threshold=3
img diff = 2.4715819196274476, fine_tune_threshold=3
img diff = 141.60015321024053, fine_tune_threshold=3
img diff = 4.9446988439671555, fine_tune_threshold=3
img diff = 2.0807830261484552, fine_tune_threshold=3
img diff = 1.7929068735739309, fine_tune_threshold=3
img diff = 1.4956373679202795, fine_tune_threshold=3
img diff = 1.4551469269646766, fine_tune_threshold=3
img diff = 1.4139127895330197, fine_tune_threshold=3
img diff = 2.385475525592338, fine_tune_threshold=3
img diff = 1.506259259647952, fine_tune_threshold=3
img diff = 1.4339917005477276, fine_tune_threshold=3
img diff = 1.4810693510098731, fine_tune_threshold=3
img diff = 1.5586044045516414, fine_tune_threshold=3
img diff = 1.8645104469344145, fine_tune_threshold=3
img diff = 3.026199610301365, fine_tune_threshold=3
img diff = 14.87759134808882, fine_tune_threshold=3
img diff = 3.6747924552822693, fine_tune_threshold=3
img diff = 0.8935817023617937, fine_tune_threshold=3
img diff = 0.8976436135731254, fine_tune_threshold=3
img diff = 0.9541392254640484, fine_tune_threshold=3
img diff = 1.0630830882845945, fine_tune_threshold=3
img diff = 1.5293716457918258, fine_tune_threshold=3
img diff = 2.8488291253078746, fine_tune_threshold=3
img diff = 6.564569623884914, fine_tune_threshold=3
img diff = 2.8200928958674583, fine_tune_threshold=3
img diff = 1.5105586452556456, fine_tune_threshold=3
img diff = 1.2813080797685386, fine_tune_threshold=3
img diff = 1.0438307012476882, fine_tune_threshold=3
img diff = 0.9326206112122915, fine_tune_threshold=3
img diff = 1.0522282889793093, fine_tune_threshold=3
img diff = 1.3257320884429153, fine_tune_threshold=3
img diff = 0.9056551337504579, fine_tune_threshold=3
img diff = 0.9037863729375055, fine_tune_threshold=3
img diff = 0.9798048604008947, fine_tune_threshold=3
img diff = 1.1473985238031004, fine_tune_threshold=3
img diff = 1.312226952982856, fine_tune_threshold=3
img diff = 3.3005159315305517, fine_tune_threshold=3
img diff = 79.81763086416254, fine_tune_threshold=3
img diff = 1.8423054712102176, fine_tune_threshold=3
img diff = 1.9382651759470972, fine_tune_threshold=3
img diff = 1.1151149758008199, fine_tune_threshold=3
img diff = 1.0481478923696352, fine_tune_threshold=3
img diff = 0.9390933140415512, fine_tune_threshold=3
img diff = 2.1804828775421283, fine_tune_threshold=3
img diff = 1.082664160917791, fine_tune_threshold=3
img diff = 0.9023205253378621, fine_tune_threshold=3
img diff = 0.9079665521810006, fine_tune_threshold=3
img diff = 0.9913143056284702, fine_tune_threshold=3
img diff = 1.1735427174189033, fine_tune_threshold=3
img diff = 1.6763140197341264, fine_tune_threshold=3
img diff = 4.106679099027063, fine_tune_threshold=3
img diff = 13.053774965667472, fine_tune_threshold=3
img diff = 1.9599321300385761, fine_tune_threshold=3
img diff = 1.2965177389163403, fine_tune_threshold=3
img diff = 1.3759668297376466, fine_tune_threshold=3
img diff = 1.041399477295629, fine_tune_threshold=3
img diff = 0.9148502806896438, fine_tune_threshold=3
img diff = 3.460599123241553, fine_tune_threshold=3
img diff = 1.0938653069259052, fine_tune_threshold=3
img diff = 0.8952679090604658, fine_tune_threshold=3
img diff = 0.9060908363682578, fine_tune_threshold=3
img diff = 0.9886099262214232, fine_tune_threshold=3
img diff = 1.1172128554381198, fine_tune_threshold=3
img diff = 1.6378496087193986, fine_tune_threshold=3
img diff = 3.283158802980675, fine_tune_threshold=3
img diff = 7.607091033405167, fine_tune_threshold=3
img diff = 3.0523316154514664, fine_tune_threshold=3
img diff = 1.4960623318472221, fine_tune_threshold=3
img diff = 1.1280431057618177, fine_tune_threshold=3
img diff = 1.0716919050378664, fine_tune_threshold=3
img diff = 0.9340491766576134, fine_tune_threshold=3
img diff = 3.82446759688723, fine_tune_threshold=3
img diff = 1.0309598775602906, fine_tune_threshold=3
img diff = 0.8768344514424404, fine_tune_threshold=3
img diff = 0.9006823190071533, fine_tune_threshold=3
img diff = 1.0075268338805161, fine_tune_threshold=3
img diff = 1.248388666713534, fine_tune_threshold=3
img diff = 1.5831105743770273, fine_tune_threshold=3
img diff = 3.224565246619485, fine_tune_threshold=3
img diff = 73.50270117789154, fine_tune_threshold=3
img diff = 2.4000033364355673, fine_tune_threshold=3
img diff = 1.496867021777783, fine_tune_threshold=3
img diff = 1.0964456992980989, fine_tune_threshold=3
img diff = 1.1206589020204416, fine_tune_threshold=3
img diff = 0.9670562370712659, fine_tune_threshold=3
img diff = 1.1286450232497973, fine_tune_threshold=3
img diff = 1.3419890973542965, fine_tune_threshold=3
img diff = 0.8929034854664328, fine_tune_threshold=3
img diff = 0.8809919525605499, fine_tune_threshold=3
img diff = 0.9567630026809152, fine_tune_threshold=3
img diff = 1.084359649443503, fine_tune_threshold=3
img diff = 1.4324200101448823, fine_tune_threshold=3
img diff = 2.401129276283179, fine_tune_threshold=3
img diff = 4.373218722838985, fine_tune_threshold=3
img diff = 4.097299726394647, fine_tune_threshold=3
img diff = 1.5679655799290368, fine_tune_threshold=3
img diff = 1.1263339171891302, fine_tune_threshold=3
img diff = 40.606126485289494, fine_tune_threshold=3
img diff = 40.54360855992118, fine_tune_threshold=3
img diff = 40.43763157001797, fine_tune_threshold=3
img diff = 42.74264101623723, fine_tune_threshold=3
img diff = 41.325644662405665, fine_tune_threshold=3
img diff = 40.93684322098007, fine_tune_threshold=3
img diff = 40.87997514344845, fine_tune_threshold=3
img diff = 40.8472405329092, fine_tune_threshold=3
img diff = 40.846382473782285, fine_tune_threshold=3
img diff = 41.58831517223321, fine_tune_threshold=3
img diff = 40.65494128582362, fine_tune_threshold=3
img diff = 40.68629827957632, fine_tune_threshold=3
img diff = 40.6801938898337, fine_tune_threshold=3
img diff = 40.66654545585892, fine_tune_threshold=3
img diff = 40.63397588589052, fine_tune_threshold=3
img diff = 40.56973233156482, fine_tune_threshold=3
img diff = 40.46135258471091, fine_tune_threshold=3
img diff = 109.86507191994997, fine_tune_threshold=3
img diff = 41.20140518928823, fine_tune_threshold=3
img diff = 40.898171501546045, fine_tune_threshold=3
img diff = 40.86022479513922, fine_tune_threshold=3
img diff = 40.85294925194886, fine_tune_threshold=3
img diff = 40.84623962485271, fine_tune_threshold=3
img diff = 40.91086845552389, fine_tune_threshold=3
img diff = 40.641751804830456, fine_tune_threshold=3
img diff = 40.69784656671294, fine_tune_threshold=3
img diff = 40.69259401608243, fine_tune_threshold=3
img diff = 40.67403434187327, fine_tune_threshold=3
img diff = 40.63115855951207, fine_tune_threshold=3
img diff = 40.58152097706629, fine_tune_threshold=3
img diff = 40.44556878375303, fine_tune_threshold=3
img diff = 41.91749175540856, fine_tune_threshold=3
img diff = 41.05289345174869, fine_tune_threshold=3
img diff = 40.978950200695834, fine_tune_threshold=3
img diff = 40.906017467465304, fine_tune_threshold=3
img diff = 40.8546413820848, fine_tune_threshold=3
img diff = 40.87409284732465, fine_tune_threshold=3
img diff = 41.03817913998057, fine_tune_threshold=3
img diff = 40.66052211267122, fine_tune_threshold=3
img diff = 40.68389746251671, fine_tune_threshold=3
img diff = 40.681173615759064, fine_tune_threshold=3
img diff = 40.6940688383818, fine_tune_threshold=3
img diff = 40.63485709312084, fine_tune_threshold=3
img diff = 40.52313170627386, fine_tune_threshold=3
img diff = 40.345710484928325, fine_tune_threshold=3
img diff = 44.249313357902196, fine_tune_threshold=3
img diff = 41.14661899941988, fine_tune_threshold=3
img diff = 40.95584886699047, fine_tune_threshold=3
img diff = 40.93298123386718, fine_tune_threshold=3
img diff = 40.86844893690261, fine_tune_threshold=3
img diff = 40.83666167296208, fine_tune_threshold=3
img diff = 40.97852753636799, fine_tune_threshold=3
img diff = 40.619572364916294, fine_tune_threshold=3
img diff = 40.68025281082733, fine_tune_threshold=3
img diff = 40.69433698423757, fine_tune_threshold=3
img diff = 40.68540144945007, fine_tune_threshold=3
img diff = 40.665381235414756, fine_tune_threshold=3
img diff = 40.566772230045274, fine_tune_threshold=3
img diff = 40.608642271555226, fine_tune_threshold=3
img diff = 57.90354479457429, fine_tune_threshold=3
img diff = 41.0768743235856, fine_tune_threshold=3
img diff = 40.99630200656368, fine_tune_threshold=3
img diff = 40.90648939053693, fine_tune_threshold=3
img diff = 40.84843374937327, fine_tune_threshold=3
img diff = 40.82763943861129, fine_tune_threshold=3
img diff = 40.81939570334642, fine_tune_threshold=3
img diff = 40.71507349481715, fine_tune_threshold=3
img diff = 40.68078097889145, fine_tune_threshold=3
img diff = 40.70091576030465, fine_tune_threshold=3
img diff = 40.68849372732632, fine_tune_threshold=3
img diff = 40.64853497055477, fine_tune_threshold=3
img diff = 40.6086293688343, fine_tune_threshold=3
img diff = 40.55903615561978, fine_tune_threshold=3
img diff = 40.30387266579574, fine_tune_threshold=3
img diff = 108.79657232792783, fine_tune_threshold=3
img diff = 41.10927364906611, fine_tune_threshold=3
img diff = 40.94636277288458, fine_tune_threshold=3
img diff = 40.91120185807882, fine_tune_threshold=3
img diff = 40.826860277616376, fine_tune_threshold=3
img diff = 40.84878203876383, fine_tune_threshold=3
img diff = 13.902779703083896, fine_tune_threshold=3
img diff = 2.7291530040416023, fine_tune_threshold=3
img diff = 1.7431593159474907, fine_tune_threshold=3
img diff = 1.129171144165098, fine_tune_threshold=3
img diff = 0.9734697869044252, fine_tune_threshold=3
img diff = 0.8506700736586984, fine_tune_threshold=3
img diff = 0.6886114518635822, fine_tune_threshold=3
img diff = 2.7594777117581746, fine_tune_threshold=3
img diff = 0.5238304997777685, fine_tune_threshold=3
img diff = 0.45133117254913585, fine_tune_threshold=3
img diff = 0.5067843101017839, fine_tune_threshold=3
img diff = 0.6091701334906003, fine_tune_threshold=3
img diff = 0.8606915928844472, fine_tune_threshold=3
img diff = 1.893351593326479, fine_tune_threshold=3
img diff = 5.357794584744239, fine_tune_threshold=3
img diff = 3.5106579259382005, fine_tune_threshold=3
img diff = 1.716677018529539, fine_tune_threshold=3
img diff = 1.1871331552332256, fine_tune_threshold=3
img diff = 0.9635911354820094, fine_tune_threshold=3
img diff = 0.7998010853700672, fine_tune_threshold=3
img diff = 0.8121832645830807, fine_tune_threshold=3
img diff = 2.3850906453067413, fine_tune_threshold=3
img diff = 0.6283620796127779, fine_tune_threshold=3
img diff = 0.46685439023810904, fine_tune_threshold=3
img diff = 0.48565013377360167, fine_tune_threshold=3
img diff = 0.5758326721937908, fine_tune_threshold=3
img diff = 0.7509192998336665, fine_tune_threshold=3
img diff = 1.1494758934813814, fine_tune_threshold=3
img diff = 2.4931305461688833, fine_tune_threshold=3
img diff = 5.022199602423232, fine_tune_threshold=3
img diff = 2.364683631361496, fine_tune_threshold=3
img diff = 1.8604192827506552, fine_tune_threshold=3
img diff = 1.0125516611955518, fine_tune_threshold=3
img diff = 0.9111832902263844, fine_tune_threshold=3
img diff = 0.7444661613204088, fine_tune_threshold=3
img diff = 1.2199846539779937, fine_tune_threshold=3
img diff = 0.8866029924725347, fine_tune_threshold=3
img diff = 0.46642733858977575, fine_tune_threshold=3
img diff = 0.4686796396962847, fine_tune_threshold=3
img diff = 0.5579894761523118, fine_tune_threshold=3
img diff = 0.8252154334551495, fine_tune_threshold=3
img diff = 1.0851196875114457, fine_tune_threshold=3
img diff = 2.8493970059476426, fine_tune_threshold=3
img diff = 59.77488548225551, fine_tune_threshold=3
img diff = 2.0701321476802983, fine_tune_threshold=3
img diff = 1.7755024790361604, fine_tune_threshold=3
img diff = 0.9707138857106146, fine_tune_threshold=3
img diff = 1.0318409873622358, fine_tune_threshold=3
img diff = 0.8132331718572122, fine_tune_threshold=3
img diff = 1.146020879934775, fine_tune_threshold=3
img diff = 0.8298956952050912, fine_tune_threshold=3
img diff = 0.4653086301464132, fine_tune_threshold=3
img diff = 0.45247811638026864, fine_tune_threshold=3
img diff = 0.584958805757485, fine_tune_threshold=3
img diff = 0.7963031985100792, fine_tune_threshold=3
img diff = 1.2265581064526434, fine_tune_threshold=3
img diff = 2.066139618852285, fine_tune_threshold=3
img diff = 33.66701296204601, fine_tune_threshold=3
img diff = 2.388017472968539, fine_tune_threshold=3
img diff = 1.662373279254768, fine_tune_threshold=3
img diff = 0.9368115690849086, fine_tune_threshold=3
img diff = 1.0142961774093449, fine_tune_threshold=3
img diff = 0.8013013460957078, fine_tune_threshold=3
img diff = 0.971650968747623, fine_tune_threshold=3
img diff = 0.9946665768201952, fine_tune_threshold=3
img diff = 0.5222995778966695, fine_tune_threshold=3
img diff = 0.4577323668811397, fine_tune_threshold=3
img diff = 0.5431355852124057, fine_tune_threshold=3
img diff = 0.6864059406987058, fine_tune_threshold=3
img diff = 1.052339202290383, fine_tune_threshold=3
img diff = 2.775315059559561, fine_tune_threshold=3
img diff = 4.409745426797334, fine_tune_threshold=3
img diff = 2.7077166330528577, fine_tune_threshold=3
img diff = 1.6452312446542097, fine_tune_threshold=3
img diff = 0.9826953494342738, fine_tune_threshold=3
img diff = 0.9164753743878276, fine_tune_threshold=3
img diff = 0.8219085025583458, fine_tune_threshold=3
img diff = 0.7668605786645779, fine_tune_threshold=3
img diff = 1.7068574239796948, fine_tune_threshold=3
img diff = 0.5296271937044124, fine_tune_threshold=3
img diff = 1.9144405032485605, fine_tune_threshold=3
img diff = 1.5240277987057822, fine_tune_threshold=3
img diff = 1.4577246425067374, fine_tune_threshold=3
img diff = 1.1744280534360332, fine_tune_threshold=3
img diff = 1.1571523200249347, fine_tune_threshold=3
img diff = 2.523177195459729, fine_tune_threshold=3
img diff = 0.9851409797779089, fine_tune_threshold=3
img diff = 0.8744150391062625, fine_tune_threshold=3
img diff = 0.9047894901036817, fine_tune_threshold=3
img diff = 0.9237777221892167, fine_tune_threshold=3
img diff = 1.0408818779175166, fine_tune_threshold=3
img diff = 1.5253493845834853, fine_tune_threshold=3
img diff = 4.946406517562736, fine_tune_threshold=3
img diff = 3.9675989670401077, fine_tune_threshold=3
img diff = 2.1406422852155353, fine_tune_threshold=3
img diff = 1.6676356358097708, fine_tune_threshold=3
img diff = 1.365377449171503, fine_tune_threshold=3
img diff = 1.1530504619724757, fine_tune_threshold=3
img diff = 1.1261962556661294, fine_tune_threshold=3
img diff = 1.343610938547871, fine_tune_threshold=3
img diff = 1.2842283383468218, fine_tune_threshold=3
img diff = 0.8866803673703754, fine_tune_threshold=3
img diff = 0.8739928506771701, fine_tune_threshold=3
img diff = 0.9070327644754845, fine_tune_threshold=3
img diff = 0.9813353748847458, fine_tune_threshold=3
img diff = 1.2495836782168008, fine_tune_threshold=3
img diff = 1.9314594047537854, fine_tune_threshold=3
img diff = 21.598818446738314, fine_tune_threshold=3
img diff = 3.1674253313793406, fine_tune_threshold=3
img diff = 1.6565476690050018, fine_tune_threshold=3
img diff = 1.3952251659027974, fine_tune_threshold=3
img diff = 1.351322528665147, fine_tune_threshold=3
img diff = 1.1604708862128206, fine_tune_threshold=3
img diff = 1.0780139736428276, fine_tune_threshold=3
img diff = 2.1263126407852058, fine_tune_threshold=3
img diff = 0.8989046196430635, fine_tune_threshold=3
img diff = 0.8641859184915408, fine_tune_threshold=3
img diff = 0.9033828840784904, fine_tune_threshold=3
img diff = 0.9664761810869213, fine_tune_threshold=3
img diff = 1.1191841694024112, fine_tune_threshold=3
img diff = 1.9043427243825224, fine_tune_threshold=3
img diff = 59.012505583785284, fine_tune_threshold=3
img diff = 3.298220086935448, fine_tune_threshold=3
img diff = 1.9135783500785792, fine_tune_threshold=3
img diff = 1.4834233284331964, fine_tune_threshold=3
img diff = 1.3119346365320474, fine_tune_threshold=3
img diff = 1.2215865067262306, fine_tune_threshold=3
img diff = 1.127360206001086, fine_tune_threshold=3
img diff = 1.7470411953692428, fine_tune_threshold=3
img diff = 0.9111382506557634, fine_tune_threshold=3
img diff = 0.8776596786570809, fine_tune_threshold=3
img diff = 0.916760756522488, fine_tune_threshold=3
img diff = 1.000481940164545, fine_tune_threshold=3
img diff = 1.1045143453214519, fine_tune_threshold=3
img diff = 2.01794244597624, fine_tune_threshold=3
img diff = 3.0986101846935084, fine_tune_threshold=3
img diff = 7.378856699562865, fine_tune_threshold=3
img diff = 1.74162611206467, fine_tune_threshold=3
img diff = 1.6209559153828992, fine_tune_threshold=3
img diff = 1.4307373889678052, fine_tune_threshold=3
img diff = 1.2714962005298334, fine_tune_threshold=3
img diff = 1.1376182694577364, fine_tune_threshold=3
img diff = 9.617386179473854, fine_tune_threshold=3
img diff = 0.9374948194583999, fine_tune_threshold=3
img diff = 0.8647339913378331, fine_tune_threshold=3
img diff = 0.8895985963435162, fine_tune_threshold=3
img diff = 0.966746828521768, fine_tune_threshold=3
img diff = 1.1100167064834865, fine_tune_threshold=3
img diff = 2.1957414544795597, fine_tune_threshold=3
img diff = 6.184380732423926, fine_tune_threshold=3
img diff = 5.211482382023792, fine_tune_threshold=3
img diff = 2.11047366764681, fine_tune_threshold=3
img diff = 1.4762776778528524, fine_tune_threshold=3
img diff = 1.3147333555943503, fine_tune_threshold=3
img diff = 1.2013821582650492, fine_tune_threshold=3
img diff = 1.070652541683806, fine_tune_threshold=3
img diff = 2.0830638103148784, fine_tune_threshold=3
img diff = 1.0738122894484676, fine_tune_threshold=3
img diff = 0.883509258100057, fine_tune_threshold=3
img diff = 0.8709219547040271, fine_tune_threshold=3
img diff = 2.5317256241672803, fine_tune_threshold=3
img diff = 2.265421255743151, fine_tune_threshold=3
img diff = 2.2114968010808798, fine_tune_threshold=3
img diff = 2.221850813895184, fine_tune_threshold=3
img diff = 2.6734041010056755, fine_tune_threshold=3
img diff = 1.9699242676622128, fine_tune_threshold=3
img diff = 1.9527529910602215, fine_tune_threshold=3
img diff = 1.973326570642005, fine_tune_threshold=3
img diff = 1.9944673696969761, fine_tune_threshold=3
img diff = 2.1268861868350166, fine_tune_threshold=3
img diff = 2.3560728686275945, fine_tune_threshold=3
img diff = 4.73108761121224, fine_tune_threshold=3
img diff = 16.305039642862383, fine_tune_threshold=3
img diff = 3.0754517865789723, fine_tune_threshold=3
img diff = 2.4229714136133924, fine_tune_threshold=3
img diff = 2.3536976576775546, fine_tune_threshold=3
img diff = 2.203048272412903, fine_tune_threshold=3
img diff = 2.1590942068915986, fine_tune_threshold=3
img diff = 2.3595577656933786, fine_tune_threshold=3
img diff = 2.020289052129124, fine_tune_threshold=3
img diff = 1.9521538207305043, fine_tune_threshold=3
img diff = 1.9652442531579863, fine_tune_threshold=3
img diff = 1.9948686321503986, fine_tune_threshold=3
img diff = 1.987319189772688, fine_tune_threshold=3
img diff = 2.086223002100767, fine_tune_threshold=3
img diff = 2.979230741269301, fine_tune_threshold=3
img diff = 6.321365875026677, fine_tune_threshold=3
img diff = 5.173947827544744, fine_tune_threshold=3
img diff = 2.408475725333595, fine_tune_threshold=3
img diff = 2.274769113242241, fine_tune_threshold=3
img diff = 2.260687848002433, fine_tune_threshold=3
img diff = 2.2169335927408227, fine_tune_threshold=3
img diff = 2.2699373524184705, fine_tune_threshold=3
img diff = 2.0822975979172167, fine_tune_threshold=3
img diff = 1.9564795400375208, fine_tune_threshold=3
img diff = 1.953765135329112, fine_tune_threshold=3
img diff = 1.952226578147844, fine_tune_threshold=3
img diff = 2.024105683739954, fine_tune_threshold=3
img diff = 2.1964226291126443, fine_tune_threshold=3
img diff = 4.934524162640936, fine_tune_threshold=3
img diff = 4.221193286527753, fine_tune_threshold=3
img diff = 2.5013199940513955, fine_tune_threshold=3
img diff = 2.338930259630292, fine_tune_threshold=3
img diff = 2.254598270852637, fine_tune_threshold=3
img diff = 2.1934099052459892, fine_tune_threshold=3
img diff = 2.206150949669581, fine_tune_threshold=3
img diff = 2.1146437532105145, fine_tune_threshold=3
img diff = 37.30340247986325, fine_tune_threshold=3
img diff = 1.9704842509100104, fine_tune_threshold=3
img diff = 1.959594885661047, fine_tune_threshold=3
img diff = 1.9506817638228402, fine_tune_threshold=3
img diff = 2.0002716537432366, fine_tune_threshold=3
img diff = 2.06789249915657, fine_tune_threshold=3
img diff = 2.4111135724231083, fine_tune_threshold=3
img diff = 3.4507300116978517, fine_tune_threshold=3
img diff = 42.119629181532204, fine_tune_threshold=3
img diff = 3.2598109536143176, fine_tune_threshold=3
img diff = 2.4297903949774726, fine_tune_threshold=3
img diff = 2.3338863961760183, fine_tune_threshold=3
img diff = 2.2264410749349626, fine_tune_threshold=3
img diff = 2.1646650297459, fine_tune_threshold=3
img diff = 3.764228296827634, fine_tune_threshold=3
img diff = 2.0014853648917046, fine_tune_threshold=3
img diff = 1.9578265860666835, fine_tune_threshold=3
img diff = 1.9619850517277402, fine_tune_threshold=3
img diff = 1.9699799956891895, fine_tune_threshold=3
img diff = 2.0262568876953697, fine_tune_threshold=3
img diff = 2.1609727817994027, fine_tune_threshold=3
img diff = 3.0522102333572025, fine_tune_threshold=3
img diff = 8.238702637440994, fine_tune_threshold=3
img diff = 2.9142247630726343, fine_tune_threshold=3
img diff = 2.5054625143303966, fine_tune_threshold=3
img diff = 2.2334247809263674, fine_tune_threshold=3
img diff = 2.219870338241771, fine_tune_threshold=3
img diff = 2.1694406233539514, fine_tune_threshold=3
img diff = 2.496567686848784, fine_tune_threshold=3
img diff = 2.0567465130797142, fine_tune_threshold=3
img diff = 1.979798995890061, fine_tune_threshold=3
img diff = 1.948700890768177, fine_tune_threshold=3
img diff = 1.9653757370442761, fine_tune_threshold=3
img diff = 23.222343598020984, fine_tune_threshold=3
img diff = 23.291268326310508, fine_tune_threshold=3
img diff = 23.27463957951822, fine_tune_threshold=3
img diff = 23.563684792423675, fine_tune_threshold=3
img diff = 23.435824106870168, fine_tune_threshold=3
img diff = 23.421423165867274, fine_tune_threshold=3
img diff = 23.42114274904671, fine_tune_threshold=3
img diff = 23.445076705428548, fine_tune_threshold=3
img diff = 23.49542067766508, fine_tune_threshold=3
img diff = 23.74358421864733, fine_tune_threshold=3
img diff = 25.915994718224376, fine_tune_threshold=3
img diff = 23.23988450260559, fine_tune_threshold=3
img diff = 23.16843538307255, fine_tune_threshold=3
img diff = 23.22402537218781, fine_tune_threshold=3
img diff = 23.28576353610783, fine_tune_threshold=3
img diff = 23.261678492884275, fine_tune_threshold=3
img diff = 23.29271795793947, fine_tune_threshold=3
img diff = 23.91774631091187, fine_tune_threshold=3
img diff = 23.43213898984564, fine_tune_threshold=3
img diff = 23.40710463240135, fine_tune_threshold=3
img diff = 23.432848948260435, fine_tune_threshold=3
img diff = 23.463894420468705, fine_tune_threshold=3
img diff = 23.518557283988844, fine_tune_threshold=3
img diff = 23.70367682501619, fine_tune_threshold=3
img diff = 24.70244736375484, fine_tune_threshold=3
img diff = 23.027143727543837, fine_tune_threshold=3
img diff = 23.140313349819586, fine_tune_threshold=3
img diff = 23.228319997649397, fine_tune_threshold=3
img diff = 23.2489785517143, fine_tune_threshold=3
img diff = 23.246019943106596, fine_tune_threshold=3
img diff = 23.279701658940464, fine_tune_threshold=3
img diff = 23.686886204927955, fine_tune_threshold=3
img diff = 23.429888006074457, fine_tune_threshold=3
img diff = 23.40871317713618, fine_tune_threshold=3
img diff = 23.423756232077746, fine_tune_threshold=3
img diff = 23.46546143321547, fine_tune_threshold=3
img diff = 23.545551476216552, fine_tune_threshold=3
img diff = 24.402461282784163, fine_tune_threshold=3
img diff = 32.87807986888269, fine_tune_threshold=3
img diff = 23.023035544929783, fine_tune_threshold=3
img diff = 23.211180687872066, fine_tune_threshold=3
img diff = 23.262627051990155, fine_tune_threshold=3
img diff = 23.249516225504554, fine_tune_threshold=3
img diff = 23.290263092675602, fine_tune_threshold=3
img diff = 23.263108569555406, fine_tune_threshold=3
img diff = 28.701318445329118, fine_tune_threshold=3
img diff = 23.444624832718453, fine_tune_threshold=3
img diff = 23.413322236983596, fine_tune_threshold=3
img diff = 23.423564842948636, fine_tune_threshold=3
img diff = 23.461829410875044, fine_tune_threshold=3
img diff = 23.490265850936627, fine_tune_threshold=3
img diff = 23.543473772062654, fine_tune_threshold=3
img diff = 23.93714893404446, fine_tune_threshold=3
img diff = 24.118825961713636, fine_tune_threshold=3
img diff = 23.170932100982636, fine_tune_threshold=3
img diff = 23.213374573691098, fine_tune_threshold=3
img diff = 23.25182929876172, fine_tune_threshold=3
img diff = 23.250008986667048, fine_tune_threshold=3
img diff = 23.285004010259186, fine_tune_threshold=3
img diff = 23.237723762346093, fine_tune_threshold=3
img diff = 23.454933272973978, fine_tune_threshold=3
img diff = 23.418083291747884, fine_tune_threshold=3
img diff = 23.426972587544075, fine_tune_threshold=3
img diff = 23.456619668764013, fine_tune_threshold=3
img diff = 23.460852740663725, fine_tune_threshold=3
img diff = 23.56555458662891, fine_tune_threshold=3
img diff = 24.50678957895224, fine_tune_threshold=3
img diff = 23.309582536567586, fine_tune_threshold=3
img diff = 23.178181783036404, fine_tune_threshold=3
img diff = 23.180379535859657, fine_tune_threshold=3
img diff = 23.285611704929273, fine_tune_threshold=3
img diff = 23.294791110838723, fine_tune_threshold=3
img diff = 23.293683624129592, fine_tune_threshold=3
img diff = 23.207934595014763, fine_tune_threshold=3
img diff = 23.468002752358395, fine_tune_threshold=3
img diff = 23.412431134601533, fine_tune_threshold=3
img diff = 23.41583847158345, fine_tune_threshold=3
img diff = 23.43701208560917, fine_tune_threshold=3
img diff = 23.454707162037707, fine_tune_threshold=3
img diff = 23.569123052618004, fine_tune_threshold=3
img diff = 1.3888989233298386, fine_tune_threshold=3
img diff = 1.696160206522611, fine_tune_threshold=3
img diff = 1.3061225363953453, fine_tune_threshold=3
img diff = 1.2734527745964779, fine_tune_threshold=3
img diff = 1.3169255264703876, fine_tune_threshold=3
img diff = 1.4270498560771712, fine_tune_threshold=3
img diff = 1.622792703059455, fine_tune_threshold=3
img diff = 2.1047554480801143, fine_tune_threshold=3
img diff = 10.190630204079321, fine_tune_threshold=3
img diff = 4.870177903983263, fine_tune_threshold=3
img diff = 1.9535479791206873, fine_tune_threshold=3
img diff = 1.5845918871411133, fine_tune_threshold=3
img diff = 1.4287295995070095, fine_tune_threshold=3
img diff = 1.285895258874639, fine_tune_threshold=3
img diff = 1.2473581541814247, fine_tune_threshold=3
img diff = 22.061641738695123, fine_tune_threshold=3
img diff = 1.403214567329973, fine_tune_threshold=3
img diff = 1.2770873037533144, fine_tune_threshold=3
img diff = 1.304014298062198, fine_tune_threshold=3
img diff = 1.344017468864341, fine_tune_threshold=3
img diff = 1.4938454409939448, fine_tune_threshold=3
img diff = 1.8826451363562748, fine_tune_threshold=3
img diff = 2.9279280338783646, fine_tune_threshold=3
img diff = 8.454148241564436, fine_tune_threshold=3
img diff = 2.3768350932824838, fine_tune_threshold=3
img diff = 1.4258418541387003, fine_tune_threshold=3
img diff = 1.370148332421877, fine_tune_threshold=3
img diff = 1.3344505622699476, fine_tune_threshold=3
img diff = 1.2817375930523291, fine_tune_threshold=3
img diff = 1.9700359248034585, fine_tune_threshold=3
img diff = 1.448722876716848, fine_tune_threshold=3
img diff = 1.265161413590579, fine_tune_threshold=3
img diff = 1.2639101437616904, fine_tune_threshold=3
img diff = 1.3527183258740112, fine_tune_threshold=3
img diff = 1.46340612926751, fine_tune_threshold=3
img diff = 1.67090842485895, fine_tune_threshold=3
img diff = 5.124980835356451, fine_tune_threshold=3
img diff = 23.509930043094638, fine_tune_threshold=3
img diff = 2.2083453207553454, fine_tune_threshold=3
img diff = 1.7269704836655504, fine_tune_threshold=3
img diff = 1.432933390799881, fine_tune_threshold=3
img diff = 1.296858493583406, fine_tune_threshold=3
img diff = 1.2514713966500945, fine_tune_threshold=3
img diff = 1.3543725380123637, fine_tune_threshold=3
img diff = 1.627701116091291, fine_tune_threshold=3
img diff = 1.2790630853883411, fine_tune_threshold=3
img diff = 1.2692176808371374, fine_tune_threshold=3
img diff = 1.3435562254806637, fine_tune_threshold=3
img diff = 1.4596137573716361, fine_tune_threshold=3
img diff = 1.7407104835938334, fine_tune_threshold=3
img diff = 2.2418063725754855, fine_tune_threshold=3
img diff = 22.043256263487955, fine_tune_threshold=3
img diff = 2.28027858589009, fine_tune_threshold=3
img diff = 1.6744501552909603, fine_tune_threshold=3
img diff = 1.4126541540772588, fine_tune_threshold=3
img diff = 1.3253113869007012, fine_tune_threshold=3
img diff = 1.271557008421071, fine_tune_threshold=3
img diff = 1.274571046405655, fine_tune_threshold=3
img diff = 1.9919754894267032, fine_tune_threshold=3
img diff = 1.3267134506422444, fine_tune_threshold=3
img diff = 1.2712487401768429, fine_tune_threshold=3
img diff = 1.3144028890738513, fine_tune_threshold=3
img diff = 1.3929309478530192, fine_tune_threshold=3
img diff = 1.5720368402908136, fine_tune_threshold=3
img diff = 2.093330146083512, fine_tune_threshold=3
img diff = 15.75851465246661, fine_tune_threshold=3
img diff = 2.6023713356015206, fine_tune_threshold=3
img diff = 1.6196829605258367, fine_tune_threshold=3
img diff = 1.4760793085496446, fine_tune_threshold=3
img diff = 1.4218177132452494, fine_tune_threshold=3
img diff = 1.353139807573053, fine_tune_threshold=3
img diff = 1.2585371488126897, fine_tune_threshold=3
img diff = 4.382338484643709, fine_tune_threshold=3
img diff = 1.3937893836231343, fine_tune_threshold=3
img diff = 1.2688735466938625, fine_tune_threshold=3
img diff = 1.2876512538142866, fine_tune_threshold=3
img diff = 1.3595450637978346, fine_tune_threshold=3
img diff = 1.5412829197212772, fine_tune_threshold=3
img diff = 2.058790248986404, fine_tune_threshold=3
img diff = 3.7555734176563687, fine_tune_threshold=3
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 3 devices
Found 2 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a46c16b90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a467da710>}
    -available positions:
   ('J1', [3294.4117499999984, 2529.2446874999987])
   ('J2', [3474.4104374999984, 1549.2412499999991])
   ('J3', [3654.4091249999983, 559.2365624999998])
   ('J4', [3834.4078124999987, -420.7668749999998])
   ('J5', [3094.4105624999984, 3509.2243124999986])
   ('H1', [8364.426374999995, 4209.240374999998])
   ('H2', [8544.425062499997, 3229.2369374999985])
   ('H3', [8724.423749999996, 2249.233499999999])
   ('H4', [8904.422437499998, 1269.2300624999993])
   ('H5', [9094.422374999996, 279.2253749999999])
    -current position: [3644.4078749999985, 556.2361874999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a467db810>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a46c16b90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a467da710>}
    -available positions:
   ('J1', [3294.4117499999984, 2529.2446874999987])
   ('J2', [3474.4104374999984, 1549.2412499999991])
   ('J3', [3654.4091249999983, 559.2365624999998])
   ('J4', [3834.4078124999987, -420.7668749999998])
   ('J5', [3094.4105624999984, 3509.2243124999986])
   ('H1', [8364.426374999995, 4209.240374999998])
   ('H2', [8544.425062499997, 3229.2369374999985])
   ('H3', [8724.423749999996, 2249.233499999999])
   ('H4', [8904.422437499998, 1269.2300624999993])
   ('H5', [9094.422374999996, 279.2253749999999])
    -current position: [3654.4091249999983, 559.2365624999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f8a467db810>
    -current position: 3999.9999374999984um
img diff = 4.019843380679697, fine_tune_threshold=3
img diff = 3.1589336770162912, fine_tune_threshold=3
img diff = 1.3339887928590426, fine_tune_threshold=3
img diff = 1.2089396905239354, fine_tune_threshold=3
img diff = 1.2086613008472973, fine_tune_threshold=3
img diff = 1.2071381768783875, fine_tune_threshold=3
img diff = 1.219080786367548, fine_tune_threshold=3
img diff = 1.2558583508099725, fine_tune_threshold=3
img diff = 1.276080786697702, fine_tune_threshold=3
img diff = 1.32714943705387, fine_tune_threshold=3
img diff = 1.4492068196495103, fine_tune_threshold=3
img diff = 1.6347527138537743, fine_tune_threshold=3
img diff = 2.8597296551325098, fine_tune_threshold=3
img diff = 5.176886677950858, fine_tune_threshold=3
img diff = 8.442664807822368, fine_tune_threshold=3
img diff = 3.0175258752977774, fine_tune_threshold=3
img diff = 1.286508078891743, fine_tune_threshold=3
img diff = 1.2156825618397304, fine_tune_threshold=3
img diff = 1.2100047614473322, fine_tune_threshold=3
img diff = 1.2061724674154266, fine_tune_threshold=3
img diff = 1.2100969358562421, fine_tune_threshold=3
img diff = 1.2372075395607247, fine_tune_threshold=3
img diff = 1.2612810250316977, fine_tune_threshold=3
img diff = 1.360045996481524, fine_tune_threshold=3
img diff = 1.4019787312048144, fine_tune_threshold=3
img diff = 1.7038927023349388, fine_tune_threshold=3
img diff = 2.5200432108159996, fine_tune_threshold=3
img diff = 7.48989940998168, fine_tune_threshold=3
img diff = 3.586397961231097, fine_tune_threshold=3
img diff = 2.6196284436627817, fine_tune_threshold=3
img diff = 1.3042203134260602, fine_tune_threshold=3
img diff = 1.2149010963058895, fine_tune_threshold=3
img diff = 1.203502240272755, fine_tune_threshold=3
img diff = 1.2086666532780663, fine_tune_threshold=3
img diff = 1.2108076766197033, fine_tune_threshold=3
img diff = 1.2518041106207138, fine_tune_threshold=3
img diff = 1.2565408184910276, fine_tune_threshold=3
img diff = 1.2882499748451295, fine_tune_threshold=3
img diff = 1.4728996594476527, fine_tune_threshold=3
img diff = 1.694787336842741, fine_tune_threshold=3
img diff = 2.652555911499782, fine_tune_threshold=3
img diff = 4.631404246829815, fine_tune_threshold=3
img diff = 12.421748065785444, fine_tune_threshold=3
img diff = 3.1841598950610397, fine_tune_threshold=3
img diff = 1.4352827518633013, fine_tune_threshold=3
img diff = 1.2186928666045347, fine_tune_threshold=3
img diff = 1.2081641133864496, fine_tune_threshold=3
img diff = 1.20760284312095, fine_tune_threshold=3
img diff = 1.2159707912165105, fine_tune_threshold=3
img diff = 1.2227764380971418, fine_tune_threshold=3
img diff = 1.2408030126376992, fine_tune_threshold=3
img diff = 1.312375134086075, fine_tune_threshold=3
img diff = 1.3553144280287324, fine_tune_threshold=3
img diff = 1.5980502230636506, fine_tune_threshold=3
img diff = 1.8780485930313549, fine_tune_threshold=3
img diff = 2.5424567546772767, fine_tune_threshold=3
img diff = 51.72539440959581, fine_tune_threshold=3
img diff = 5.9622099746877755, fine_tune_threshold=3
img diff = 5.162397350217034, fine_tune_threshold=3
img diff = 1.2353431246248625, fine_tune_threshold=3
img diff = 1.2105872187021864, fine_tune_threshold=3
img diff = 1.2089956498050738, fine_tune_threshold=3
img diff = 1.2081362951519727, fine_tune_threshold=3
img diff = 1.2235549615898402, fine_tune_threshold=3
img diff = 1.2306173921223944, fine_tune_threshold=3
img diff = 1.251496925036615, fine_tune_threshold=3
img diff = 1.3232427964347262, fine_tune_threshold=3
img diff = 1.494725681292558, fine_tune_threshold=3
img diff = 1.7993746152171697, fine_tune_threshold=3
img diff = 2.609506973440518, fine_tune_threshold=3
img diff = 5.2399413475636365, fine_tune_threshold=3
img diff = 6.297604488117879, fine_tune_threshold=3
img diff = 2.490980523927208, fine_tune_threshold=3
img diff = 1.2884382542200465, fine_tune_threshold=3
img diff = 1.2129057567113057, fine_tune_threshold=3
img diff = 1.2078165279453978, fine_tune_threshold=3
img diff = 1.202940828424568, fine_tune_threshold=3
img diff = 1.2189463612769882, fine_tune_threshold=3
img diff = 1.2237357528628017, fine_tune_threshold=3
img diff = 1.253608646120348, fine_tune_threshold=3
img diff = 9.162159987658463, fine_tune_threshold=3
img diff = 1.7420556954113646, fine_tune_threshold=3
img diff = 1.711784707595787, fine_tune_threshold=3
img diff = 1.7124059374270333, fine_tune_threshold=3
img diff = 1.7105906186381292, fine_tune_threshold=3
img diff = 1.7228351575030307, fine_tune_threshold=3
img diff = 1.7327417283172113, fine_tune_threshold=3
img diff = 1.7507552160520892, fine_tune_threshold=3
img diff = 1.8533463874684686, fine_tune_threshold=3
img diff = 1.9063035536023882, fine_tune_threshold=3
img diff = 2.6002985700338117, fine_tune_threshold=3
img diff = 2.933823883270994, fine_tune_threshold=3
img diff = 15.998497839169767, fine_tune_threshold=3
img diff = 16.125901371347098, fine_tune_threshold=3
img diff = 3.9637544353759973, fine_tune_threshold=3
img diff = 1.732140184515993, fine_tune_threshold=3
img diff = 1.709991576346551, fine_tune_threshold=3
img diff = 1.713430627959037, fine_tune_threshold=3
img diff = 1.7098776052184674, fine_tune_threshold=3
img diff = 1.7221473393447304, fine_tune_threshold=3
img diff = 1.7206915448823277, fine_tune_threshold=3
img diff = 1.7493215989257245, fine_tune_threshold=3
img diff = 1.7847768681680432, fine_tune_threshold=3
img diff = 1.8837632607052925, fine_tune_threshold=3
img diff = 2.097781967640859, fine_tune_threshold=3
img diff = 2.610842556012177, fine_tune_threshold=3
img diff = 12.810807485477323, fine_tune_threshold=3
img diff = 5.297322307944732, fine_tune_threshold=3
img diff = 3.39223813449843, fine_tune_threshold=3
img diff = 1.8042190070828394, fine_tune_threshold=3
img diff = 1.7171517756980275, fine_tune_threshold=3
img diff = 1.7216223271706403, fine_tune_threshold=3
img diff = 1.7146368911234426, fine_tune_threshold=3
img diff = 1.7133995835404003, fine_tune_threshold=3
img diff = 1.7239710282126115, fine_tune_threshold=3
img diff = 1.7429599564852811, fine_tune_threshold=3
img diff = 1.741642688234615, fine_tune_threshold=3
img diff = 1.8656314826624025, fine_tune_threshold=3
img diff = 1.89670753326119, fine_tune_threshold=3
img diff = 2.7261858384978517, fine_tune_threshold=3
img diff = 3.717141991641009, fine_tune_threshold=3
img diff = 489.33526384427853, fine_tune_threshold=3
img diff = 4.338079523093986, fine_tune_threshold=3
img diff = 1.8259373601826128, fine_tune_threshold=3
img diff = 1.7146798906256544, fine_tune_threshold=3
img diff = 1.7155099995258336, fine_tune_threshold=3
img diff = 1.7122813347901644, fine_tune_threshold=3
img diff = 1.7133795500593378, fine_tune_threshold=3
img diff = 1.7282310131201282, fine_tune_threshold=3
img diff = 1.7316096385223492, fine_tune_threshold=3
img diff = 1.7524565267579726, fine_tune_threshold=3
img diff = 1.84344211754038, fine_tune_threshold=3
img diff = 1.9172932097422515, fine_tune_threshold=3
img diff = 2.4342927898683655, fine_tune_threshold=3
img diff = 4.09919765035186, fine_tune_threshold=3
img diff = 44.24166066932757, fine_tune_threshold=3
img diff = 4.471442571881825, fine_tune_threshold=3
img diff = 1.8473270236176678, fine_tune_threshold=3
img diff = 1.7131688412537995, fine_tune_threshold=3
img diff = 1.7195736592500603, fine_tune_threshold=3
img diff = 1.7156010761898204, fine_tune_threshold=3
img diff = 1.711914173478847, fine_tune_threshold=3
img diff = 1.7249909828087973, fine_tune_threshold=3
img diff = 1.7249749636009302, fine_tune_threshold=3
img diff = 1.7474306408476288, fine_tune_threshold=3
img diff = 1.7775975936363455, fine_tune_threshold=3
img diff = 1.999311515564083, fine_tune_threshold=3
img diff = 2.9417877606041536, fine_tune_threshold=3
img diff = 3.269653534945115, fine_tune_threshold=3
img diff = 170.8028507858608, fine_tune_threshold=3
img diff = 3.9485664862760057, fine_tune_threshold=3
img diff = 1.8566535321607187, fine_tune_threshold=3
img diff = 1.712298120806044, fine_tune_threshold=3
img diff = 1.7138103426066003, fine_tune_threshold=3
img diff = 1.7096138260058202, fine_tune_threshold=3
img diff = 1.7298557070526217, fine_tune_threshold=3
img diff = 1.7123966590888364, fine_tune_threshold=3
img diff = 1.7373703195285086, fine_tune_threshold=3
img diff = 1.7544273257494967, fine_tune_threshold=3
img diff = 1.8092267492260081, fine_tune_threshold=3
img diff = 10.247684146099076, fine_tune_threshold=3
img diff = 10.241754244763154, fine_tune_threshold=3
img diff = 10.243463365741949, fine_tune_threshold=3
img diff = 10.238887700976568, fine_tune_threshold=3
img diff = 10.252183422290951, fine_tune_threshold=3
img diff = 10.298006264518019, fine_tune_threshold=3
img diff = 10.337876016664588, fine_tune_threshold=3
img diff = 10.388399582813626, fine_tune_threshold=3
img diff = 10.566260598001026, fine_tune_threshold=3
img diff = 10.84038927570142, fine_tune_threshold=3
img diff = 13.294012390729641, fine_tune_threshold=3
img diff = 12.08747975904201, fine_tune_threshold=3
img diff = 10.17107505547224, fine_tune_threshold=3
img diff = 10.436484520002821, fine_tune_threshold=3
img diff = 10.260796326979499, fine_tune_threshold=3
img diff = 10.240273251335623, fine_tune_threshold=3
img diff = 10.237034077345, fine_tune_threshold=3
img diff = 10.250464319154474, fine_tune_threshold=3
img diff = 10.254662622287414, fine_tune_threshold=3
img diff = 10.291331082203692, fine_tune_threshold=3
img diff = 10.306441842334156, fine_tune_threshold=3
img diff = 10.35880094610561, fine_tune_threshold=3
img diff = 10.440136803440797, fine_tune_threshold=3
img diff = 10.96681888004898, fine_tune_threshold=3
img diff = 12.353215748732852, fine_tune_threshold=3
img diff = 44.54595856071823, fine_tune_threshold=3
img diff = 10.434887554500069, fine_tune_threshold=3
img diff = 11.492078491734588, fine_tune_threshold=3
img diff = 10.289028053977043, fine_tune_threshold=3
img diff = 10.241985940582044, fine_tune_threshold=3
img diff = 10.233927317957708, fine_tune_threshold=3
img diff = 10.253808800910182, fine_tune_threshold=3
img diff = 10.25784327789605, fine_tune_threshold=3
img diff = 10.278255046469752, fine_tune_threshold=3
img diff = 10.292433287715756, fine_tune_threshold=3
img diff = 10.323522110068533, fine_tune_threshold=3
img diff = 10.36455890155749, fine_tune_threshold=3
img diff = 10.53409728910783, fine_tune_threshold=3
img diff = 10.833778015697584, fine_tune_threshold=3
img diff = 13.159434026711407, fine_tune_threshold=3
img diff = 12.583379023721303, fine_tune_threshold=3
img diff = 10.245095760337577, fine_tune_threshold=3
img diff = 10.449755059719962, fine_tune_threshold=3
img diff = 10.258955870432736, fine_tune_threshold=3
img diff = 10.232661663127455, fine_tune_threshold=3
img diff = 10.235167299875702, fine_tune_threshold=3
img diff = 10.25376027036275, fine_tune_threshold=3
img diff = 10.264927954283294, fine_tune_threshold=3
img diff = 10.278876264523642, fine_tune_threshold=3
img diff = 10.296245649306307, fine_tune_threshold=3
img diff = 10.3453404455738, fine_tune_threshold=3
img diff = 10.443397431124254, fine_tune_threshold=3
img diff = 10.484310944637837, fine_tune_threshold=3
img diff = 11.142732229559147, fine_tune_threshold=3
img diff = 64.05018040520466, fine_tune_threshold=3
img diff = 11.00924621321797, fine_tune_threshold=3
img diff = 17.97046164968866, fine_tune_threshold=3
img diff = 10.27628088170206, fine_tune_threshold=3
img diff = 10.23283829966621, fine_tune_threshold=3
img diff = 10.2297125271741, fine_tune_threshold=3
img diff = 10.242711135706564, fine_tune_threshold=3
img diff = 10.26046704908202, fine_tune_threshold=3
img diff = 10.273218339237896, fine_tune_threshold=3
img diff = 10.296487421698338, fine_tune_threshold=3
img diff = 10.349354240539663, fine_tune_threshold=3
img diff = 10.357036352790011, fine_tune_threshold=3
img diff = 10.787855295703508, fine_tune_threshold=3
img diff = 10.591593080179646, fine_tune_threshold=3
img diff = 15.625348449045404, fine_tune_threshold=3
img diff = 14.275755833328379, fine_tune_threshold=3
img diff = 10.290895712500383, fine_tune_threshold=3
img diff = 10.293165076790556, fine_tune_threshold=3
img diff = 10.245176950624579, fine_tune_threshold=3
img diff = 10.229890927717985, fine_tune_threshold=3
img diff = 10.245200817387996, fine_tune_threshold=3
img diff = 10.26212019044247, fine_tune_threshold=3
img diff = 10.271110509578211, fine_tune_threshold=3
img diff = 10.279751646765249, fine_tune_threshold=3
img diff = 10.32064708513809, fine_tune_threshold=3
img diff = 10.319163112641235, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 492, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 202, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 140, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17670" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 3 devices
Found 2 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec67d0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec6890>}
    -available positions:
   ('J1', [3294.4117499999984, 2529.2446874999987])
   ('J2', [3474.4104374999984, 1549.2412499999991])
   ('J3', [3654.4091249999983, 559.2365624999998])
   ('J4', [3834.4078124999987, -420.7668749999998])
   ('J5', [3094.4105624999984, 3509.2243124999986])
   ('H1', [8364.426374999995, 4209.240374999998])
   ('H2', [8544.425062499997, 3229.2369374999985])
   ('H3', [8724.423749999996, 2249.233499999999])
   ('H4', [8904.422437499998, 1269.2300624999993])
   ('H5', [9094.422374999996, 279.2253749999999])
    -current position: [3834.407812499998, 1613.8445624999993]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec7890>
    -current position: 3999.9999374999984um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
dichroic motor:
   Device 3 SN: 121407 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec67d0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec6890>}
    -available positions:
   ('J1', [3294.4117499999984, 2529.2446874999987])
   ('J2', [3474.4104374999984, 1549.2412499999991])
   ('J3', [3654.4091249999983, 559.2365624999998])
   ('J4', [3834.4078124999987, -420.7668749999998])
   ('J5', [3094.4105624999984, 3509.2243124999986])
   ('H1', [8364.426374999995, 4209.240374999998])
   ('H2', [8544.425062499997, 3229.2369374999985])
   ('H3', [8724.423749999996, 2249.233499999999])
   ('H4', [8904.422437499998, 1269.2300624999993])
   ('H5', [9094.422374999996, 279.2253749999999])
    -current position: [3654.4091249999983, 559.2365624999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7fc7d0ec7890>
    -current position: 3999.9999374999984um
img diff = 3.8576912221593167, fine_tune_threshold=3
img diff = 1.324553326140433, fine_tune_threshold=3
img diff = 1.2618876924570446, fine_tune_threshold=3
img diff = 1.2561022794055217, fine_tune_threshold=3
img diff = 1.2667184294986433, fine_tune_threshold=3
img diff = 1.2651105048489708, fine_tune_threshold=3
img diff = 1.2744699021667434, fine_tune_threshold=3
img diff = 1.320913822301821, fine_tune_threshold=3
img diff = 1.3750742078230025, fine_tune_threshold=3
img diff = 1.4617018304043037, fine_tune_threshold=3
img diff = 1.5596774101338187, fine_tune_threshold=3
img diff = 1.8477113796642208, fine_tune_threshold=3
img diff = 3.020810102558027, fine_tune_threshold=3
img diff = 16.813853595503037, fine_tune_threshold=3
img diff = 6.261239551158204, fine_tune_threshold=3
img diff = 1.5879343398230805, fine_tune_threshold=3
img diff = 1.2755086154616944, fine_tune_threshold=3
img diff = 1.257288587114734, fine_tune_threshold=3
img diff = 1.2621569952291853, fine_tune_threshold=3
img diff = 1.277678787614293, fine_tune_threshold=3
img diff = 1.2701340122032252, fine_tune_threshold=3
img diff = 1.309729161263583, fine_tune_threshold=3
img diff = 1.3290599189509351, fine_tune_threshold=3
img diff = 1.4147272513823457, fine_tune_threshold=3
img diff = 1.902765304644149, fine_tune_threshold=3
img diff = 3.3666844052149445, fine_tune_threshold=3
img diff = 5.416998450403813, fine_tune_threshold=3
img diff = 9.196816328499752, fine_tune_threshold=3
img diff = 3.644131196347202, fine_tune_threshold=3
img diff = 3.679192029417667, fine_tune_threshold=3
img diff = 1.2875136987249376, fine_tune_threshold=3
img diff = 1.262644509692759, fine_tune_threshold=3
img diff = 1.2604687015910163, fine_tune_threshold=3
img diff = 1.2665654725866373, fine_tune_threshold=3
img diff = 1.2892419050163566, fine_tune_threshold=3
img diff = 1.2955533532881396, fine_tune_threshold=3
img diff = 1.287510921772081, fine_tune_threshold=3
img diff = 1.3568442263306073, fine_tune_threshold=3
img diff = 1.5182891546343824, fine_tune_threshold=3
img diff = 1.6080326479094986, fine_tune_threshold=3
img diff = 1.9771616758842692, fine_tune_threshold=3
img diff = 4.347586933731412, fine_tune_threshold=3
img diff = 10.40353516529134, fine_tune_threshold=3
img diff = 6.399012172774457, fine_tune_threshold=3
img diff = 1.3500210976817524, fine_tune_threshold=3
img diff = 1.2678806533332672, fine_tune_threshold=3
img diff = 1.2572735099606591, fine_tune_threshold=3
img diff = 1.2531864916138522, fine_tune_threshold=3
img diff = 1.2691020452818476, fine_tune_threshold=3
img diff = 1.2636866810522736, fine_tune_threshold=3
img diff = 1.282079310256239, fine_tune_threshold=3
img diff = 1.32446507307111, fine_tune_threshold=3
img diff = 1.3628154733234754, fine_tune_threshold=3
img diff = 1.5588022282688392, fine_tune_threshold=3
img diff = 1.9795293916054821, fine_tune_threshold=3
img diff = 2.2285690435355696, fine_tune_threshold=3
img diff = 7.540438858450188, fine_tune_threshold=3
img diff = 6.100869855551863, fine_tune_threshold=3
img diff = 2.2162747699524523, fine_tune_threshold=3
img diff = 1.2589578810122248, fine_tune_threshold=3
img diff = 1.2640755701954554, fine_tune_threshold=3
img diff = 1.2544557438846582, fine_tune_threshold=3
img diff = 1.2616200274501146, fine_tune_threshold=3
img diff = 1.2783638153625128, fine_tune_threshold=3
img diff = 1.3012316568022166, fine_tune_threshold=3
img diff = 1.3189799222643255, fine_tune_threshold=3
img diff = 1.3797652389954906, fine_tune_threshold=3
img diff = 1.5019104129136396, fine_tune_threshold=3
img diff = 1.8741812348384346, fine_tune_threshold=3
img diff = 2.281638958334354, fine_tune_threshold=3
img diff = 3.2926765526184685, fine_tune_threshold=3
img diff = 7.741969351730107, fine_tune_threshold=3
img diff = 2.9157573847029186, fine_tune_threshold=3
img diff = 1.2840614168107123, fine_tune_threshold=3
img diff = 1.2613855093991895, fine_tune_threshold=3
img diff = 1.2593089007611407, fine_tune_threshold=3
img diff = 1.2764670853136084, fine_tune_threshold=3
img diff = 1.2735526099472327, fine_tune_threshold=3
img diff = 1.274068776953245, fine_tune_threshold=3
img diff = 1.3037338084791306, fine_tune_threshold=3
img diff = 1.7789354494591656, fine_tune_threshold=3
img diff = 1.7614203289555868, fine_tune_threshold=3
img diff = 1.753084080652142, fine_tune_threshold=3
img diff = 1.7450527876854267, fine_tune_threshold=3
img diff = 1.7592650241514671, fine_tune_threshold=3
img diff = 1.7407897413562363, fine_tune_threshold=3
img diff = 1.7430749550199263, fine_tune_threshold=3
img diff = 1.7892406665881198, fine_tune_threshold=3
img diff = 1.8454263952617247, fine_tune_threshold=3
img diff = 1.9768052865807024, fine_tune_threshold=3
img diff = 2.061749604573853, fine_tune_threshold=3
img diff = 5.223485012918524, fine_tune_threshold=3
img diff = 16.563228734434183, fine_tune_threshold=3
img diff = 6.149692554693031, fine_tune_threshold=3
img diff = 2.6919751544577513, fine_tune_threshold=3
img diff = 1.7601831028894381, fine_tune_threshold=3
img diff = 1.7532412539201985, fine_tune_threshold=3
img diff = 1.7543898704029748, fine_tune_threshold=3
img diff = 1.7405048369347629, fine_tune_threshold=3
img diff = 1.7570659212259612, fine_tune_threshold=3
img diff = 1.7579535211046904, fine_tune_threshold=3
img diff = 1.7847918986938955, fine_tune_threshold=3
img diff = 1.8251675356544432, fine_tune_threshold=3
img diff = 2.1874238768141407, fine_tune_threshold=3
img diff = 2.9021069765101792, fine_tune_threshold=3
img diff = 4.930385363454502, fine_tune_threshold=3
img diff = 5.896169167019192, fine_tune_threshold=3
img diff = 5.271936400713514, fine_tune_threshold=3
img diff = 5.72891814970347, fine_tune_threshold=3
img diff = 1.7757429087375436, fine_tune_threshold=3
img diff = 1.7495505916681313, fine_tune_threshold=3
img diff = 1.7473992586347515, fine_tune_threshold=3
img diff = 1.753885839834261, fine_tune_threshold=3
img diff = 1.7525216030262425, fine_tune_threshold=3
img diff = 1.7569828575498114, fine_tune_threshold=3
img diff = 1.7584209806788338, fine_tune_threshold=3
img diff = 1.8041465029024784, fine_tune_threshold=3
img diff = 1.8278751216184372, fine_tune_threshold=3
img diff = 1.923064902241682, fine_tune_threshold=3
img diff = 2.3986672439397667, fine_tune_threshold=3
img diff = 5.266002183405909, fine_tune_threshold=3
img diff = 35.682164306390106, fine_tune_threshold=3
img diff = 3.4672522986373533, fine_tune_threshold=3
img diff = 1.8645673400181444, fine_tune_threshold=3
img diff = 1.7618028483741806, fine_tune_threshold=3
img diff = 1.7498868686339355, fine_tune_threshold=3
img diff = 1.7464330243886914, fine_tune_threshold=3
img diff = 1.7469631345302494, fine_tune_threshold=3
img diff = 1.763223573419225, fine_tune_threshold=3
img diff = 1.757394739904959, fine_tune_threshold=3
img diff = 1.7990600967118051, fine_tune_threshold=3
img diff = 1.8135860287881784, fine_tune_threshold=3
img diff = 1.8564771564677502, fine_tune_threshold=3
img diff = 2.049219176425588, fine_tune_threshold=3
img diff = 2.613110901857468, fine_tune_threshold=3
img diff = 7.138047148177771, fine_tune_threshold=3
img diff = 5.937013315986477, fine_tune_threshold=3
img diff = 2.847297431919566, fine_tune_threshold=3
img diff = 1.7484921724207643, fine_tune_threshold=3
img diff = 1.756342858560842, fine_tune_threshold=3
img diff = 1.7450971721792476, fine_tune_threshold=3
img diff = 1.7525611613322478, fine_tune_threshold=3
img diff = 1.7610442726425517, fine_tune_threshold=3
img diff = 1.7690311443882645, fine_tune_threshold=3
img diff = 1.79445468765361, fine_tune_threshold=3
img diff = 1.829870171166745, fine_tune_threshold=3
img diff = 1.8565007354547172, fine_tune_threshold=3
img diff = 2.1789520912562477, fine_tune_threshold=3
img diff = 2.310511085093708, fine_tune_threshold=3
img diff = 8.972478917826997, fine_tune_threshold=3
img diff = 21.949041478750225, fine_tune_threshold=3
img diff = 2.6296493104123115, fine_tune_threshold=3
img diff = 1.7411990082661668, fine_tune_threshold=3
img diff = 1.7440162066298637, fine_tune_threshold=3
img diff = 1.7448416795766453, fine_tune_threshold=3
img diff = 1.760406805894375, fine_tune_threshold=3
img diff = 1.7395870009929728, fine_tune_threshold=3
img diff = 1.7493707757002634, fine_tune_threshold=3
img diff = 1.7787244349522715, fine_tune_threshold=3
img diff = 1.798880787695238, fine_tune_threshold=3
img diff = 2.133107608841126, fine_tune_threshold=3
img diff = 2.137215033810655, fine_tune_threshold=3
img diff = 2.1365670998926722, fine_tune_threshold=3
img diff = 2.1393043437875754, fine_tune_threshold=3
img diff = 2.14644136221403, fine_tune_threshold=3
img diff = 2.1397055075317164, fine_tune_threshold=3
img diff = 2.1575979869299107, fine_tune_threshold=3
img diff = 2.1940831327503165, fine_tune_threshold=3
img diff = 2.281879045456172, fine_tune_threshold=3
img diff = 2.5567957377333372, fine_tune_threshold=3
img diff = 3.311260328150815, fine_tune_threshold=3
img diff = 4.07890535396905, fine_tune_threshold=3
img diff = 7.294402866969154, fine_tune_threshold=3
img diff = 2.5398609936468297, fine_tune_threshold=3
img diff = 2.141691025729915, fine_tune_threshold=3
img diff = 2.141966039623287, fine_tune_threshold=3
img diff = 2.13405551028775, fine_tune_threshold=3
img diff = 2.1273619369167744, fine_tune_threshold=3
img diff = 2.1293153565981955, fine_tune_threshold=3
img diff = 2.130314010263924, fine_tune_threshold=3
img diff = 2.137836927259064, fine_tune_threshold=3
img diff = 2.158742945482709, fine_tune_threshold=3
img diff = 2.257502921513627, fine_tune_threshold=3
img diff = 2.4524322051421326, fine_tune_threshold=3
img diff = 2.8668104579599016, fine_tune_threshold=3
img diff = 4.732691729838714, fine_tune_threshold=3
img diff = 15.53210964953351, fine_tune_threshold=3
img diff = 4.737312446305214, fine_tune_threshold=3
img diff = 2.153212622772779, fine_tune_threshold=3
img diff = 2.1338502713094956, fine_tune_threshold=3
img diff = 2.1418470785533197, fine_tune_threshold=3
img diff = 2.1370658327032297, fine_tune_threshold=3
img diff = 2.1432254667827473, fine_tune_threshold=3
img diff = 2.1467747987303873, fine_tune_threshold=3
img diff = 2.1346468045399387, fine_tune_threshold=3
img diff = 2.1710858433023055, fine_tune_threshold=3
img diff = 2.1924005432565568, fine_tune_threshold=3
img diff = 2.2652444195447052, fine_tune_threshold=3
img diff = 2.5466669242048097, fine_tune_threshold=3
img diff = 3.6486113828784643, fine_tune_threshold=3
img diff = 9.854903722149512, fine_tune_threshold=3
img diff = 7.181666251009201, fine_tune_threshold=3
img diff = 2.3496228027117887, fine_tune_threshold=3
img diff = 2.133919874628745, fine_tune_threshold=3
img diff = 2.1414090188961845, fine_tune_threshold=3
img diff = 2.145134153947234, fine_tune_threshold=3
img diff = 2.1287517861991785, fine_tune_threshold=3
img diff = 2.1435103873877264, fine_tune_threshold=3
img diff = 2.1552116907924015, fine_tune_threshold=3
img diff = 2.1600919823872626, fine_tune_threshold=3
img diff = 2.1739488399785514, fine_tune_threshold=3
img diff = 2.2419222692712344, fine_tune_threshold=3
img diff = 2.7815304309640645, fine_tune_threshold=3
img diff = 3.137159967215821, fine_tune_threshold=3
img diff = 56.05273261415769, fine_tune_threshold=3
img diff = 6.091892659219454, fine_tune_threshold=3
img diff = 2.4096689430876066, fine_tune_threshold=3
img diff = 2.1539364368653193, fine_tune_threshold=3
img diff = 2.143102926266099, fine_tune_threshold=3
img diff = 2.1470476132766416, fine_tune_threshold=3
img diff = 2.1359458138489726, fine_tune_threshold=3
img diff = 2.144869324920876, fine_tune_threshold=3
img diff = 2.164424440561753, fine_tune_threshold=3
img diff = 2.1795953300503816, fine_tune_threshold=3
img diff = 2.201002656487544, fine_tune_threshold=3
img diff = 2.3293988360644855, fine_tune_threshold=3
img diff = 2.4091821545283976, fine_tune_threshold=3
img diff = 3.093552392970043, fine_tune_threshold=3
img diff = 5.042950884750756, fine_tune_threshold=3
img diff = 91.56740734468204, fine_tune_threshold=3
img diff = 9.539016773691213, fine_tune_threshold=3
img diff = 2.1438124669346403, fine_tune_threshold=3
img diff = 2.134924149086199, fine_tune_threshold=3
img diff = 2.1363687822164446, fine_tune_threshold=3
img diff = 2.1371874592826217, fine_tune_threshold=3
img diff = 2.1393030631290357, fine_tune_threshold=3
img diff = 2.1523201996814896, fine_tune_threshold=3
img diff = 2.151249367575149, fine_tune_threshold=3
img diff = 2.171305093525811, fine_tune_threshold=3
img diff = 2.213699400038296, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 492, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 202, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 140, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17670" rejected: BADDATA: The command's data was incorrect or out of range.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303dc4ed0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303a9dc10>}
    -available positions:
   ('J1', [3212.0204999999987, 2512.004437499999])
   ('J2', [3392.0191874999987, 1532.000999999999])
   ('J3', [3572.0178749999986, 541.9963124999997])
   ('J4', [3752.016562499999, -438.00712499999986])
   ('J5', [3012.0193124999987, 3491.984062499999])
   ('H1', [8282.035124999995, 4192.000124999998])
   ('H2', [8462.033812499998, 3211.996687499998])
   ('H3', [8642.032499999998, 2231.9932499999986])
   ('H4', [8822.031187499997, 1251.9898124999993])
   ('H5', [9012.031124999998, 261.9851249999998])
    -current position: [3572.0178749999986, 541.9963124999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303a9ed10>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303dc4ed0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303a9dc10>}
    -available positions:
   ('J1', [3212.0204999999987, 2512.004437499999])
   ('J2', [3392.0191874999987, 1532.000999999999])
   ('J3', [3572.0178749999986, 541.9963124999997])
   ('J4', [3752.016562499999, -438.00712499999986])
   ('J5', [3012.0193124999987, 3491.984062499999])
   ('H1', [8282.035124999995, 4192.000124999998])
   ('H2', [8462.033812499998, 3211.996687499998])
   ('H3', [8642.032499999998, 2231.9932499999986])
   ('H4', [8822.031187499997, 1251.9898124999993])
   ('H5', [9012.031124999998, 261.9851249999998])
    -current position: [3572.0178749999986, 541.9963124999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f3303a9ed10>
    -current position: 3999.9999374999984um
img diff = 3.5025312842358334, fine_tune_threshold=3
img diff = 1.8766544931550737, fine_tune_threshold=3
img diff = 1.4792700496548359, fine_tune_threshold=3
img diff = 1.4382382895238885, fine_tune_threshold=3
img diff = 1.2939416721429555, fine_tune_threshold=3
img diff = 2.6898493778324593, fine_tune_threshold=3
img diff = 0.926730704208748, fine_tune_threshold=3
img diff = 0.8761216898659201, fine_tune_threshold=3
img diff = 0.8914881309500773, fine_tune_threshold=3
img diff = 0.9171960881292375, fine_tune_threshold=3
img diff = 0.9830616245936881, fine_tune_threshold=3
img diff = 1.2560202924088926, fine_tune_threshold=3
img diff = 1.4705828173692774, fine_tune_threshold=3
img diff = 3.968512820646156, fine_tune_threshold=3
img diff = 3.345189591711071, fine_tune_threshold=3
img diff = 2.582602623140159, fine_tune_threshold=3
img diff = 1.7867528801407864, fine_tune_threshold=3
img diff = 1.429669797185662, fine_tune_threshold=3
img diff = 1.2139439102164427, fine_tune_threshold=3
img diff = 6.3360293130492815, fine_tune_threshold=3
img diff = 0.9511682622954298, fine_tune_threshold=3
img diff = 0.8828734366060629, fine_tune_threshold=3
img diff = 0.8945002485694438, fine_tune_threshold=3
img diff = 0.9225223341518057, fine_tune_threshold=3
img diff = 1.0112104314989807, fine_tune_threshold=3
img diff = 1.3316602454156885, fine_tune_threshold=3
img diff = 1.893900496897817, fine_tune_threshold=3
img diff = 5.037400683901101, fine_tune_threshold=3
img diff = 3.1456264500950852, fine_tune_threshold=3
img diff = 1.6987612055330308, fine_tune_threshold=3
img diff = 1.7773481261219926, fine_tune_threshold=3
img diff = 1.60085001530884, fine_tune_threshold=3
img diff = 1.2768753396400387, fine_tune_threshold=3
img diff = 9.663537247820955, fine_tune_threshold=3
img diff = 0.9354112316626285, fine_tune_threshold=3
img diff = 0.887637929678391, fine_tune_threshold=3
img diff = 0.8731942394763355, fine_tune_threshold=3
img diff = 0.9047769011747604, fine_tune_threshold=3
img diff = 0.9595254660080632, fine_tune_threshold=3
img diff = 1.1597375570202728, fine_tune_threshold=3
img diff = 1.6350850648066844, fine_tune_threshold=3
img diff = 2.132073228607257, fine_tune_threshold=3
img diff = 811.21585917532, fine_tune_threshold=3
img diff = 3.8018189374818725, fine_tune_threshold=3
img diff = 2.309069794010524, fine_tune_threshold=3
img diff = 1.46500668632643, fine_tune_threshold=3
img diff = 1.368338842446164, fine_tune_threshold=3
img diff = 1.79544046071623, fine_tune_threshold=3
img diff = 1.0904800021866121, fine_tune_threshold=3
img diff = 0.8899050500999985, fine_tune_threshold=3
img diff = 0.8783936003654982, fine_tune_threshold=3
img diff = 0.899695080549991, fine_tune_threshold=3
img diff = 0.9234307674869067, fine_tune_threshold=3
img diff = 1.0042305747054727, fine_tune_threshold=3
img diff = 1.302731842042576, fine_tune_threshold=3
img diff = 2.037191724348914, fine_tune_threshold=3
img diff = 10.90585633968173, fine_tune_threshold=3
img diff = 4.458172947733232, fine_tune_threshold=3
img diff = 1.9418389932106075, fine_tune_threshold=3
img diff = 1.6550559464972796, fine_tune_threshold=3
img diff = 1.5985020547017998, fine_tune_threshold=3
img diff = 1.1795780195967125, fine_tune_threshold=3
img diff = 1.8916375486945958, fine_tune_threshold=3
img diff = 0.9300978859033765, fine_tune_threshold=3
img diff = 0.8829706032099366, fine_tune_threshold=3
img diff = 0.8907444477670599, fine_tune_threshold=3
img diff = 0.9261705809123895, fine_tune_threshold=3
img diff = 1.0400855016505037, fine_tune_threshold=3
img diff = 1.1703705717728674, fine_tune_threshold=3
img diff = 1.8224101666789974, fine_tune_threshold=3
img diff = 3.4987934244911028, fine_tune_threshold=3
img diff = 2.9792709293665496, fine_tune_threshold=3
img diff = 2.600086912280922, fine_tune_threshold=3
img diff = 1.7729531891652683, fine_tune_threshold=3
img diff = 1.493902676989061, fine_tune_threshold=3
img diff = 1.3630626653343387, fine_tune_threshold=3
img diff = 17.30227055485728, fine_tune_threshold=3
img diff = 0.9501874365238225, fine_tune_threshold=3
img diff = 0.8820590873300003, fine_tune_threshold=3
img diff = 0.8815362229574946, fine_tune_threshold=3
img diff = 2.756621407701272, fine_tune_threshold=3
img diff = 1.9994395366102926, fine_tune_threshold=3
img diff = 1.6762524630875015, fine_tune_threshold=3
img diff = 1.5651758633955477, fine_tune_threshold=3
img diff = 1.4138629964371816, fine_tune_threshold=3
img diff = 1.2267334184018301, fine_tune_threshold=3
img diff = 1.2096166732226525, fine_tune_threshold=3
img diff = 1.2321987706129616, fine_tune_threshold=3
img diff = 1.2397594273411325, fine_tune_threshold=3
img diff = 1.3464192105827286, fine_tune_threshold=3
img diff = 1.5567522929879853, fine_tune_threshold=3
img diff = 2.3751253259130376, fine_tune_threshold=3
img diff = 6.908354075338771, fine_tune_threshold=3
img diff = 3.888112028209958, fine_tune_threshold=3
img diff = 2.5751088264595676, fine_tune_threshold=3
img diff = 1.8309380315210748, fine_tune_threshold=3
img diff = 1.748038218354471, fine_tune_threshold=3
img diff = 1.5367962885467383, fine_tune_threshold=3
img diff = 3.2590905275889828, fine_tune_threshold=3
img diff = 1.2298581824861607, fine_tune_threshold=3
img diff = 1.224325850941681, fine_tune_threshold=3
img diff = 1.2274653504553545, fine_tune_threshold=3
img diff = 1.22230611543995, fine_tune_threshold=3
img diff = 1.3119421231570014, fine_tune_threshold=3
img diff = 1.4545687285464535, fine_tune_threshold=3
img diff = 2.2882069098933076, fine_tune_threshold=3
img diff = 7.7003327139002264, fine_tune_threshold=3
img diff = 9.076433138615403, fine_tune_threshold=3
img diff = 2.249253909714363, fine_tune_threshold=3
img diff = 2.552589315437004, fine_tune_threshold=3
img diff = 1.6673802639905333, fine_tune_threshold=3
img diff = 1.7528378842351986, fine_tune_threshold=3
img diff = 1.8047990546697084, fine_tune_threshold=3
img diff = 1.3448371926859393, fine_tune_threshold=3
img diff = 1.2263594579097128, fine_tune_threshold=3
img diff = 1.2166746089666818, fine_tune_threshold=3
img diff = 1.2240543864091735, fine_tune_threshold=3
img diff = 1.2699691445146974, fine_tune_threshold=3
img diff = 1.3654324745329571, fine_tune_threshold=3
img diff = 1.4571437922794273, fine_tune_threshold=3
img diff = 2.953584134521396, fine_tune_threshold=3
img diff = 31.724619273628136, fine_tune_threshold=3
img diff = 3.0317087518337087, fine_tune_threshold=3
img diff = 2.9052308784558143, fine_tune_threshold=3
img diff = 2.03118592466121, fine_tune_threshold=3
img diff = 1.6162351034205278, fine_tune_threshold=3
img diff = 1.549178884362531, fine_tune_threshold=3
img diff = 2.273790432022855, fine_tune_threshold=3
img diff = 1.2331889898721076, fine_tune_threshold=3
img diff = 1.2177652919871134, fine_tune_threshold=3
img diff = 1.2277023145093333, fine_tune_threshold=3
img diff = 1.2557683378152373, fine_tune_threshold=3
img diff = 1.2835024545003486, fine_tune_threshold=3
img diff = 1.4442340533876377, fine_tune_threshold=3
img diff = 1.808537148453858, fine_tune_threshold=3
img diff = 5.737634217298464, fine_tune_threshold=3
img diff = 36.285829731723794, fine_tune_threshold=3
img diff = 3.135003560957338, fine_tune_threshold=3
img diff = 1.7275558266842936, fine_tune_threshold=3
img diff = 1.8357392871687426, fine_tune_threshold=3
img diff = 1.5480065744830966, fine_tune_threshold=3
img diff = 3.3359171273815953, fine_tune_threshold=3
img diff = 1.28777377535976, fine_tune_threshold=3
img diff = 1.2212079006590502, fine_tune_threshold=3
img diff = 1.2203953297653394, fine_tune_threshold=3
img diff = 1.2393435857208677, fine_tune_threshold=3
img diff = 1.2786352983717708, fine_tune_threshold=3
img diff = 1.3550501601407623, fine_tune_threshold=3
img diff = 1.7455767389155805, fine_tune_threshold=3
img diff = 2.3731863416197267, fine_tune_threshold=3
img diff = 22.854391469762945, fine_tune_threshold=3
img diff = 2.6875903824850393, fine_tune_threshold=3
img diff = 2.7365419841570207, fine_tune_threshold=3
img diff = 2.0936195691665866, fine_tune_threshold=3
img diff = 1.7041317203000625, fine_tune_threshold=3
img diff = 1.59666343007927, fine_tune_threshold=3
img diff = 1.4099145783507903, fine_tune_threshold=3
img diff = 1.219572962199797, fine_tune_threshold=3
img diff = 1.2067637863315697, fine_tune_threshold=3
img diff = 1.2420575523425712, fine_tune_threshold=3
img diff = 3.1235681369706016, fine_tune_threshold=3
img diff = 3.0706683226468154, fine_tune_threshold=3
img diff = 2.9650991786961405, fine_tune_threshold=3
img diff = 3.2214825978931856, fine_tune_threshold=3
img diff = 2.7205248141484017, fine_tune_threshold=3
img diff = 2.7345748309395668, fine_tune_threshold=3
img diff = 2.731816946585478, fine_tune_threshold=3
img diff = 2.7257087458364913, fine_tune_threshold=3
img diff = 2.719814514695381, fine_tune_threshold=3
img diff = 2.7577251804829803, fine_tune_threshold=3
img diff = 3.0175457385077746, fine_tune_threshold=3
img diff = 4.084618289729852, fine_tune_threshold=3
img diff = 8.688683271034833, fine_tune_threshold=3
img diff = 3.939401704454168, fine_tune_threshold=3
img diff = 3.3165615393208316, fine_tune_threshold=3
img diff = 3.235221610950185, fine_tune_threshold=3
img diff = 3.05606861652121, fine_tune_threshold=3
img diff = 3.7939997822515195, fine_tune_threshold=3
img diff = 2.7450736550217565, fine_tune_threshold=3
img diff = 2.724788608414934, fine_tune_threshold=3
img diff = 2.733217418292137, fine_tune_threshold=3
img diff = 2.7265748155299656, fine_tune_threshold=3
img diff = 2.729456383831245, fine_tune_threshold=3
img diff = 2.760482649033155, fine_tune_threshold=3
img diff = 2.8691764160479813, fine_tune_threshold=3
img diff = 18.78938895130195, fine_tune_threshold=3
img diff = 11.977593664639162, fine_tune_threshold=3
img diff = 3.712089558866146, fine_tune_threshold=3
img diff = 3.2710774428635756, fine_tune_threshold=3
img diff = 3.1184613228806723, fine_tune_threshold=3
img diff = 3.047557988166982, fine_tune_threshold=3
img diff = 3.121792056133134, fine_tune_threshold=3
img diff = 2.7586152125323258, fine_tune_threshold=3
img diff = 2.7397187837108774, fine_tune_threshold=3
img diff = 2.739196026654218, fine_tune_threshold=3
img diff = 2.7291888410219647, fine_tune_threshold=3
img diff = 2.747347857159074, fine_tune_threshold=3
img diff = 2.7590143927049398, fine_tune_threshold=3
img diff = 2.896130174132889, fine_tune_threshold=3
img diff = 3.660327925179007, fine_tune_threshold=3
img diff = 10.764305161664293, fine_tune_threshold=3
img diff = 4.689343754138343, fine_tune_threshold=3
img diff = 3.642181609162175, fine_tune_threshold=3
img diff = 3.048836657870688, fine_tune_threshold=3
img diff = 2.991216567637783, fine_tune_threshold=3
img diff = 3.5626442112221444, fine_tune_threshold=3
img diff = 2.719863674087092, fine_tune_threshold=3
img diff = 2.733261981977642, fine_tune_threshold=3
img diff = 2.732066881317684, fine_tune_threshold=3
img diff = 2.7335684117923735, fine_tune_threshold=3
img diff = 2.7327065429092308, fine_tune_threshold=3
img diff = 2.7557387584314608, fine_tune_threshold=3
img diff = 2.7984938543206326, fine_tune_threshold=3
img diff = 3.503252888278004, fine_tune_threshold=3
img diff = 10.307516471750482, fine_tune_threshold=3
img diff = 6.3755193157809735, fine_tune_threshold=3
img diff = 3.353400007282922, fine_tune_threshold=3
img diff = 3.0873842327604204, fine_tune_threshold=3
img diff = 3.016318757758554, fine_tune_threshold=3
img diff = 3.1232948480187, fine_tune_threshold=3
img diff = 2.766301438552292, fine_tune_threshold=3
img diff = 2.729679269074402, fine_tune_threshold=3
img diff = 2.7300225753164673, fine_tune_threshold=3
img diff = 2.736129612826071, fine_tune_threshold=3
img diff = 2.7440417577526923, fine_tune_threshold=3
img diff = 2.733970448705481, fine_tune_threshold=3
img diff = 2.823215751079971, fine_tune_threshold=3
img diff = 2.995051062107172, fine_tune_threshold=3
img diff = 13.981199710485118, fine_tune_threshold=3
img diff = 9.220657554854995, fine_tune_threshold=3
img diff = 4.057527802077156, fine_tune_threshold=3
img diff = 3.2147095804811032, fine_tune_threshold=3
img diff = 3.1180046041182825, fine_tune_threshold=3
img diff = 2.959408223812283, fine_tune_threshold=3
img diff = 3.0500617608006246, fine_tune_threshold=3
img diff = 2.7190533294026404, fine_tune_threshold=3
img diff = 2.730122370545513, fine_tune_threshold=3
img diff = 2.715966590070457, fine_tune_threshold=3
img diff = 2.7360904802413613, fine_tune_threshold=3
img diff = 2.7504988500206426, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 492, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -18394" rejected: BADDATA: The command's data was incorrect or out of range.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 366, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62ed8d0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62eda10>}
    -available positions:
   ('J1', [3188.017499999998, 2508.0039374999988])
   ('J2', [3368.016187499998, 1528.0004999999992])
   ('J3', [3548.014874999998, 537.9958124999998])
   ('J4', [3728.0135624999984, -442.00762499999973])
   ('J5', [2988.016312499998, 3487.9835624999987])
   ('H1', [8258.032124999994, 4187.999624999998])
   ('H2', [8438.030812499997, 3207.9961874999985])
   ('H3', [8618.029499999997, 2227.992749999999])
   ('H4', [8798.028187499996, 1247.9893124999994])
   ('H5', [8988.028124999997, 257.98462499999994])
    -current position: [3594.973124999998, 524.9941874999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62eea10>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62ed8d0>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62eda10>}
    -available positions:
   ('J1', [3188.017499999998, 2508.0039374999988])
   ('J2', [3368.016187499998, 1528.0004999999992])
   ('J3', [3548.014874999998, 537.9958124999998])
   ('J4', [3728.0135624999984, -442.00762499999973])
   ('J5', [2988.016312499998, 3487.9835624999987])
   ('H1', [8258.032124999994, 4187.999624999998])
   ('H2', [8438.030812499997, 3207.9961874999985])
   ('H3', [8618.029499999997, 2227.992749999999])
   ('H4', [8798.028187499996, 1247.9893124999994])
   ('H5', [8988.028124999997, 257.98462499999994])
    -current position: [3548.014874999998, 537.9958124999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f9cc62eea10>
    -current position: 3999.9999374999984um
img diff = 0.9456742644166444, fine_tune_threshold=3
img diff = 0.7907149246188978, fine_tune_threshold=3
img diff = 0.9145359136002797, fine_tune_threshold=3
img diff = 1.2728494532183876, fine_tune_threshold=3
img diff = 2.3817148122908414, fine_tune_threshold=3
img diff = 47.833051339520665, fine_tune_threshold=3
img diff = 2.230206598050697, fine_tune_threshold=3
img diff = 1.2338379955546708, fine_tune_threshold=3
img diff = 0.9942809790801501, fine_tune_threshold=3
img diff = 0.8792645122565891, fine_tune_threshold=3
img diff = 0.799834755691252, fine_tune_threshold=3
img diff = 0.7746389377340259, fine_tune_threshold=3
img diff = 0.7341961875790857, fine_tune_threshold=3
img diff = 0.8704793180158928, fine_tune_threshold=3
img diff = 1.7982805210420647, fine_tune_threshold=3
img diff = 0.8372382545273671, fine_tune_threshold=3
img diff = 0.7862153061186153, fine_tune_threshold=3
img diff = 0.9034355352018149, fine_tune_threshold=3
img diff = 1.3619431172195555, fine_tune_threshold=3
img diff = 2.234462136266043, fine_tune_threshold=3
img diff = 20.97018812740103, fine_tune_threshold=3
img diff = 2.20349682575024, fine_tune_threshold=3
img diff = 1.2186148222878657, fine_tune_threshold=3
img diff = 1.0473776418038145, fine_tune_threshold=3
img diff = 0.858043010064082, fine_tune_threshold=3
img diff = 0.8514940268148926, fine_tune_threshold=3
img diff = 0.7596044799630113, fine_tune_threshold=3
img diff = 0.7289024983706944, fine_tune_threshold=3
img diff = 2.1372547500814143, fine_tune_threshold=3
img diff = 1.0052628933523717, fine_tune_threshold=3
img diff = 0.7645431587419809, fine_tune_threshold=3
img diff = 0.823682848411712, fine_tune_threshold=3
img diff = 1.0203333796520604, fine_tune_threshold=3
img diff = 1.3710128929383287, fine_tune_threshold=3
img diff = 7.075252594653075, fine_tune_threshold=3
img diff = 3.387595302230511, fine_tune_threshold=3
img diff = 1.5563785662525407, fine_tune_threshold=3
img diff = 1.0747127016579907, fine_tune_threshold=3
img diff = 0.9888332833622538, fine_tune_threshold=3
img diff = 0.8501247600681845, fine_tune_threshold=3
img diff = 0.7714530974197396, fine_tune_threshold=3
img diff = 0.7418933950572661, fine_tune_threshold=3
img diff = 0.8220106963877591, fine_tune_threshold=3
img diff = 2.1146790291962962, fine_tune_threshold=3
img diff = 0.8194496573933276, fine_tune_threshold=3
img diff = 0.7971576914770158, fine_tune_threshold=3
img diff = 0.9002305467496168, fine_tune_threshold=3
img diff = 1.1684039716141323, fine_tune_threshold=3
img diff = 2.0954565094275526, fine_tune_threshold=3
img diff = 97.7331505053948, fine_tune_threshold=3
img diff = 3.3617995159706253, fine_tune_threshold=3
img diff = 1.118020829519145, fine_tune_threshold=3
img diff = 0.9775201978578141, fine_tune_threshold=3
img diff = 0.9020070377221068, fine_tune_threshold=3
img diff = 0.7864993058265988, fine_tune_threshold=3
img diff = 0.7443527557102764, fine_tune_threshold=3
img diff = 0.7974681377747592, fine_tune_threshold=3
img diff = 4.6995652895409235, fine_tune_threshold=3
img diff = 0.847114471869469, fine_tune_threshold=3
img diff = 0.7840650902340363, fine_tune_threshold=3
img diff = 0.9473761935208909, fine_tune_threshold=3
img diff = 1.1922572877176538, fine_tune_threshold=3
img diff = 2.086708856964999, fine_tune_threshold=3
img diff = 35.82630522003282, fine_tune_threshold=3
img diff = 3.118697334144311, fine_tune_threshold=3
img diff = 1.13999209640704, fine_tune_threshold=3
img diff = 0.9947229839016462, fine_tune_threshold=3
img diff = 0.8383099390770874, fine_tune_threshold=3
img diff = 0.8283807524151303, fine_tune_threshold=3
img diff = 0.7639269799783952, fine_tune_threshold=3
img diff = 0.7484872211538934, fine_tune_threshold=3
img diff = 10.266718532018592, fine_tune_threshold=3
img diff = 0.9197322572377, fine_tune_threshold=3
img diff = 0.7562091142365084, fine_tune_threshold=3
img diff = 0.8089761591869273, fine_tune_threshold=3
img diff = 1.0166296743976517, fine_tune_threshold=3
img diff = 1.6180110525782823, fine_tune_threshold=3
img diff = 3.1727918373339605, fine_tune_threshold=3
img diff = 3.7540880211340704, fine_tune_threshold=3
img diff = 1.5864052976678145, fine_tune_threshold=3
img diff = 0.8860363519007357, fine_tune_threshold=3
img diff = 0.799886868890584, fine_tune_threshold=3
img diff = 0.9240630138215344, fine_tune_threshold=3
img diff = 1.1411305046457119, fine_tune_threshold=3
img diff = 2.0769437279007343, fine_tune_threshold=3
img diff = 5.853605674898258, fine_tune_threshold=3
img diff = 2.2911090549980706, fine_tune_threshold=3
img diff = 1.4833430775146839, fine_tune_threshold=3
img diff = 1.0961973671070635, fine_tune_threshold=3
img diff = 0.9376360260067731, fine_tune_threshold=3
img diff = 0.8554163226071219, fine_tune_threshold=3
img diff = 0.7905033867818541, fine_tune_threshold=3
img diff = 0.768399130139231, fine_tune_threshold=3
img diff = 1.3663301063887077, fine_tune_threshold=3
img diff = 1.0902688745415263, fine_tune_threshold=3
img diff = 0.8222520285289999, fine_tune_threshold=3
img diff = 0.878460757191303, fine_tune_threshold=3
img diff = 1.1103243116131178, fine_tune_threshold=3
img diff = 1.7703254904776653, fine_tune_threshold=3
img diff = 8.449154026404376, fine_tune_threshold=3
img diff = 5.435321485597292, fine_tune_threshold=3
img diff = 1.7291663502940628, fine_tune_threshold=3
img diff = 1.0465992536373796, fine_tune_threshold=3
img diff = 0.9607070208825628, fine_tune_threshold=3
img diff = 0.9471513142614163, fine_tune_threshold=3
img diff = 0.7993064540247733, fine_tune_threshold=3
img diff = 0.7483326519524967, fine_tune_threshold=3
img diff = 0.8411261076402794, fine_tune_threshold=3
img diff = 2.3437407521390687, fine_tune_threshold=3
img diff = 0.8270018849832308, fine_tune_threshold=3
img diff = 0.8152146318686313, fine_tune_threshold=3
img diff = 0.9309265309515916, fine_tune_threshold=3
img diff = 1.3487226941286303, fine_tune_threshold=3
img diff = 1.991648459857382, fine_tune_threshold=3
img diff = 15.341333426533147, fine_tune_threshold=3
img diff = 1.6304669144612913, fine_tune_threshold=3
img diff = 1.2561863253213685, fine_tune_threshold=3
img diff = 1.0020693892240795, fine_tune_threshold=3
img diff = 0.8908440190655093, fine_tune_threshold=3
img diff = 0.7823019859277526, fine_tune_threshold=3
img diff = 0.7621818381727027, fine_tune_threshold=3
img diff = 0.7404723248803672, fine_tune_threshold=3
img diff = 32.95384602156383, fine_tune_threshold=3
img diff = 0.907494292051817, fine_tune_threshold=3
img diff = 0.783916025969426, fine_tune_threshold=3
img diff = 0.9100224407257318, fine_tune_threshold=3
img diff = 1.1683337961227425, fine_tune_threshold=3
img diff = 2.1851738357841555, fine_tune_threshold=3
img diff = 9.162604051714098, fine_tune_threshold=3
img diff = 2.090879991899725, fine_tune_threshold=3
img diff = 1.6241038898831828, fine_tune_threshold=3
img diff = 1.0957182463998638, fine_tune_threshold=3
img diff = 0.9118419089105155, fine_tune_threshold=3
img diff = 0.8044768438877017, fine_tune_threshold=3
img diff = 0.7980051679107131, fine_tune_threshold=3
img diff = 0.7375971453451087, fine_tune_threshold=3
img diff = 0.9745580279153373, fine_tune_threshold=3
img diff = 1.386679547445247, fine_tune_threshold=3
img diff = 0.8184777395070074, fine_tune_threshold=3
img diff = 0.7943773492977672, fine_tune_threshold=3
img diff = 0.9932242686293982, fine_tune_threshold=3
img diff = 1.2867285189934292, fine_tune_threshold=3
img diff = 3.967187165209321, fine_tune_threshold=3
img diff = 4.01663304207724, fine_tune_threshold=3
img diff = 2.1447880616784976, fine_tune_threshold=3
img diff = 1.1046304232268072, fine_tune_threshold=3
img diff = 1.003600615352812, fine_tune_threshold=3
img diff = 0.8789025795347498, fine_tune_threshold=3
img diff = 0.7994765019564363, fine_tune_threshold=3
img diff = 0.7664826430201939, fine_tune_threshold=3
img diff = 0.7259823963022362, fine_tune_threshold=3
img diff = 28.372111570671954, fine_tune_threshold=3
img diff = 0.9255956089278281, fine_tune_threshold=3
img diff = 0.7855420093275016, fine_tune_threshold=3
img diff = 0.833917742261291, fine_tune_threshold=3
img diff = 1.1558005082683331, fine_tune_threshold=3
img diff = 2.062759357669572, fine_tune_threshold=3
img diff = 8.536346996051419, fine_tune_threshold=3
img diff = 3.57559374148945, fine_tune_threshold=3
img diff = 1.564726642156666, fine_tune_threshold=3
img diff = 0.7478562271428423, fine_tune_threshold=3
img diff = 0.7622665548302259, fine_tune_threshold=3
img diff = 0.8875118491099774, fine_tune_threshold=3
img diff = 1.5045145938044844, fine_tune_threshold=3
img diff = 2.8904299079126883, fine_tune_threshold=3
img diff = 7.481033039451325, fine_tune_threshold=3
img diff = 1.8239522040563574, fine_tune_threshold=3
img diff = 1.1585067537404254, fine_tune_threshold=3
img diff = 0.9212462774689236, fine_tune_threshold=3
img diff = 0.9038509002860937, fine_tune_threshold=3
img diff = 0.7366066109388048, fine_tune_threshold=3
img diff = 0.7046882462023137, fine_tune_threshold=3
img diff = 0.6549261965123766, fine_tune_threshold=3
img diff = 4.003884194117552, fine_tune_threshold=3
img diff = 0.8953243202625843, fine_tune_threshold=3
img diff = 0.7292776465602568, fine_tune_threshold=3
img diff = 0.883176097004468, fine_tune_threshold=3
img diff = 1.1775986014933926, fine_tune_threshold=3
img diff = 2.409868938924247, fine_tune_threshold=3
img diff = 36.42174978657617, fine_tune_threshold=3
img diff = 1.716919439962057, fine_tune_threshold=3
img diff = 1.599216514981171, fine_tune_threshold=3
img diff = 1.0898987639289381, fine_tune_threshold=3
img diff = 0.8572501529891848, fine_tune_threshold=3
img diff = 0.7456224208961985, fine_tune_threshold=3
img diff = 0.7082004669812263, fine_tune_threshold=3
img diff = 0.6855315322239801, fine_tune_threshold=3
img diff = 1.2589231503819247, fine_tune_threshold=3
img diff = 1.1154675642755287, fine_tune_threshold=3
img diff = 0.7367220174286051, fine_tune_threshold=3
img diff = 0.7698445453812761, fine_tune_threshold=3
img diff = 0.8955010826516292, fine_tune_threshold=3
img diff = 1.3073852402874544, fine_tune_threshold=3
img diff = 2.504491099567885, fine_tune_threshold=3
img diff = 7.004735603740794, fine_tune_threshold=3
img diff = 1.496149804904885, fine_tune_threshold=3
img diff = 1.0356961176400232, fine_tune_threshold=3
img diff = 0.9520140958837177, fine_tune_threshold=3
img diff = 0.8143787060106252, fine_tune_threshold=3
img diff = 0.7052154308737536, fine_tune_threshold=3
img diff = 0.702005961601848, fine_tune_threshold=3
img diff = 0.6759223605252676, fine_tune_threshold=3
img diff = 8.101599465921943, fine_tune_threshold=3
img diff = 0.816251339211537, fine_tune_threshold=3
img diff = 0.7330092140580332, fine_tune_threshold=3
img diff = 0.8829154129157964, fine_tune_threshold=3
img diff = 1.2025818251784377, fine_tune_threshold=3
img diff = 1.9885275513496707, fine_tune_threshold=3
img diff = 8.302635598717313, fine_tune_threshold=3
img diff = 2.0203393546744923, fine_tune_threshold=3
img diff = 1.5718652124136816, fine_tune_threshold=3
img diff = 0.9646550548628418, fine_tune_threshold=3
img diff = 0.9145900372791607, fine_tune_threshold=3
img diff = 0.757967775890932, fine_tune_threshold=3
img diff = 0.721802473853298, fine_tune_threshold=3
img diff = 0.6806676654898366, fine_tune_threshold=3
img diff = 1.2198491604168646, fine_tune_threshold=3
img diff = 1.0720122342662186, fine_tune_threshold=3
img diff = 0.7547360266835963, fine_tune_threshold=3
img diff = 0.7799072859226415, fine_tune_threshold=3
img diff = 0.9225539468868232, fine_tune_threshold=3
img diff = 1.7587600638369723, fine_tune_threshold=3
img diff = 4.976261271418337, fine_tune_threshold=3
img diff = 2.987352440067714, fine_tune_threshold=3
img diff = 1.596521282166134, fine_tune_threshold=3
img diff = 1.1130090403159079, fine_tune_threshold=3
img diff = 0.9203421936571826, fine_tune_threshold=3
img diff = 0.814148059980793, fine_tune_threshold=3
img diff = 0.7097295137755092, fine_tune_threshold=3
img diff = 0.6880495566475651, fine_tune_threshold=3
img diff = 0.7951668880498703, fine_tune_threshold=3
img diff = 2.6225127583165473, fine_tune_threshold=3
img diff = 0.7644270345796302, fine_tune_threshold=3
img diff = 0.7225839189526386, fine_tune_threshold=3
img diff = 0.8164967137982729, fine_tune_threshold=3
img diff = 1.1426270823321334, fine_tune_threshold=3
img diff = 2.3586557175845604, fine_tune_threshold=3
img diff = 6.844554965953517, fine_tune_threshold=3
img diff = 2.0718624164039685, fine_tune_threshold=3
img diff = 1.2005679949486772, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 492, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -18562" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b504e90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b504f50>}
    -available positions:
   ('J1', [3188.017499999998, 2508.0039374999988])
   ('J2', [3368.016187499998, 1528.0004999999992])
   ('J3', [3548.014874999998, 537.9958124999998])
   ('J4', [3728.0135624999984, -442.00762499999973])
   ('J5', [2988.016312499998, 3487.9835624999987])
   ('H1', [8258.032124999994, 4187.999624999998])
   ('H2', [8438.030812499997, 3207.9961874999985])
   ('H3', [8618.029499999997, 2227.992749999999])
   ('H4', [8798.028187499996, 1247.9893124999994])
   ('H5', [8988.028124999997, 257.98462499999994])
    -current position: [3548.014874999998, 537.9958124999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b505f50>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b504e90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b504f50>}
    -available positions:
   ('J1', [3188.017499999998, 2508.0039374999988])
   ('J2', [3368.016187499998, 1528.0004999999992])
   ('J3', [3548.014874999998, 537.9958124999998])
   ('J4', [3728.0135624999984, -442.00762499999973])
   ('J5', [2988.016312499998, 3487.9835624999987])
   ('H1', [8258.032124999994, 4187.999624999998])
   ('H2', [8438.030812499997, 3207.9961874999985])
   ('H3', [8618.029499999997, 2227.992749999999])
   ('H4', [8798.028187499996, 1247.9893124999994])
   ('H5', [8988.028124999997, 257.98462499999994])
    -current position: [3548.014874999998, 537.9958124999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f504b505f50>
    -current position: 3999.9999374999984um
img diff = 2.3915780981438974, fine_tune_threshold=3
img diff = 1.9319323420084176, fine_tune_threshold=3
img diff = 1.8890434394216025, fine_tune_threshold=3
img diff = 1.5787507205647382, fine_tune_threshold=3
img diff = 1.5173456685421058, fine_tune_threshold=3
img diff = 1.2148986140542426, fine_tune_threshold=3
img diff = 1.187734386707978, fine_tune_threshold=3
img diff = 1.196381712573891, fine_tune_threshold=3
img diff = 1.2258427478404188, fine_tune_threshold=3
img diff = 1.2644035777062237, fine_tune_threshold=3
img diff = 1.334277378354883, fine_tune_threshold=3
img diff = 1.694020805423597, fine_tune_threshold=3
img diff = 2.7843529015323094, fine_tune_threshold=3
img diff = 15.461832103349757, fine_tune_threshold=3
img diff = 3.621462940205171, fine_tune_threshold=3
img diff = 2.182461171450121, fine_tune_threshold=3
img diff = 1.7236318890029152, fine_tune_threshold=3
img diff = 1.571963856192002, fine_tune_threshold=3
img diff = 2.6699695072939607, fine_tune_threshold=3
img diff = 1.257238063007355, fine_tune_threshold=3
img diff = 1.2018831157213652, fine_tune_threshold=3
img diff = 1.1963690422708098, fine_tune_threshold=3
img diff = 1.1977047044859597, fine_tune_threshold=3
img diff = 1.2377736502967704, fine_tune_threshold=3
img diff = 1.3262318225521526, fine_tune_threshold=3
img diff = 1.5102271413909982, fine_tune_threshold=3
img diff = 1.9227945363126748, fine_tune_threshold=3
img diff = 7.082388544800679, fine_tune_threshold=3
img diff = 15.95911229716849, fine_tune_threshold=3
img diff = 2.794468487618721, fine_tune_threshold=3
img diff = 1.9851598749546695, fine_tune_threshold=3
img diff = 1.7787147702503148, fine_tune_threshold=3
img diff = 1.5903502760636794, fine_tune_threshold=3
img diff = 1.8243109566947473, fine_tune_threshold=3
img diff = 1.2128446067828653, fine_tune_threshold=3
img diff = 1.1965029311700577, fine_tune_threshold=3
img diff = 1.1997467306490992, fine_tune_threshold=3
img diff = 1.2199389898504478, fine_tune_threshold=3
img diff = 1.2862965200556031, fine_tune_threshold=3
img diff = 1.4153897533783475, fine_tune_threshold=3
img diff = 1.588845449954042, fine_tune_threshold=3
img diff = 3.036289058928462, fine_tune_threshold=3
img diff = 40.575787456178396, fine_tune_threshold=3
img diff = 3.211459028974523, fine_tune_threshold=3
img diff = 1.9628208494875818, fine_tune_threshold=3
img diff = 1.7694906432616313, fine_tune_threshold=3
img diff = 1.6220823048269777, fine_tune_threshold=3
img diff = 2.0511592590636694, fine_tune_threshold=3
img diff = 1.253463281837487, fine_tune_threshold=3
img diff = 1.192131501936304, fine_tune_threshold=3
img diff = 1.1946544385704927, fine_tune_threshold=3
img diff = 1.2007621625277598, fine_tune_threshold=3
img diff = 1.2334447920772131, fine_tune_threshold=3
img diff = 1.289839946776187, fine_tune_threshold=3
img diff = 1.457978489171733, fine_tune_threshold=3
img diff = 1.7111327796328684, fine_tune_threshold=3
img diff = 3.1159646562236873, fine_tune_threshold=3
img diff = 132.78326813267836, fine_tune_threshold=3
img diff = 2.612406123898867, fine_tune_threshold=3
img diff = 1.9236401521767734, fine_tune_threshold=3
img diff = 1.593063248389802, fine_tune_threshold=3
img diff = 1.520747788673041, fine_tune_threshold=3
img diff = 2.694577004847278, fine_tune_threshold=3
img diff = 1.213889174266881, fine_tune_threshold=3
img diff = 1.191854947624368, fine_tune_threshold=3
img diff = 1.1973276087294762, fine_tune_threshold=3
img diff = 1.2043722765975806, fine_tune_threshold=3
img diff = 1.2688569163990855, fine_tune_threshold=3
img diff = 1.3125516403017148, fine_tune_threshold=3
img diff = 1.5413560125953956, fine_tune_threshold=3
img diff = 2.632740978684258, fine_tune_threshold=3
img diff = 9.74575281649687, fine_tune_threshold=3
img diff = 7.9895110385584225, fine_tune_threshold=3
img diff = 2.0074601706491686, fine_tune_threshold=3
img diff = 1.9177020084411986, fine_tune_threshold=3
img diff = 1.6198807225635738, fine_tune_threshold=3
img diff = 160.5941166714623, fine_tune_threshold=3
img diff = 1.2410334589267624, fine_tune_threshold=3
img diff = 1.2015983523061358, fine_tune_threshold=3
img diff = 1.1927937599652383, fine_tune_threshold=3
img diff = 2.238129570354143, fine_tune_threshold=3
img diff = 2.0510153195317553, fine_tune_threshold=3
img diff = 1.465038237227773, fine_tune_threshold=3
img diff = 1.4211053464752368, fine_tune_threshold=3
img diff = 3.4430090182773743, fine_tune_threshold=3
img diff = 0.9620640302830834, fine_tune_threshold=3
img diff = 0.9464270667161173, fine_tune_threshold=3
img diff = 0.9426598381015564, fine_tune_threshold=3
img diff = 0.9910544224868085, fine_tune_threshold=3
img diff = 1.0403105892833424, fine_tune_threshold=3
img diff = 1.168405454817429, fine_tune_threshold=3
img diff = 1.4857870229499048, fine_tune_threshold=3
img diff = 3.0201188154927356, fine_tune_threshold=3
img diff = 12.929296760714369, fine_tune_threshold=3
img diff = 2.607663391811978, fine_tune_threshold=3
img diff = 1.682508040391068, fine_tune_threshold=3
img diff = 1.6878892698848005, fine_tune_threshold=3
img diff = 1.394218424513369, fine_tune_threshold=3
img diff = 3.953217862303055, fine_tune_threshold=3
img diff = 1.0263411435007253, fine_tune_threshold=3
img diff = 0.9512597284190316, fine_tune_threshold=3
img diff = 0.9546069853683282, fine_tune_threshold=3
img diff = 0.9512072685436106, fine_tune_threshold=3
img diff = 1.0122719580948694, fine_tune_threshold=3
img diff = 1.1476978020234327, fine_tune_threshold=3
img diff = 1.4459638350602704, fine_tune_threshold=3
img diff = 3.105001384710148, fine_tune_threshold=3
img diff = 5.800986327632161, fine_tune_threshold=3
img diff = 5.344806269666424, fine_tune_threshold=3
img diff = 2.6254085482923974, fine_tune_threshold=3
img diff = 1.3897289646519562, fine_tune_threshold=3
img diff = 1.3948476867563588, fine_tune_threshold=3
img diff = 2.9167542717972683, fine_tune_threshold=3
img diff = 1.0174075735853143, fine_tune_threshold=3
img diff = 0.9415759207985746, fine_tune_threshold=3
img diff = 0.9353335502522379, fine_tune_threshold=3
img diff = 0.9552478078834041, fine_tune_threshold=3
img diff = 1.0145392025814433, fine_tune_threshold=3
img diff = 1.1383881104000664, fine_tune_threshold=3
img diff = 1.270734724700757, fine_tune_threshold=3
img diff = 3.670111076960012, fine_tune_threshold=3
img diff = 12.757521221566785, fine_tune_threshold=3
img diff = 7.164096772575352, fine_tune_threshold=3
img diff = 2.3113938377811554, fine_tune_threshold=3
img diff = 1.7651333619027714, fine_tune_threshold=3
img diff = 1.724266893262024, fine_tune_threshold=3
img diff = 1.3537287249479033, fine_tune_threshold=3
img diff = 1.2063340960667248, fine_tune_threshold=3
img diff = 0.938860620962616, fine_tune_threshold=3
img diff = 0.9424232789262522, fine_tune_threshold=3
img diff = 0.9551088115991209, fine_tune_threshold=3
img diff = 1.0017399844708241, fine_tune_threshold=3
img diff = 1.0312683222356114, fine_tune_threshold=3
img diff = 1.1611177386933709, fine_tune_threshold=3
img diff = 1.5945264808576192, fine_tune_threshold=3
img diff = 3.8503162890139073, fine_tune_threshold=3
img diff = 4.238062101172449, fine_tune_threshold=3
img diff = 2.823470938734479, fine_tune_threshold=3
img diff = 2.0058473380516304, fine_tune_threshold=3
img diff = 1.557237061526059, fine_tune_threshold=3
img diff = 1.405838221375902, fine_tune_threshold=3
img diff = 3.3787464195321317, fine_tune_threshold=3
img diff = 0.9733137679676135, fine_tune_threshold=3
img diff = 0.9451105041719194, fine_tune_threshold=3
img diff = 0.9515052660018972, fine_tune_threshold=3
img diff = 0.9670464014913114, fine_tune_threshold=3
img diff = 1.0176066696297459, fine_tune_threshold=3
img diff = 1.0953171154017742, fine_tune_threshold=3
img diff = 1.4434769256086402, fine_tune_threshold=3
img diff = 2.0663010324191164, fine_tune_threshold=3
img diff = 6.504338523461571, fine_tune_threshold=3
img diff = 5.670694729876639, fine_tune_threshold=3
img diff = 2.532930190915182, fine_tune_threshold=3
img diff = 2.140042160471075, fine_tune_threshold=3
img diff = 1.5866236045644873, fine_tune_threshold=3
img diff = 10.121379113478138, fine_tune_threshold=3
img diff = 0.9970987277271146, fine_tune_threshold=3
img diff = 0.9435668325968536, fine_tune_threshold=3
img diff = 0.9394705911739056, fine_tune_threshold=3
img diff = 0.9486782887166593, fine_tune_threshold=3
img diff = 2.2128809263914295, fine_tune_threshold=3
img diff = 2.1403441339961207, fine_tune_threshold=3
img diff = 1.8183871671846012, fine_tune_threshold=3
img diff = 3.75439412501645, fine_tune_threshold=3
img diff = 1.5328786034015756, fine_tune_threshold=3
img diff = 1.5124179526576569, fine_tune_threshold=3
img diff = 1.5172544289191565, fine_tune_threshold=3
img diff = 1.5193822404509136, fine_tune_threshold=3
img diff = 1.5364567439566783, fine_tune_threshold=3
img diff = 1.7335275155498517, fine_tune_threshold=3
img diff = 1.8242470089135763, fine_tune_threshold=3
img diff = 2.53566569929509, fine_tune_threshold=3
img diff = 280.60703707076897, fine_tune_threshold=3
img diff = 3.170505548485611, fine_tune_threshold=3
img diff = 2.371179169286246, fine_tune_threshold=3
img diff = 1.9924494037307414, fine_tune_threshold=3
img diff = 1.984418230860641, fine_tune_threshold=3
img diff = 1.9029114388965738, fine_tune_threshold=3
img diff = 1.6143602028523598, fine_tune_threshold=3
img diff = 1.5217290505977827, fine_tune_threshold=3
img diff = 1.507393265773949, fine_tune_threshold=3
img diff = 1.5163675082179444, fine_tune_threshold=3
img diff = 1.5395356142383712, fine_tune_threshold=3
img diff = 1.5758527455106837, fine_tune_threshold=3
img diff = 1.6995505365831238, fine_tune_threshold=3
img diff = 2.0318057357293475, fine_tune_threshold=3
img diff = 3.79842356796851, fine_tune_threshold=3
img diff = 13.155385765955398, fine_tune_threshold=3
img diff = 3.7833811876456163, fine_tune_threshold=3
img diff = 2.428408917723304, fine_tune_threshold=3
img diff = 2.2043166069844116, fine_tune_threshold=3
img diff = 1.8933778898076241, fine_tune_threshold=3
img diff = 7.133410921779742, fine_tune_threshold=3
img diff = 1.5240498822149702, fine_tune_threshold=3
img diff = 1.5088221921261908, fine_tune_threshold=3
img diff = 1.5090786769669138, fine_tune_threshold=3
img diff = 1.5297547034844503, fine_tune_threshold=3
img diff = 1.55357067533721, fine_tune_threshold=3
img diff = 1.573674993220195, fine_tune_threshold=3
img diff = 1.7415718126771336, fine_tune_threshold=3
img diff = 2.4643710175225766, fine_tune_threshold=3
img diff = 8.310086382832488, fine_tune_threshold=3
img diff = 20.17399892259335, fine_tune_threshold=3
img diff = 2.5829596730879882, fine_tune_threshold=3
img diff = 2.246236001006701, fine_tune_threshold=3
img diff = 1.9096572340541988, fine_tune_threshold=3
img diff = 2.1565462076283293, fine_tune_threshold=3
img diff = 1.617101793437347, fine_tune_threshold=3
img diff = 1.5083114152125965, fine_tune_threshold=3
img diff = 1.5057805569543647, fine_tune_threshold=3
img diff = 1.5073762411174814, fine_tune_threshold=3
img diff = 1.539668790031163, fine_tune_threshold=3
img diff = 1.5769376340186168, fine_tune_threshold=3
img diff = 1.687222629771099, fine_tune_threshold=3
img diff = 1.7992551643891717, fine_tune_threshold=3
img diff = 5.872563970475324, fine_tune_threshold=3
img diff = 10.057207557509045, fine_tune_threshold=3
img diff = 3.1584266495859645, fine_tune_threshold=3
img diff = 2.464313987775603, fine_tune_threshold=3
img diff = 2.1335112804531855, fine_tune_threshold=3
img diff = 1.8935174414999183, fine_tune_threshold=3
img diff = 2.3209487236040474, fine_tune_threshold=3
img diff = 1.5270870636932394, fine_tune_threshold=3
img diff = 1.5061170402195496, fine_tune_threshold=3
img diff = 1.5178271826631873, fine_tune_threshold=3
img diff = 1.5206404395582003, fine_tune_threshold=3
img diff = 1.5531206695493966, fine_tune_threshold=3
img diff = 1.638409102572035, fine_tune_threshold=3
img diff = 1.8396132632665556, fine_tune_threshold=3
img diff = 2.464316152822756, fine_tune_threshold=3
img diff = 9.235727529583372, fine_tune_threshold=3
img diff = 5.84537467071544, fine_tune_threshold=3
img diff = 3.0128438058596307, fine_tune_threshold=3
img diff = 2.2784194463233907, fine_tune_threshold=3
img diff = 1.9129686580709278, fine_tune_threshold=3
img diff = 2.474750711281584, fine_tune_threshold=3
img diff = 1.57979627630749, fine_tune_threshold=3
img diff = 1.5083943661333534, fine_tune_threshold=3
img diff = 1.5035084786704636, fine_tune_threshold=3
img diff = 1.5144309425545117, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 492, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -18562" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b2533550>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b2a3a250>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3514.0106249999985, 527.9945624999998]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b25d2bd0>
    -current position: 2999.9939999999983um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b2533550>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b2a3a250>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3578.0186249999983, 573.0001874999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f89b25d2bd0>
    -current position: 3999.9999374999984um
img diff = 2.514810015094069, fine_tune_threshold=3
img diff = 2.612144395778022, fine_tune_threshold=3
img diff = 2.755169605744809, fine_tune_threshold=3
img diff = 5.107022130675251, fine_tune_threshold=3
img diff = 6.932483357285129, fine_tune_threshold=3
img diff = 5.783061961935642, fine_tune_threshold=3
img diff = 7.113925093196855, fine_tune_threshold=3
img diff = 9.659126782522968, fine_tune_threshold=3
img diff = 37.5496209378754, fine_tune_threshold=3
img diff = 8.943424751945585, fine_tune_threshold=3
img diff = 1.4989061108633384, fine_tune_threshold=3
img diff = 1.4765151264758627, fine_tune_threshold=3
img diff = 1.8740110530274499, fine_tune_threshold=3
img diff = 2.130256310075512, fine_tune_threshold=3
img diff = 2.4056753315510284, fine_tune_threshold=3
img diff = 2.5347699136561594, fine_tune_threshold=3
img diff = 2.622138730265928, fine_tune_threshold=3
img diff = 7.739911045142943, fine_tune_threshold=3
img diff = 6.724712845299834, fine_tune_threshold=3
img diff = 5.899927547132466, fine_tune_threshold=3
img diff = 7.047680930544285, fine_tune_threshold=3
img diff = 8.320011034351909, fine_tune_threshold=3
img diff = 51.87183036458636, fine_tune_threshold=3
img diff = 8.439577952400061, fine_tune_threshold=3
img diff = 2.159098489216034, fine_tune_threshold=3
img diff = 1.901087710539398, fine_tune_threshold=3
img diff = 2.010322839892184, fine_tune_threshold=3
img diff = 2.331874437200108, fine_tune_threshold=3
img diff = 2.456082107891228, fine_tune_threshold=3
img diff = 2.5603166289124717, fine_tune_threshold=3
img diff = 2.731505750946652, fine_tune_threshold=3
img diff = 2.1073871007387757, fine_tune_threshold=3
img diff = 12.168962544774562, fine_tune_threshold=3
img diff = 6.042143902325304, fine_tune_threshold=3
img diff = 6.098651777704482, fine_tune_threshold=3
img diff = 8.113266778483517, fine_tune_threshold=3
img diff = 12.53985165135692, fine_tune_threshold=3
img diff = 17.073247631042637, fine_tune_threshold=3
img diff = 3.9398514653797854, fine_tune_threshold=3
img diff = 1.437534684243242, fine_tune_threshold=3
img diff = 1.57937667883817, fine_tune_threshold=3
img diff = 2.192472728014903, fine_tune_threshold=3
img diff = 2.2963702617210857, fine_tune_threshold=3
img diff = 2.4622727154437545, fine_tune_threshold=3
img diff = 2.551108208907821, fine_tune_threshold=3
img diff = 2.3271970448135217, fine_tune_threshold=3
img diff = 36.675662577515155, fine_tune_threshold=3
img diff = 6.614861675719027, fine_tune_threshold=3
img diff = 5.913579624887605, fine_tune_threshold=3
img diff = 6.838842348955701, fine_tune_threshold=3
img diff = 12.796968361002145, fine_tune_threshold=3
img diff = 25.318950799890906, fine_tune_threshold=3
img diff = 9.370966257480958, fine_tune_threshold=3
img diff = 1.3613884578416, fine_tune_threshold=3
img diff = 1.4673984455736262, fine_tune_threshold=3
img diff = 2.0193568786443206, fine_tune_threshold=3
img diff = 2.3317208906601743, fine_tune_threshold=3
img diff = 2.3941515013714376, fine_tune_threshold=3
img diff = 2.5451463619967334, fine_tune_threshold=3
img diff = 2.56646637405294, fine_tune_threshold=3
img diff = 1.6331683389376737, fine_tune_threshold=3
img diff = 8.573877018898864, fine_tune_threshold=3
img diff = 5.281415191314407, fine_tune_threshold=3
img diff = 4.913619935071409, fine_tune_threshold=3
img diff = 5.884187552582914, fine_tune_threshold=3
img diff = 7.538824686234001, fine_tune_threshold=3
img diff = 71.38973559594959, fine_tune_threshold=3
img diff = 2.6556334249026365, fine_tune_threshold=3
img diff = 2.3400035380689967, fine_tune_threshold=3
img diff = 2.1553307075443766, fine_tune_threshold=3
img diff = 2.2269076404973287, fine_tune_threshold=3
img diff = 2.253038524622795, fine_tune_threshold=3
img diff = 2.3777290819927925, fine_tune_threshold=3
img diff = 2.5670426082026654, fine_tune_threshold=3
img diff = 2.6111403603453995, fine_tune_threshold=3
img diff = 82.03953583510767, fine_tune_threshold=3
img diff = 6.254907216298967, fine_tune_threshold=3
img diff = 5.84906249064996, fine_tune_threshold=3
img diff = 7.010976691340487, fine_tune_threshold=3
img diff = 9.28511588888072, fine_tune_threshold=3
img diff = 2.189922928680966, fine_tune_threshold=3
img diff = 2.4529631700100216, fine_tune_threshold=3
img diff = 1.50156005074541, fine_tune_threshold=3
img diff = 9.817295189705346, fine_tune_threshold=3
img diff = 5.671145091845136, fine_tune_threshold=3
img diff = 6.167577056941673, fine_tune_threshold=3
img diff = 8.46869720140813, fine_tune_threshold=3
img diff = 14.677889694319898, fine_tune_threshold=3
img diff = 17.17915939058613, fine_tune_threshold=3
img diff = 3.268844238087657, fine_tune_threshold=3
img diff = 1.6100186071447875, fine_tune_threshold=3
img diff = 1.6109597466912138, fine_tune_threshold=3
img diff = 1.7671524374982597, fine_tune_threshold=3
img diff = 2.1576346714428802, fine_tune_threshold=3
img diff = 2.1839526300431613, fine_tune_threshold=3
img diff = 2.4054906835283827, fine_tune_threshold=3
img diff = 1.7825404202629849, fine_tune_threshold=3
img diff = 10.468945489253674, fine_tune_threshold=3
img diff = 5.752787925719629, fine_tune_threshold=3
img diff = 5.851879171626295, fine_tune_threshold=3
img diff = 6.519005669178377, fine_tune_threshold=3
img diff = 10.612934767721185, fine_tune_threshold=3
img diff = 106.96257895143182, fine_tune_threshold=3
img diff = 5.466602144896523, fine_tune_threshold=3
img diff = 1.8651715650353673, fine_tune_threshold=3
img diff = 1.6366223693917767, fine_tune_threshold=3
img diff = 1.9554707355643848, fine_tune_threshold=3
img diff = 2.1491364495867917, fine_tune_threshold=3
img diff = 2.321419585038637, fine_tune_threshold=3
img diff = 2.4275486554729517, fine_tune_threshold=3
img diff = 2.583590665033909, fine_tune_threshold=3
img diff = 6.994751759029464, fine_tune_threshold=3
img diff = 6.662780888430001, fine_tune_threshold=3
img diff = 5.514597575176285, fine_tune_threshold=3
img diff = 6.546002102437512, fine_tune_threshold=3
img diff = 10.802749124412696, fine_tune_threshold=3
img diff = 50.21592019162683, fine_tune_threshold=3
img diff = 7.172250503248337, fine_tune_threshold=3
img diff = 2.4310694725749524, fine_tune_threshold=3
img diff = 1.4032160297627958, fine_tune_threshold=3
img diff = 1.7596204370216986, fine_tune_threshold=3
img diff = 1.9570190076007936, fine_tune_threshold=3
img diff = 2.1505044830068827, fine_tune_threshold=3
img diff = 2.208522998282254, fine_tune_threshold=3
img diff = 2.470317413919836, fine_tune_threshold=3
img diff = 1.422627611019226, fine_tune_threshold=3
img diff = 9.087918350809085, fine_tune_threshold=3
img diff = 5.539770971208026, fine_tune_threshold=3
img diff = 5.966600315254409, fine_tune_threshold=3
img diff = 7.966116813930261, fine_tune_threshold=3
img diff = 20.112638831206617, fine_tune_threshold=3
img diff = 13.343973100451015, fine_tune_threshold=3
img diff = 3.576515541110412, fine_tune_threshold=3
img diff = 1.2801134780881978, fine_tune_threshold=3
img diff = 1.4378233565192557, fine_tune_threshold=3
img diff = 1.8736487736685685, fine_tune_threshold=3
img diff = 2.0534163624439055, fine_tune_threshold=3
img diff = 2.169829290911908, fine_tune_threshold=3
img diff = 2.270661989473116, fine_tune_threshold=3
img diff = 2.4211489064188108, fine_tune_threshold=3
img diff = 8.706727216219349, fine_tune_threshold=3
img diff = 6.434653126036285, fine_tune_threshold=3
img diff = 5.368335529459831, fine_tune_threshold=3
img diff = 5.335119063707451, fine_tune_threshold=3
img diff = 5.516494635214784, fine_tune_threshold=3
img diff = 7.417408670290067, fine_tune_threshold=3
img diff = 10.772960678774512, fine_tune_threshold=3
img diff = 2.369567115607966, fine_tune_threshold=3
img diff = 2.020457721419434, fine_tune_threshold=3
img diff = 1.8567550144502623, fine_tune_threshold=3
img diff = 2.029821816556976, fine_tune_threshold=3
img diff = 2.1842302930183717, fine_tune_threshold=3
img diff = 2.2929054425264503, fine_tune_threshold=3
img diff = 2.4856647246973647, fine_tune_threshold=3
img diff = 1.3164934472797207, fine_tune_threshold=3
img diff = 8.535531978459549, fine_tune_threshold=3
img diff = 5.725591482196586, fine_tune_threshold=3
img diff = 6.368476538220669, fine_tune_threshold=3
img diff = 9.453232288448397, fine_tune_threshold=3
img diff = 19.297228043476053, fine_tune_threshold=3
img diff = 1.8103567758352452, fine_tune_threshold=3
img diff = 1.8785261800707023, fine_tune_threshold=3
img diff = 6.656363277627591, fine_tune_threshold=3
img diff = 6.239063709022128, fine_tune_threshold=3
img diff = 5.219962635371751, fine_tune_threshold=3
img diff = 6.045971005274557, fine_tune_threshold=3
img diff = 9.982165669426918, fine_tune_threshold=3
img diff = 49.60124346284155, fine_tune_threshold=3
img diff = 10.856114994608262, fine_tune_threshold=3
img diff = 2.0111815368304127, fine_tune_threshold=3
img diff = 1.1454744477445629, fine_tune_threshold=3
img diff = 1.1912674593794383, fine_tune_threshold=3
img diff = 1.4333306928494498, fine_tune_threshold=3
img diff = 1.6158163536665797, fine_tune_threshold=3
img diff = 1.79997447811719, fine_tune_threshold=3
img diff = 1.7963736980028715, fine_tune_threshold=3
img diff = 1.0961843070802333, fine_tune_threshold=3
img diff = 7.630475506380668, fine_tune_threshold=3
img diff = 4.961611294505579, fine_tune_threshold=3
img diff = 5.5875030228495355, fine_tune_threshold=3
img diff = 7.827765854253859, fine_tune_threshold=3
img diff = 13.708834363328414, fine_tune_threshold=3
img diff = 16.068974027171038, fine_tune_threshold=3
img diff = 2.1368752080368205, fine_tune_threshold=3
img diff = 1.6286596915387377, fine_tune_threshold=3
img diff = 1.2286894236362023, fine_tune_threshold=3
img diff = 1.304662032539761, fine_tune_threshold=3
img diff = 1.6112686870034665, fine_tune_threshold=3
img diff = 1.8602678512113138, fine_tune_threshold=3
img diff = 1.822155716916325, fine_tune_threshold=3
img diff = 1.477232962208959, fine_tune_threshold=3
img diff = 30.422563679111978, fine_tune_threshold=3
img diff = 5.4432455222273735, fine_tune_threshold=3
img diff = 4.9730958035045, fine_tune_threshold=3
img diff = 6.271776520043076, fine_tune_threshold=3
img diff = 12.046795209534757, fine_tune_threshold=3
img diff = 50.34105139139836, fine_tune_threshold=3
img diff = 4.636652402265227, fine_tune_threshold=3
img diff = 1.548342530116645, fine_tune_threshold=3
img diff = 1.0975578623752917, fine_tune_threshold=3
img diff = 1.3488002600961224, fine_tune_threshold=3
img diff = 1.389332377902862, fine_tune_threshold=3
img diff = 1.690777045495997, fine_tune_threshold=3
img diff = 1.7165919836002235, fine_tune_threshold=3
img diff = 1.909705503136373, fine_tune_threshold=3
img diff = 2.3173505554258167, fine_tune_threshold=3
img diff = 7.839982171713284, fine_tune_threshold=3
img diff = 5.041548439786685, fine_tune_threshold=3
img diff = 5.624269238822702, fine_tune_threshold=3
img diff = 7.479223909473721, fine_tune_threshold=3
img diff = 12.37170896209986, fine_tune_threshold=3
img diff = 11.189091521578366, fine_tune_threshold=3
img diff = 1.6331214060282315, fine_tune_threshold=3
img diff = 1.6190615563949415, fine_tune_threshold=3
img diff = 1.2312722055060301, fine_tune_threshold=3
img diff = 1.5147529122484886, fine_tune_threshold=3
img diff = 1.5494552751837096, fine_tune_threshold=3
img diff = 1.7249443613321602, fine_tune_threshold=3
img diff = 1.7665490880458345, fine_tune_threshold=3
img diff = 1.5347158874896447, fine_tune_threshold=3
img diff = 13.347162406528753, fine_tune_threshold=3
img diff = 5.440796588616883, fine_tune_threshold=3
img diff = 4.91607420778322, fine_tune_threshold=3
img diff = 4.801025134498994, fine_tune_threshold=3
img diff = 5.249626169948815, fine_tune_threshold=3
img diff = 11.207450766478562, fine_tune_threshold=3
img diff = 3.477666676498923, fine_tune_threshold=3
img diff = 1.8053544234435988, fine_tune_threshold=3
img diff = 1.4087888818941392, fine_tune_threshold=3
img diff = 1.2783016792716104, fine_tune_threshold=3
img diff = 1.3442091720314173, fine_tune_threshold=3
img diff = 1.6523062542395663, fine_tune_threshold=3
img diff = 1.789940304360377, fine_tune_threshold=3
img diff = 1.7581205381526965, fine_tune_threshold=3
img diff = 34.0066594350439, fine_tune_threshold=3
img diff = 6.113063872644828, fine_tune_threshold=3
img diff = 5.070558467154095, fine_tune_threshold=3
img diff = 5.826536376470063, fine_tune_threshold=3
img diff = 10.11820356629569, fine_tune_threshold=3
img diff = 18.246293340641373, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 607, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17092" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d31ca950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d2ce2350>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3758.0173124999983, 1546.5504374999991]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d2ce3410>
    -current position: 3999.9999374999984um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d31ca950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d2ce2350>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3578.0186249999983, 573.0001874999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f25d2ce3410>
    -current position: 3999.9999374999984um
img diff = 4.996412167043049, fine_tune_threshold=3
img diff = 5.260008161128842, fine_tune_threshold=3
img diff = 5.34149678952383, fine_tune_threshold=3
img diff = 5.3627496638028935, fine_tune_threshold=3
img diff = 5.468310424844494, fine_tune_threshold=3
img diff = 5.590375990778866, fine_tune_threshold=3
img diff = 5.011117624324891, fine_tune_threshold=3
img diff = 2.4851408571443465, fine_tune_threshold=3
img diff = 11.604812314599027, fine_tune_threshold=3
img diff = 13.658016436059711, fine_tune_threshold=3
img diff = 7.1613770256480525, fine_tune_threshold=3
img diff = 3.00369097491489, fine_tune_threshold=3
img diff = 3.8787709032926037, fine_tune_threshold=3
img diff = 4.500051239637813, fine_tune_threshold=3
img diff = 4.956006794374099, fine_tune_threshold=3
img diff = 5.189825924761794, fine_tune_threshold=3
img diff = 5.306906350882565, fine_tune_threshold=3
img diff = 5.314118046274644, fine_tune_threshold=3
img diff = 5.448522943884839, fine_tune_threshold=3
img diff = 5.502467935345198, fine_tune_threshold=3
img diff = 5.4908076832117185, fine_tune_threshold=3
img diff = 4.009798982236987, fine_tune_threshold=3
img diff = 15.22873467777125, fine_tune_threshold=3
img diff = 10.303618647068301, fine_tune_threshold=3
img diff = 49.411754787651496, fine_tune_threshold=3
img diff = 2.8124823197095106, fine_tune_threshold=3
img diff = 3.716730055838954, fine_tune_threshold=3
img diff = 4.542804011274589, fine_tune_threshold=3
img diff = 4.9357158636638925, fine_tune_threshold=3
img diff = 5.1160563415490286, fine_tune_threshold=3
img diff = 5.169352844070655, fine_tune_threshold=3
img diff = 5.374194987136999, fine_tune_threshold=3
img diff = 5.4895861894355065, fine_tune_threshold=3
img diff = 5.5267088870994225, fine_tune_threshold=3
img diff = 5.61703498025839, fine_tune_threshold=3
img diff = 4.439935598215048, fine_tune_threshold=3
img diff = 25.05735892305657, fine_tune_threshold=3
img diff = 10.383623727828507, fine_tune_threshold=3
img diff = 22.311416521277238, fine_tune_threshold=3
img diff = 8.350391545607042, fine_tune_threshold=3
img diff = 2.9796095670003764, fine_tune_threshold=3
img diff = 4.27752110967355, fine_tune_threshold=3
img diff = 4.842387719190239, fine_tune_threshold=3
img diff = 5.115176888502834, fine_tune_threshold=3
img diff = 5.142624481136801, fine_tune_threshold=3
img diff = 5.3116939633544415, fine_tune_threshold=3
img diff = 5.392797831395869, fine_tune_threshold=3
img diff = 5.480941215870897, fine_tune_threshold=3
img diff = 5.478908818431497, fine_tune_threshold=3
img diff = 5.233951758336211, fine_tune_threshold=3
img diff = 2.223836196730594, fine_tune_threshold=3
img diff = 12.07562919426076, fine_tune_threshold=3
img diff = 16.234837636772934, fine_tune_threshold=3
img diff = 7.530839124658442, fine_tune_threshold=3
img diff = 2.7341849831586273, fine_tune_threshold=3
img diff = 3.882856193057102, fine_tune_threshold=3
img diff = 4.787791610282935, fine_tune_threshold=3
img diff = 4.907634145016578, fine_tune_threshold=3
img diff = 5.106602880698201, fine_tune_threshold=3
img diff = 5.30578789170034, fine_tune_threshold=3
img diff = 5.443722592990898, fine_tune_threshold=3
img diff = 5.430158313902417, fine_tune_threshold=3
img diff = 5.573236546386486, fine_tune_threshold=3
img diff = 5.647022062266771, fine_tune_threshold=3
img diff = 4.898845862677856, fine_tune_threshold=3
img diff = 10.216002878158129, fine_tune_threshold=3
img diff = 10.723847699677243, fine_tune_threshold=3
img diff = 5.949692147421345, fine_tune_threshold=3
img diff = 3.9717400237886222, fine_tune_threshold=3
img diff = 4.148190770212217, fine_tune_threshold=3
img diff = 4.546773797844057, fine_tune_threshold=3
img diff = 4.914183090089468, fine_tune_threshold=3
img diff = 5.04552854511713, fine_tune_threshold=3
img diff = 5.214298775772424, fine_tune_threshold=3
img diff = 5.342839298622685, fine_tune_threshold=3
img diff = 5.41542020666127, fine_tune_threshold=3
img diff = 5.548151922126518, fine_tune_threshold=3
img diff = 5.605115924709196, fine_tune_threshold=3
img diff = 4.286638345893845, fine_tune_threshold=3
img diff = 1061.9240756252148, fine_tune_threshold=3
img diff = 5.096908749548361, fine_tune_threshold=3
img diff = 5.255691403623236, fine_tune_threshold=3
img diff = 5.318110598232275, fine_tune_threshold=3
img diff = 5.391201670406773, fine_tune_threshold=3
img diff = 5.526294089227349, fine_tune_threshold=3
img diff = 5.240554444715487, fine_tune_threshold=3
img diff = 3.0638144337028788, fine_tune_threshold=3
img diff = 12.20935800179231, fine_tune_threshold=3
img diff = 10.573048169340346, fine_tune_threshold=3
img diff = 1670.3043187235826, fine_tune_threshold=3
img diff = 2.2467702061773287, fine_tune_threshold=3
img diff = 3.840040524717231, fine_tune_threshold=3
img diff = 4.304487427302196, fine_tune_threshold=3
img diff = 4.839263413734032, fine_tune_threshold=3
img diff = 4.954820400880655, fine_tune_threshold=3
img diff = 5.168028724166387, fine_tune_threshold=3
img diff = 5.351552839845899, fine_tune_threshold=3
img diff = 5.4648806631306535, fine_tune_threshold=3
img diff = 5.517571275278058, fine_tune_threshold=3
img diff = 5.533755535173031, fine_tune_threshold=3
img diff = 4.504711881760452, fine_tune_threshold=3
img diff = 80.99398175335838, fine_tune_threshold=3
img diff = 10.349749477386753, fine_tune_threshold=3
img diff = 25.86393718129965, fine_tune_threshold=3
img diff = 3.3766397657377585, fine_tune_threshold=3
img diff = 3.6334787242096187, fine_tune_threshold=3
img diff = 4.041630432114787, fine_tune_threshold=3
img diff = 4.781795783129483, fine_tune_threshold=3
img diff = 5.107101026902807, fine_tune_threshold=3
img diff = 5.22055818107684, fine_tune_threshold=3
img diff = 5.275637700486044, fine_tune_threshold=3
img diff = 5.420906947280682, fine_tune_threshold=3
img diff = 5.509909093417315, fine_tune_threshold=3
img diff = 5.565705067000611, fine_tune_threshold=3
img diff = 5.134112918384647, fine_tune_threshold=3
img diff = 2.5480399120804766, fine_tune_threshold=3
img diff = 11.922296105717603, fine_tune_threshold=3
img diff = 11.968478677009239, fine_tune_threshold=3
img diff = 13.924218759884882, fine_tune_threshold=3
img diff = 2.612904509131566, fine_tune_threshold=3
img diff = 3.6926107820265974, fine_tune_threshold=3
img diff = 4.593388557724698, fine_tune_threshold=3
img diff = 4.864363014405383, fine_tune_threshold=3
img diff = 5.106398088085347, fine_tune_threshold=3
img diff = 5.2489957403780245, fine_tune_threshold=3
img diff = 5.388200175612797, fine_tune_threshold=3
img diff = 5.360086264249065, fine_tune_threshold=3
img diff = 5.489656266058258, fine_tune_threshold=3
img diff = 5.549505285881375, fine_tune_threshold=3
img diff = 4.107927326158804, fine_tune_threshold=3
img diff = 21.147424080723503, fine_tune_threshold=3
img diff = 11.535764036032853, fine_tune_threshold=3
img diff = 53.31140245421362, fine_tune_threshold=3
img diff = 2.2132136021028566, fine_tune_threshold=3
img diff = 3.834311421751011, fine_tune_threshold=3
img diff = 4.400442357360749, fine_tune_threshold=3
img diff = 4.631685927495424, fine_tune_threshold=3
img diff = 4.95555819676542, fine_tune_threshold=3
img diff = 5.142298906895429, fine_tune_threshold=3
img diff = 5.297707505623691, fine_tune_threshold=3
img diff = 5.40921157998537, fine_tune_threshold=3
img diff = 5.44177580950966, fine_tune_threshold=3
img diff = 5.577327368417966, fine_tune_threshold=3
img diff = 4.932538456095473, fine_tune_threshold=3
img diff = 13.852525840497385, fine_tune_threshold=3
img diff = 8.57277484158091, fine_tune_threshold=3
img diff = 21.173496354557777, fine_tune_threshold=3
img diff = 4.018448192275152, fine_tune_threshold=3
img diff = 3.7366790467551847, fine_tune_threshold=3
img diff = 4.164436026951272, fine_tune_threshold=3
img diff = 4.5120545580278275, fine_tune_threshold=3
img diff = 4.9739574180633, fine_tune_threshold=3
img diff = 5.090653647462522, fine_tune_threshold=3
img diff = 5.2874630954590796, fine_tune_threshold=3
img diff = 5.43264690215517, fine_tune_threshold=3
img diff = 5.447599245983043, fine_tune_threshold=3
img diff = 5.559312233851106, fine_tune_threshold=3
img diff = 5.40532124040058, fine_tune_threshold=3
img diff = 3.415641407719465, fine_tune_threshold=3
img diff = 13.090728706650232, fine_tune_threshold=3
img diff = 2.172503035487694, fine_tune_threshold=3
img diff = 2.286120944147411, fine_tune_threshold=3
img diff = 2.396199192578206, fine_tune_threshold=3
img diff = 2.3947043437270388, fine_tune_threshold=3
img diff = 2.5163948076951668, fine_tune_threshold=3
img diff = 1.7842931889396343, fine_tune_threshold=3
img diff = 20.8374441638432, fine_tune_threshold=3
img diff = 6.4748181357400325, fine_tune_threshold=3
img diff = 19.02894173718322, fine_tune_threshold=3
img diff = 6.353789896148173, fine_tune_threshold=3
img diff = 1.3400404696548185, fine_tune_threshold=3
img diff = 1.1718620858168003, fine_tune_threshold=3
img diff = 1.7488740823894668, fine_tune_threshold=3
img diff = 1.9717943195483632, fine_tune_threshold=3
img diff = 2.1117734020585748, fine_tune_threshold=3
img diff = 2.265617563231244, fine_tune_threshold=3
img diff = 2.3794406378352515, fine_tune_threshold=3
img diff = 2.3658726437991757, fine_tune_threshold=3
img diff = 2.4710407988096126, fine_tune_threshold=3
img diff = 1.9182956485320997, fine_tune_threshold=3
img diff = 4.80307324547759, fine_tune_threshold=3
img diff = 8.048075620807033, fine_tune_threshold=3
img diff = 8.513026241601283, fine_tune_threshold=3
img diff = 29.42898103009482, fine_tune_threshold=3
img diff = 2.4731984110311775, fine_tune_threshold=3
img diff = 1.2921889899051795, fine_tune_threshold=3
img diff = 1.6638943964641584, fine_tune_threshold=3
img diff = 1.8983815344777808, fine_tune_threshold=3
img diff = 2.1139641983259, fine_tune_threshold=3
img diff = 2.2769092851517745, fine_tune_threshold=3
img diff = 2.3661926686406414, fine_tune_threshold=3
img diff = 2.3305351993139025, fine_tune_threshold=3
img diff = 2.4579848970299603, fine_tune_threshold=3
img diff = 2.4594003360314307, fine_tune_threshold=3
img diff = 1.2489903299782756, fine_tune_threshold=3
img diff = 24.018211130162676, fine_tune_threshold=3
img diff = 7.124740826265056, fine_tune_threshold=3
img diff = 120.2194313753106, fine_tune_threshold=3
img diff = 5.285208932494547, fine_tune_threshold=3
img diff = 1.1748430619079397, fine_tune_threshold=3
img diff = 1.4017386131025833, fine_tune_threshold=3
img diff = 1.746452663164444, fine_tune_threshold=3
img diff = 2.0541793476411865, fine_tune_threshold=3
img diff = 2.1217790395781932, fine_tune_threshold=3
img diff = 2.238087117829235, fine_tune_threshold=3
img diff = 2.345521927150459, fine_tune_threshold=3
img diff = 2.402825030833769, fine_tune_threshold=3
img diff = 2.495754941782047, fine_tune_threshold=3
img diff = 1.9461541122090287, fine_tune_threshold=3
img diff = 8.049228940623223, fine_tune_threshold=3
img diff = 7.4876829200019195, fine_tune_threshold=3
img diff = 8.491648656273895, fine_tune_threshold=3
img diff = 12.825110047184406, fine_tune_threshold=3
img diff = 1.8080055188215294, fine_tune_threshold=3
img diff = 1.275016306855032, fine_tune_threshold=3
img diff = 1.705170101285522, fine_tune_threshold=3
img diff = 1.9439104400689673, fine_tune_threshold=3
img diff = 2.1460262639296337, fine_tune_threshold=3
img diff = 2.2075141309687867, fine_tune_threshold=3
img diff = 2.3599597666281245, fine_tune_threshold=3
img diff = 2.4072800199408824, fine_tune_threshold=3
img diff = 2.440409623808424, fine_tune_threshold=3
img diff = 2.2963513494308003, fine_tune_threshold=3
img diff = 3.019005903599451, fine_tune_threshold=3
img diff = 6.844347681167888, fine_tune_threshold=3
img diff = 8.550264022414549, fine_tune_threshold=3
img diff = 4.786002844326706, fine_tune_threshold=3
img diff = 2.2712060898300948, fine_tune_threshold=3
img diff = 1.538519769184918, fine_tune_threshold=3
img diff = 1.7259892026449697, fine_tune_threshold=3
img diff = 1.911569286712134, fine_tune_threshold=3
img diff = 2.022163404874052, fine_tune_threshold=3
img diff = 2.207566787751648, fine_tune_threshold=3
img diff = 2.306046340028186, fine_tune_threshold=3
img diff = 2.374218523534488, fine_tune_threshold=3
img diff = 2.4514623216965634, fine_tune_threshold=3
img diff = 2.450000741671512, fine_tune_threshold=3
img diff = 1.38743402092241, fine_tune_threshold=3
img diff = 32.01788678202049, fine_tune_threshold=3
img diff = 7.334024878676784, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 607, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17092" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc7e2950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc2cadd0>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3758.0173124999983, 1552.0034999999993]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc2cbf10>
    -current position: 3999.9999374999984um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc7e2950>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc2cadd0>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3578.0186249999983, 573.0001874999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f28cc2cbf10>
    -current position: 3999.9999374999984um
img diff = 3.540869667884804, fine_tune_threshold=3
img diff = 3.7739478545287373, fine_tune_threshold=3
img diff = 3.8554208623928234, fine_tune_threshold=3
img diff = 3.942562743840875, fine_tune_threshold=3
img diff = 4.002366241498974, fine_tune_threshold=3
img diff = 3.702403494792291, fine_tune_threshold=3
img diff = 4.774625922160473, fine_tune_threshold=3
img diff = 8.583847753185266, fine_tune_threshold=3
img diff = 8.360392890648852, fine_tune_threshold=3
img diff = 14.527057242198527, fine_tune_threshold=3
img diff = 6.941295594670359, fine_tune_threshold=3
img diff = 2.0645325576206144, fine_tune_threshold=3
img diff = 2.7608963473689516, fine_tune_threshold=3
img diff = 3.1438110104880943, fine_tune_threshold=3
img diff = 3.4220126198494203, fine_tune_threshold=3
img diff = 3.6768444703527625, fine_tune_threshold=3
img diff = 3.7825208279139844, fine_tune_threshold=3
img diff = 3.8880805986642346, fine_tune_threshold=3
img diff = 3.982667901456851, fine_tune_threshold=3
img diff = 4.07245429203803, fine_tune_threshold=3
img diff = 2.706800955400251, fine_tune_threshold=3
img diff = 28.880884095232787, fine_tune_threshold=3
img diff = 7.883259326380344, fine_tune_threshold=3
img diff = 11.761469640415548, fine_tune_threshold=3
img diff = 58.29299642578667, fine_tune_threshold=3
img diff = 2.560300344037232, fine_tune_threshold=3
img diff = 2.49777167390158, fine_tune_threshold=3
img diff = 3.0890225719364164, fine_tune_threshold=3
img diff = 3.2183334233586915, fine_tune_threshold=3
img diff = 3.5734274289403407, fine_tune_threshold=3
img diff = 3.6892241136096424, fine_tune_threshold=3
img diff = 3.8811473058483936, fine_tune_threshold=3
img diff = 3.9889323753651635, fine_tune_threshold=3
img diff = 3.948229859957219, fine_tune_threshold=3
img diff = 2.9673897026507983, fine_tune_threshold=3
img diff = 17.658373143122112, fine_tune_threshold=3
img diff = 8.107223166025578, fine_tune_threshold=3
img diff = 9.219658041957008, fine_tune_threshold=3
img diff = 46.181724504594456, fine_tune_threshold=3
img diff = 4.67715399746859, fine_tune_threshold=3
img diff = 2.4928182539389216, fine_tune_threshold=3
img diff = 2.9326749688937324, fine_tune_threshold=3
img diff = 3.1734131681435915, fine_tune_threshold=3
img diff = 3.449602421389503, fine_tune_threshold=3
img diff = 3.7035527844243776, fine_tune_threshold=3
img diff = 3.882178024050792, fine_tune_threshold=3
img diff = 4.002231650403692, fine_tune_threshold=3
img diff = 4.030893947021802, fine_tune_threshold=3
img diff = 3.653189597350731, fine_tune_threshold=3
img diff = 7.356617001007538, fine_tune_threshold=3
img diff = 9.080974688558506, fine_tune_threshold=3
img diff = 8.880840548090102, fine_tune_threshold=3
img diff = 16.400943409597957, fine_tune_threshold=3
img diff = 4.942907886681579, fine_tune_threshold=3
img diff = 2.2519308193457634, fine_tune_threshold=3
img diff = 2.9419049090248666, fine_tune_threshold=3
img diff = 3.2501540049392803, fine_tune_threshold=3
img diff = 3.408610883126708, fine_tune_threshold=3
img diff = 3.7910638268321737, fine_tune_threshold=3
img diff = 3.818398162162743, fine_tune_threshold=3
img diff = 3.9558767142571054, fine_tune_threshold=3
img diff = 3.974015309763363, fine_tune_threshold=3
img diff = 4.0362765251479935, fine_tune_threshold=3
img diff = 3.117063620746535, fine_tune_threshold=3
img diff = 7.708337372615197, fine_tune_threshold=3
img diff = 7.26158950358261, fine_tune_threshold=3
img diff = 89.17954823258275, fine_tune_threshold=3
img diff = 3.3252712467366807, fine_tune_threshold=3
img diff = 2.883499672963778, fine_tune_threshold=3
img diff = 2.8424766630655687, fine_tune_threshold=3
img diff = 3.0234702004884557, fine_tune_threshold=3
img diff = 3.3753428956578455, fine_tune_threshold=3
img diff = 3.6250980577063254, fine_tune_threshold=3
img diff = 3.8304248629476616, fine_tune_threshold=3
img diff = 3.820784687119596, fine_tune_threshold=3
img diff = 3.9449776060001844, fine_tune_threshold=3
img diff = 4.0208194321243464, fine_tune_threshold=3
img diff = 3.4368556459792496, fine_tune_threshold=3
img diff = 275.14647349324184, fine_tune_threshold=3
img diff = 7.992169261282891, fine_tune_threshold=3
img diff = 2.8076146028327518, fine_tune_threshold=3
img diff = 2.9676410139449523, fine_tune_threshold=3
img diff = 3.13501307968067, fine_tune_threshold=3
img diff = 3.224617427653438, fine_tune_threshold=3
img diff = 3.248948393654808, fine_tune_threshold=3
img diff = 2.150976574443327, fine_tune_threshold=3
img diff = 15.383701062482375, fine_tune_threshold=3
img diff = 7.063298488051596, fine_tune_threshold=3
img diff = 11.994349604212415, fine_tune_threshold=3
img diff = 19.79783378092437, fine_tune_threshold=3
img diff = 3.4679312675062155, fine_tune_threshold=3
img diff = 1.7488301757436777, fine_tune_threshold=3
img diff = 2.102184989251968, fine_tune_threshold=3
img diff = 2.5734961783820722, fine_tune_threshold=3
img diff = 2.82111268236634, fine_tune_threshold=3
img diff = 2.9357635213651285, fine_tune_threshold=3
img diff = 2.9609267938197235, fine_tune_threshold=3
img diff = 3.145219792120646, fine_tune_threshold=3
img diff = 3.2020602858874616, fine_tune_threshold=3
img diff = 2.971336022600407, fine_tune_threshold=3
img diff = 2.809164115264522, fine_tune_threshold=3
img diff = 9.444873753491592, fine_tune_threshold=3
img diff = 8.496731963308598, fine_tune_threshold=3
img diff = 13.032832896892932, fine_tune_threshold=3
img diff = 8.081890582026038, fine_tune_threshold=3
img diff = 1.596082216284428, fine_tune_threshold=3
img diff = 2.1112219118333067, fine_tune_threshold=3
img diff = 2.358867532985319, fine_tune_threshold=3
img diff = 2.728179949936713, fine_tune_threshold=3
img diff = 2.809376211946538, fine_tune_threshold=3
img diff = 3.0110209483053363, fine_tune_threshold=3
img diff = 3.058646238112912, fine_tune_threshold=3
img diff = 3.1238321265995843, fine_tune_threshold=3
img diff = 3.2412314347216102, fine_tune_threshold=3
img diff = 2.234997775997379, fine_tune_threshold=3
img diff = 56.942431299145674, fine_tune_threshold=3
img diff = 7.20285241750542, fine_tune_threshold=3
img diff = 11.509011788992519, fine_tune_threshold=3
img diff = 29.60555663041132, fine_tune_threshold=3
img diff = 2.5372004713938536, fine_tune_threshold=3
img diff = 1.69142588791868, fine_tune_threshold=3
img diff = 2.208162778018464, fine_tune_threshold=3
img diff = 2.5727747802134284, fine_tune_threshold=3
img diff = 2.796878923787379, fine_tune_threshold=3
img diff = 2.9827030479044527, fine_tune_threshold=3
img diff = 3.046212911571484, fine_tune_threshold=3
img diff = 3.100549025898278, fine_tune_threshold=3
img diff = 3.22059541825785, fine_tune_threshold=3
img diff = 2.6019303909272526, fine_tune_threshold=3
img diff = 36.552326454024225, fine_tune_threshold=3
img diff = 7.155079571278309, fine_tune_threshold=3
img diff = 9.522423283115028, fine_tune_threshold=3
img diff = 56.82696863090141, fine_tune_threshold=3
img diff = 2.9748695735235744, fine_tune_threshold=3
img diff = 1.7952639044583498, fine_tune_threshold=3
img diff = 2.1992699384489507, fine_tune_threshold=3
img diff = 2.6254574317723907, fine_tune_threshold=3
img diff = 2.676016818973536, fine_tune_threshold=3
img diff = 2.895996524582637, fine_tune_threshold=3
img diff = 3.055429006346994, fine_tune_threshold=3
img diff = 3.177366787906184, fine_tune_threshold=3
img diff = 3.190846378884817, fine_tune_threshold=3
img diff = 3.1770071900620103, fine_tune_threshold=3
img diff = 2.166249549691163, fine_tune_threshold=3
img diff = 7.2600760846737895, fine_tune_threshold=3
img diff = 6.702154122217312, fine_tune_threshold=3
img diff = 115.71640357734162, fine_tune_threshold=3
img diff = 2.670821013961577, fine_tune_threshold=3
img diff = 2.2207032039614223, fine_tune_threshold=3
img diff = 2.024406340950545, fine_tune_threshold=3
img diff = 2.376879422237284, fine_tune_threshold=3
img diff = 2.5620131099818892, fine_tune_threshold=3
img diff = 2.8834945812506563, fine_tune_threshold=3
img diff = 3.010028075280093, fine_tune_threshold=3
img diff = 3.0712581213525483, fine_tune_threshold=3
img diff = 3.152340278975778, fine_tune_threshold=3
img diff = 3.2475923763703225, fine_tune_threshold=3
img diff = 2.542887402568928, fine_tune_threshold=3
img diff = 79.01236202065093, fine_tune_threshold=3
img diff = 7.509582416469616, fine_tune_threshold=3
img diff = 3.60733636554777, fine_tune_threshold=3
img diff = 3.638434015535693, fine_tune_threshold=3
img diff = 3.759234465663577, fine_tune_threshold=3
img diff = 3.8187869115347466, fine_tune_threshold=3
img diff = 3.8437074787967003, fine_tune_threshold=3
img diff = 1.9322852123575367, fine_tune_threshold=3
img diff = 10.564853230784909, fine_tune_threshold=3
img diff = 8.134345667322354, fine_tune_threshold=3
img diff = 12.59261271132343, fine_tune_threshold=3
img diff = 63.63869214297615, fine_tune_threshold=3
img diff = 1.6517329722200562, fine_tune_threshold=3
img diff = 2.4812300682321826, fine_tune_threshold=3
img diff = 3.020168756197725, fine_tune_threshold=3
img diff = 3.397874392394173, fine_tune_threshold=3
img diff = 3.3823342533882337, fine_tune_threshold=3
img diff = 3.6302570267364063, fine_tune_threshold=3
img diff = 3.7561762933513085, fine_tune_threshold=3
img diff = 3.848601554247482, fine_tune_threshold=3
img diff = 3.897556404506569, fine_tune_threshold=3
img diff = 3.0817816199809487, fine_tune_threshold=3
img diff = 35.49975282753036, fine_tune_threshold=3
img diff = 7.939034746018002, fine_tune_threshold=3
img diff = 9.755206589192266, fine_tune_threshold=3
img diff = 130.57069556732034, fine_tune_threshold=3
img diff = 3.3959589620021577, fine_tune_threshold=3
img diff = 2.2899227030245966, fine_tune_threshold=3
img diff = 2.77553664649862, fine_tune_threshold=3
img diff = 3.2009678166970352, fine_tune_threshold=3
img diff = 3.452172167161053, fine_tune_threshold=3
img diff = 3.528202091176438, fine_tune_threshold=3
img diff = 3.8152996322570694, fine_tune_threshold=3
img diff = 3.8707675216080277, fine_tune_threshold=3
img diff = 3.8904988892222194, fine_tune_threshold=3
img diff = 3.632950624589693, fine_tune_threshold=3
img diff = 1.7162377702670917, fine_tune_threshold=3
img diff = 10.031753129666086, fine_tune_threshold=3
img diff = 9.02739641506574, fine_tune_threshold=3
img diff = 18.248187695615467, fine_tune_threshold=3
img diff = 3.6302329132226294, fine_tune_threshold=3
img diff = 1.6871503729307218, fine_tune_threshold=3
img diff = 2.4748076410130615, fine_tune_threshold=3
img diff = 3.0532285108308646, fine_tune_threshold=3
img diff = 3.3233225369856942, fine_tune_threshold=3
img diff = 3.6005233054346597, fine_tune_threshold=3
img diff = 3.710302279885204, fine_tune_threshold=3
img diff = 3.8256527203921933, fine_tune_threshold=3
img diff = 3.887722347217153, fine_tune_threshold=3
img diff = 3.7852476653054996, fine_tune_threshold=3
img diff = 1.8244790241907909, fine_tune_threshold=3
img diff = 10.398079740229669, fine_tune_threshold=3
img diff = 7.875242826111246, fine_tune_threshold=3
img diff = 12.069202067592341, fine_tune_threshold=3
img diff = 12.446448922780196, fine_tune_threshold=3
img diff = 1.718272962853672, fine_tune_threshold=3
img diff = 2.65444757140133, fine_tune_threshold=3
img diff = 2.8430843590372574, fine_tune_threshold=3
img diff = 3.2456415505161766, fine_tune_threshold=3
img diff = 3.440370606218508, fine_tune_threshold=3
img diff = 3.6846245340377672, fine_tune_threshold=3
img diff = 3.7233732806841413, fine_tune_threshold=3
img diff = 3.8760403393320506, fine_tune_threshold=3
img diff = 3.9348463021299938, fine_tune_threshold=3
img diff = 3.2847526641699085, fine_tune_threshold=3
img diff = 80.09026667065733, fine_tune_threshold=3
img diff = 7.890349777108471, fine_tune_threshold=3
img diff = 11.137549390064468, fine_tune_threshold=3
img diff = 4.339885457029517, fine_tune_threshold=3
img diff = 2.601288275050571, fine_tune_threshold=3
img diff = 2.4626325802358333, fine_tune_threshold=3
img diff = 2.716983674274811, fine_tune_threshold=3
img diff = 3.1948819581041126, fine_tune_threshold=3
img diff = 3.2835572477344033, fine_tune_threshold=3
img diff = 3.597530402482138, fine_tune_threshold=3
img diff = 3.6956688440706147, fine_tune_threshold=3
img diff = 3.7784502243605984, fine_tune_threshold=3
img diff = 3.905424570428288, fine_tune_threshold=3
img diff = 3.5474693923897282, fine_tune_threshold=3
img diff = 11.401199602438705, fine_tune_threshold=3
img diff = 8.70841949650434, fine_tune_threshold=3
img diff = 9.116098281554285, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 607, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17092" rejected: BADDATA: The command's data was incorrect or out of range.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
DEBUG - EEPROM SN: 'MULTI00714E'
DEBUG - Driver SN match.
DEBUG - Firmware version: 1.00 04/05/10 20:33:30
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
DEBUG - Loading map file: /opt/Boston Micromachines/Map/MULTI140.map expected count: 160
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Found 2 devices
Found 1 dichroics
Found source selection
Found 1 devices
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: none
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2fea90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2feb10>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3758.0173124999983, 1559.9568749999992]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2ffb10>
    -current position: 3999.9999374999984um
- index:0 -> C-RED 2#01-00001643d2be#EDT-0
--->using cameraIndex=0
Setting mode full.
Updating...
source motor: 
   Device 2 SN: 121474 (X-LHM100A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available sources: {'SRL': 11018.0, 'SGL': 38018.0, 'SBB': 65018.0, 'SLD': 92018.0, 'none': 0.0}
    -current position: SBB
dichroic motor:
   Device 1 SN: 121408 (X-LSM150A-SE03) -> Connection 1 (ASCII Serial port: /dev/ttyUSB0)
    -available dichroic positions: {'H': 133.07, 'J': 63.07, 'out': 0.0}
    -current position: J
availabel phasemask positions: 
 phasemask motors: 
   {'x': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2fea90>, 'y': <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2feb10>}
    -available positions:
   ('J1', [3218.0212499999984, 2543.0083124999987])
   ('J2', [3398.0199374999984, 1563.0048749999992])
   ('J3', [3578.0186249999983, 573.0001874999997])
   ('J4', [3758.0173124999988, -407.00324999999987])
   ('J5', [3018.0200624999984, 3522.9879374999987])
   ('H1', [8288.035874999996, 4223.003999999997])
   ('H2', [8468.034562499997, 3243.0005624999985])
   ('H3', [8648.033249999997, 2262.997124999999])
   ('H4', [8828.031937499998, 1282.9936874999994])
   ('H5', [9018.031874999997, 292.9889999999998])
    -current position: [3578.0186249999983, 573.0001874999997]um
focus motor:
   <asgard_alignment.ZaberMotor.LAC10AT4A object at 0x7f061f2ffb10>
    -current position: 3999.9999374999984um
img diff = 1.1418439250306998, fine_tune_threshold=3
img diff = 0.7875103356345221, fine_tune_threshold=3
img diff = 0.528609133701737, fine_tune_threshold=3
img diff = 0.4446918283392356, fine_tune_threshold=3
img diff = 0.3368952915887902, fine_tune_threshold=3
img diff = 0.29811649526893835, fine_tune_threshold=3
img diff = 0.2596289912963846, fine_tune_threshold=3
img diff = 0.23666213667486707, fine_tune_threshold=3
img diff = 0.2362112402303418, fine_tune_threshold=3
img diff = 0.21680802166179233, fine_tune_threshold=3
img diff = 0.20633140900456046, fine_tune_threshold=3
img diff = 0.20672173084101073, fine_tune_threshold=3
img diff = 0.3675664008366175, fine_tune_threshold=3
img diff = 0.9845832088866893, fine_tune_threshold=3
img diff = 1.5240015390756945, fine_tune_threshold=3
img diff = 0.8993508181356995, fine_tune_threshold=3
img diff = 0.6167514371106777, fine_tune_threshold=3
img diff = 0.47544322368599623, fine_tune_threshold=3
img diff = 0.3992926062484411, fine_tune_threshold=3
img diff = 0.32493365471237956, fine_tune_threshold=3
img diff = 0.28265960348012037, fine_tune_threshold=3
img diff = 0.2531665524252036, fine_tune_threshold=3
img diff = 0.2457507599266075, fine_tune_threshold=3
img diff = 0.2446351423359217, fine_tune_threshold=3
img diff = 0.2394926133691187, fine_tune_threshold=3
img diff = 0.23772003563283528, fine_tune_threshold=3
img diff = 0.3262553400874686, fine_tune_threshold=3
img diff = 0.640098854775866, fine_tune_threshold=3
img diff = 1.554186515332335, fine_tune_threshold=3
img diff = 1.0044595070921531, fine_tune_threshold=3
img diff = 0.659368875731678, fine_tune_threshold=3
img diff = 0.538960982267298, fine_tune_threshold=3
img diff = 0.43295049459903456, fine_tune_threshold=3
img diff = 0.35376569611326936, fine_tune_threshold=3
img diff = 0.32066833072710843, fine_tune_threshold=3
img diff = 0.24731321129410624, fine_tune_threshold=3
img diff = 0.2365399784744445, fine_tune_threshold=3
img diff = 0.22714174134759774, fine_tune_threshold=3
img diff = 0.22806441258441407, fine_tune_threshold=3
img diff = 0.21749002966093292, fine_tune_threshold=3
img diff = 0.23711324473897394, fine_tune_threshold=3
img diff = 0.5180819249006673, fine_tune_threshold=3
img diff = 1.2061072781840356, fine_tune_threshold=3
img diff = 1.2729849826625195, fine_tune_threshold=3
img diff = 0.7292712364366731, fine_tune_threshold=3
img diff = 0.5905972468881462, fine_tune_threshold=3
img diff = 0.45059542503182226, fine_tune_threshold=3
img diff = 0.37155142696342036, fine_tune_threshold=3
img diff = 0.31082606079262176, fine_tune_threshold=3
img diff = 0.2686483826096838, fine_tune_threshold=3
img diff = 0.26090681263459076, fine_tune_threshold=3
img diff = 0.22553593128941354, fine_tune_threshold=3
img diff = 0.20592406426042228, fine_tune_threshold=3
img diff = 0.2023694046338499, fine_tune_threshold=3
img diff = 0.20162860626363793, fine_tune_threshold=3
img diff = 0.37800287530637056, fine_tune_threshold=3
img diff = 0.857192115607631, fine_tune_threshold=3
img diff = 1.6779149566761475, fine_tune_threshold=3
img diff = 1.0305564002039151, fine_tune_threshold=3
img diff = 0.6562166545929039, fine_tune_threshold=3
img diff = 0.5340895419871703, fine_tune_threshold=3
img diff = 0.40138903048575536, fine_tune_threshold=3
img diff = 0.33187010376447634, fine_tune_threshold=3
img diff = 0.4210431815416398, fine_tune_threshold=3
img diff = 0.46365344573472206, fine_tune_threshold=3
img diff = 0.45726849877798154, fine_tune_threshold=3
img diff = 0.42183387765430114, fine_tune_threshold=3
img diff = 0.3958403693968303, fine_tune_threshold=3
img diff = 0.36327275779696055, fine_tune_threshold=3
img diff = 0.3069214364723203, fine_tune_threshold=3
img diff = 0.6225601467896676, fine_tune_threshold=3
img diff = 1.1832169335478167, fine_tune_threshold=3
img diff = 1.1418372941214745, fine_tune_threshold=3
img diff = 0.7783519135427491, fine_tune_threshold=3
img diff = 0.5821450243194674, fine_tune_threshold=3
img diff = 0.4468545720540087, fine_tune_threshold=3
img diff = 0.36430468447122544, fine_tune_threshold=3
img diff = 0.3139481730018001, fine_tune_threshold=3
img diff = 0.2763972745967207, fine_tune_threshold=3
img diff = 0.25956598093112826, fine_tune_threshold=3
img diff = 0.918085407887303, fine_tune_threshold=3
img diff = 0.6884280787367403, fine_tune_threshold=3
img diff = 0.52419453484502, fine_tune_threshold=3
img diff = 0.3835067946508847, fine_tune_threshold=3
img diff = 0.34077022062696827, fine_tune_threshold=3
img diff = 0.30090935222367066, fine_tune_threshold=3
img diff = 0.26867069566120516, fine_tune_threshold=3
img diff = 0.23237885480480827, fine_tune_threshold=3
img diff = 0.22318206910477487, fine_tune_threshold=3
img diff = 0.2166225243964308, fine_tune_threshold=3
img diff = 0.20762971651692264, fine_tune_threshold=3
img diff = 0.2748936869632293, fine_tune_threshold=3
img diff = 0.6083418533715257, fine_tune_threshold=3
img diff = 1.3129124808452546, fine_tune_threshold=3
img diff = 1.2354394173917582, fine_tune_threshold=3
img diff = 0.792392859347059, fine_tune_threshold=3
img diff = 0.5638022562560627, fine_tune_threshold=3
img diff = 0.49196865817598884, fine_tune_threshold=3
img diff = 0.3928251508470515, fine_tune_threshold=3
img diff = 0.3145013411078725, fine_tune_threshold=3
img diff = 0.2735606152618462, fine_tune_threshold=3
img diff = 0.25248167718601455, fine_tune_threshold=3
img diff = 0.23389484106760614, fine_tune_threshold=3
img diff = 0.23373804276186094, fine_tune_threshold=3
img diff = 0.23508528642742324, fine_tune_threshold=3
img diff = 0.23756809632291348, fine_tune_threshold=3
img diff = 0.3644521975812256, fine_tune_threshold=3
img diff = 0.7985077524348182, fine_tune_threshold=3
img diff = 1.6161854077619298, fine_tune_threshold=3
img diff = 0.9771730665968065, fine_tune_threshold=3
img diff = 0.6891682605947307, fine_tune_threshold=3
img diff = 0.5362221570243675, fine_tune_threshold=3
img diff = 0.4022541299137391, fine_tune_threshold=3
img diff = 0.3628097552268734, fine_tune_threshold=3
img diff = 0.3031807199995038, fine_tune_threshold=3
img diff = 0.2679931392194997, fine_tune_threshold=3
img diff = 0.24564276362722703, fine_tune_threshold=3
img diff = 0.228976485452035, fine_tune_threshold=3
img diff = 0.22659941533696315, fine_tune_threshold=3
img diff = 0.21818923898789855, fine_tune_threshold=3
img diff = 0.29805373001792446, fine_tune_threshold=3
img diff = 0.7042494354078326, fine_tune_threshold=3
img diff = 1.5010093653405219, fine_tune_threshold=3
img diff = 0.9795611463278603, fine_tune_threshold=3
img diff = 0.7031194690511963, fine_tune_threshold=3
img diff = 0.5509019203607265, fine_tune_threshold=3
img diff = 0.4027496433188876, fine_tune_threshold=3
img diff = 0.32891970901420275, fine_tune_threshold=3
img diff = 0.28898604697911967, fine_tune_threshold=3
img diff = 0.2683874904328336, fine_tune_threshold=3
img diff = 0.2406428825507617, fine_tune_threshold=3
img diff = 0.22554409134531936, fine_tune_threshold=3
img diff = 0.21407730333856217, fine_tune_threshold=3
img diff = 0.21163146608130645, fine_tune_threshold=3
img diff = 0.22122466697043952, fine_tune_threshold=3
img diff = 0.500959775643591, fine_tune_threshold=3
img diff = 1.1032912372847994, fine_tune_threshold=3
img diff = 1.3806358359682853, fine_tune_threshold=3
img diff = 0.8066607580271835, fine_tune_threshold=3
img diff = 0.5592748751932395, fine_tune_threshold=3
img diff = 0.46391480752560743, fine_tune_threshold=3
img diff = 0.37281526645554597, fine_tune_threshold=3
img diff = 0.3123499066615952, fine_tune_threshold=3
img diff = 0.3576181468135022, fine_tune_threshold=3
img diff = 0.4603141387363878, fine_tune_threshold=3
img diff = 0.44864381528770303, fine_tune_threshold=3
img diff = 0.4138356178759818, fine_tune_threshold=3
img diff = 0.3818316683352444, fine_tune_threshold=3
img diff = 0.33450859778557457, fine_tune_threshold=3
img diff = 0.43559562013333203, fine_tune_threshold=3
img diff = 0.9713891542661468, fine_tune_threshold=3
img diff = 1.5802141475062004, fine_tune_threshold=3
img diff = 0.9060085262739136, fine_tune_threshold=3
img diff = 0.6806335128466992, fine_tune_threshold=3
img diff = 0.4473117297869172, fine_tune_threshold=3
img diff = 0.38553726209658934, fine_tune_threshold=3
img diff = 0.33608195630078097, fine_tune_threshold=3
img diff = 0.2735508555973465, fine_tune_threshold=3
img diff = 0.25657930492267844, fine_tune_threshold=3
img diff = 0.24200502719905542, fine_tune_threshold=3
img diff = 0.9061967331676452, fine_tune_threshold=3
img diff = 0.5754238275176755, fine_tune_threshold=3
img diff = 0.4748689375874474, fine_tune_threshold=3
img diff = 0.3358042408470858, fine_tune_threshold=3
img diff = 0.29835100157529987, fine_tune_threshold=3
img diff = 0.24620851165608, fine_tune_threshold=3
img diff = 0.2324132776816918, fine_tune_threshold=3
img diff = 0.2180796208625824, fine_tune_threshold=3
img diff = 0.21202076483933652, fine_tune_threshold=3
img diff = 0.21618636241918382, fine_tune_threshold=3
img diff = 0.23070524735781273, fine_tune_threshold=3
img diff = 0.2630827472587942, fine_tune_threshold=3
img diff = 0.5953960705153845, fine_tune_threshold=3
img diff = 1.230514833944521, fine_tune_threshold=3
img diff = 0.952023645701084, fine_tune_threshold=3
img diff = 0.693103957990593, fine_tune_threshold=3
img diff = 0.5048034652037916, fine_tune_threshold=3
img diff = 0.3700536536314934, fine_tune_threshold=3
img diff = 0.34941452055809025, fine_tune_threshold=3
img diff = 0.25897124388278725, fine_tune_threshold=3
img diff = 0.2636640236868379, fine_tune_threshold=3
img diff = 0.21963803344691607, fine_tune_threshold=3
img diff = 0.22400478102219268, fine_tune_threshold=3
img diff = 0.23196415031285655, fine_tune_threshold=3
img diff = 0.233285071010726, fine_tune_threshold=3
img diff = 0.23744025909577118, fine_tune_threshold=3
img diff = 0.4380127389663503, fine_tune_threshold=3
img diff = 0.9190126598927351, fine_tune_threshold=3
img diff = 1.36020561129664, fine_tune_threshold=3
img diff = 0.7979242125582953, fine_tune_threshold=3
img diff = 0.5339607289441419, fine_tune_threshold=3
img diff = 0.43935390723997064, fine_tune_threshold=3
img diff = 0.3535624960821238, fine_tune_threshold=3
img diff = 0.3012891231393485, fine_tune_threshold=3
img diff = 0.2677069839834825, fine_tune_threshold=3
img diff = 0.228184209852016, fine_tune_threshold=3
img diff = 0.22188672277365085, fine_tune_threshold=3
img diff = 0.21820109291504955, fine_tune_threshold=3
img diff = 0.2200291381148607, fine_tune_threshold=3
img diff = 0.2287858880508187, fine_tune_threshold=3
img diff = 0.3188721707701012, fine_tune_threshold=3
img diff = 0.6634736114207719, fine_tune_threshold=3
img diff = 1.291411594286377, fine_tune_threshold=3
img diff = 0.8275898047496963, fine_tune_threshold=3
img diff = 0.6143444673223087, fine_tune_threshold=3
img diff = 0.47500916531269843, fine_tune_threshold=3
img diff = 0.3621827319154039, fine_tune_threshold=3
img diff = 0.3118714424618275, fine_tune_threshold=3
img diff = 0.28381401187716354, fine_tune_threshold=3
img diff = 0.2506367091131665, fine_tune_threshold=3
img diff = 0.22199367202930786, fine_tune_threshold=3
img diff = 0.21133022956227532, fine_tune_threshold=3
img diff = 0.21345597704587857, fine_tune_threshold=3
img diff = 0.22271687987643196, fine_tune_threshold=3
img diff = 0.25186102176236214, fine_tune_threshold=3
img diff = 0.5706120698482716, fine_tune_threshold=3
img diff = 1.3040092748287773, fine_tune_threshold=3
img diff = 1.186864729675832, fine_tune_threshold=3
img diff = 0.6488730295294821, fine_tune_threshold=3
img diff = 0.5357202078837009, fine_tune_threshold=3
img diff = 0.44371495077656187, fine_tune_threshold=3
img diff = 0.34225865903762887, fine_tune_threshold=3
img diff = 0.2860452462481958, fine_tune_threshold=3
img diff = 0.34674307146597444, fine_tune_threshold=3
img diff = 0.4551667683826479, fine_tune_threshold=3
img diff = 0.41968077874190124, fine_tune_threshold=3
img diff = 0.3915526546349517, fine_tune_threshold=3
img diff = 0.3338538371933978, fine_tune_threshold=3
img diff = 0.28536312942953157, fine_tune_threshold=3
img diff = 0.375229103804703, fine_tune_threshold=3
img diff = 0.932458647242679, fine_tune_threshold=3
img diff = 1.3828597305535084, fine_tune_threshold=3
img diff = 0.8303126425876538, fine_tune_threshold=3
img diff = 0.5558063059156633, fine_tune_threshold=3
img diff = 0.4302390536004255, fine_tune_threshold=3
img diff = 0.34568679120270773, fine_tune_threshold=3
img diff = 0.2973402829408496, fine_tune_threshold=3
img diff = 0.27050013037063214, fine_tune_threshold=3
img diff = 0.23557238767664807, fine_tune_threshold=3
img diff = 0.2143572297850389, fine_tune_threshold=3
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 607, in <module>
    phasemask.move_absolute( initial_pos )  # move back to initial_position 
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 203, in move_absolute
    self.motors["y"].move_absolute(new_pos[1], units)
  File "/home/heimdallr/Documents/asgard-alignment/asgard_alignment/ZaberMotor.py", line 141, in move_absolute
    self.axis.move_absolute(new_pos, unit=units, wait_until_idle=True)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/axis.py", line 440, in move_absolute
    call("device/move", request)
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 188, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message, response_buffers[1])
zaber_motion.exceptions.command_failed_exception.CommandFailedException: CommandFailedException: Command "move abs -17092" rejected: BADDATA: The command's data was incorrect or out of range.
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 481, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
WARN - Error -6 claiming USB interface: Resource busy
WARN - No USB DM devices were found.
Killed
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
WARN - Error -6 claiming USB interface: Resource busy
WARN - No USB DM devices were found.
Killed
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
WARN - Error -6 claiming USB interface: Resource busy
WARN - No USB DM devices were found.
DEBUG - SDK Install Path: /opt/Boston Micromachines
INFO - Enumerating devices, looking for SN: MULTI00714E
DEBUG - Product: DM Driver USB Interface
DEBUG - Manufacturer: Cambridge Innovations
WARN - Error -6 claiming USB interface: Resource busy
WARN - No USB DM devices were found.
Killed
 THIS TAKES SEVERAL MINUTES TO RUN. WHAT WE ARE DOING IS: 
     - connect to motors, DM and camera. Set up detector with darks, bad pixel mask etc.
      - iterate through all phase masks on beam 3 (in Sydney) and update phasemask positions and save them.
      - This should only serve as example. must be called from asgard_alignment folder
     DEVELOPED IN SYDNEY WITH MOTORS ONLY ON BEAM 3 - UPDATE ACCORDINGLY 
     DOING AUTOMATED SEARCH OVER LIMITED RADIUS, IF RESULTS ARE POOR - ADJUST SEARCH RADIUS / GRID.    
Traceback (most recent call last):
  File "/home/heimdallr/Documents/asgard-alignment/playground/phasemask_centering_tool.py", line 481, in <module>
    connection =  Connection.open_serial_port("/dev/ttyUSB0")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/ascii/connection.py", line 147, in open_serial_port
    response = call(
               ^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 69, in call
    return process_response(response_buffers, make_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/heimdallr/miniconda3/lib/python3.11/site-packages/zaber_motion/call.py", line 189, in process_response
    raise convert_exception(response_dto.error_type, response_dto.error_message)
zaber_motion.exceptions.serial_port_busy_exception.SerialPortBusyException: SerialPortBusyException: Cannot open serial port: Port is likely already opened by another application. Please close the application that is using the port.
